//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\util\MathUtils.java
//

#include "J2ObjC_source.h"
#include "MathUtils.h"


@implementation ADMathUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADMathUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)constrainWithInt:(jint)amount
                 withInt:(jint)low
                 withInt:(jint)high {
  return ADMathUtils_constrainWithInt_withInt_withInt_(amount, low, high);
}

+ (jfloat)constrainWithFloat:(jfloat)amount
                   withFloat:(jfloat)low
                   withFloat:(jfloat)high {
  return ADMathUtils_constrainWithFloat_withFloat_withFloat_(amount, low, high);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "F", 0x9, 0, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(constrainWithInt:withInt:withInt:);
  methods[2].selector = @selector(constrainWithFloat:withFloat:withFloat:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "constrain", "III", "FFF" };
  static const J2ObjcClassInfo _ADMathUtils = { "MathUtils", "r.android.util", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_ADMathUtils;
}

@end

void ADMathUtils_init(ADMathUtils *self) {
  NSObject_init(self);
}

ADMathUtils *new_ADMathUtils_init() {
  J2OBJC_NEW_IMPL(ADMathUtils, init)
}

ADMathUtils *create_ADMathUtils_init() {
  J2OBJC_CREATE_IMPL(ADMathUtils, init)
}

jint ADMathUtils_constrainWithInt_withInt_withInt_(jint amount, jint low, jint high) {
  ADMathUtils_initialize();
  return amount < low ? low : (amount > high ? high : amount);
}

jfloat ADMathUtils_constrainWithFloat_withFloat_withFloat_(jfloat amount, jfloat low, jfloat high) {
  ADMathUtils_initialize();
  return amount < low ? low : (amount > high ? high : amount);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADMathUtils)
