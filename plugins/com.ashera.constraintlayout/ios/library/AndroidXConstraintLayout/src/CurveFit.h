//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\motion\utils\CurveFit.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CurveFit")
#ifdef RESTRICT_CurveFit
#define INCLUDE_ALL_CurveFit 0
#else
#define INCLUDE_ALL_CurveFit 1
#endif
#undef RESTRICT_CurveFit
#ifdef INCLUDE_ADXCurveFit_Constant
#define INCLUDE_ADXCurveFit 1
#endif

#if !defined (ADXCurveFit_) && (INCLUDE_ALL_CurveFit || defined(INCLUDE_ADXCurveFit))
#define ADXCurveFit_

@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSObjectArray;

/*!
 @brief Base class for curve fitting / interpolation
  Curve fits must be capable of being differentiable and extend beyond the points (extrapolate)
 */
@interface ADXCurveFit : NSObject

#pragma mark Public

- (instancetype)init;

+ (ADXCurveFit *)getWithInt:(jint)type
            withDoubleArray:(IOSDoubleArray *)time
           withDoubleArray2:(IOSObjectArray *)y;

+ (ADXCurveFit *)getArcWithIntArray:(IOSIntArray *)arcModes
                    withDoubleArray:(IOSDoubleArray *)time
                   withDoubleArray2:(IOSObjectArray *)y;

- (void)getPosWithDouble:(jdouble)t
         withDoubleArray:(IOSDoubleArray *)v;

- (void)getPosWithDouble:(jdouble)t
          withFloatArray:(IOSFloatArray *)v;

- (jdouble)getPosWithDouble:(jdouble)t
                    withInt:(jint)j;

- (void)getSlopeWithDouble:(jdouble)t
           withDoubleArray:(IOSDoubleArray *)v;

- (jdouble)getSlopeWithDouble:(jdouble)t
                      withInt:(jint)j;

- (IOSDoubleArray *)getTimePoints;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXCurveFit)

inline jint ADXCurveFit_get_SPLINE(void);
#define ADXCurveFit_SPLINE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXCurveFit, SPLINE, jint)

inline jint ADXCurveFit_get_LINEAR(void);
#define ADXCurveFit_LINEAR 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXCurveFit, LINEAR, jint)

inline jint ADXCurveFit_get_CONSTANT(void);
#define ADXCurveFit_CONSTANT 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXCurveFit, CONSTANT, jint)

FOUNDATION_EXPORT void ADXCurveFit_init(ADXCurveFit *self);

FOUNDATION_EXPORT ADXCurveFit *ADXCurveFit_getWithInt_withDoubleArray_withDoubleArray2_(jint type, IOSDoubleArray *time, IOSObjectArray *y);

FOUNDATION_EXPORT ADXCurveFit *ADXCurveFit_getArcWithIntArray_withDoubleArray_withDoubleArray2_(IOSIntArray *arcModes, IOSDoubleArray *time, IOSObjectArray *y);

J2OBJC_TYPE_LITERAL_HEADER(ADXCurveFit)

@compatibility_alias AndroidxConstraintlayoutCoreMotionUtilsCurveFit ADXCurveFit;

#endif

#if !defined (ADXCurveFit_Constant_) && (INCLUDE_ALL_CurveFit || defined(INCLUDE_ADXCurveFit_Constant))
#define ADXCurveFit_Constant_

@class IOSDoubleArray;
@class IOSFloatArray;

@interface ADXCurveFit_Constant : ADXCurveFit {
 @public
  jdouble mTime_;
  IOSDoubleArray *mValue_;
}

#pragma mark Public

- (void)getPosWithDouble:(jdouble)t
         withDoubleArray:(IOSDoubleArray *)v;

- (void)getPosWithDouble:(jdouble)t
          withFloatArray:(IOSFloatArray *)v;

- (jdouble)getPosWithDouble:(jdouble)t
                    withInt:(jint)j;

- (void)getSlopeWithDouble:(jdouble)t
           withDoubleArray:(IOSDoubleArray *)v;

- (jdouble)getSlopeWithDouble:(jdouble)t
                      withInt:(jint)j;

- (IOSDoubleArray *)getTimePoints;

#pragma mark Package-Private

- (instancetype)initWithDouble:(jdouble)time
               withDoubleArray:(IOSDoubleArray *)value;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXCurveFit_Constant)

J2OBJC_FIELD_SETTER(ADXCurveFit_Constant, mValue_, IOSDoubleArray *)

FOUNDATION_EXPORT void ADXCurveFit_Constant_initWithDouble_withDoubleArray_(ADXCurveFit_Constant *self, jdouble time, IOSDoubleArray *value);

FOUNDATION_EXPORT ADXCurveFit_Constant *new_ADXCurveFit_Constant_initWithDouble_withDoubleArray_(jdouble time, IOSDoubleArray *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCurveFit_Constant *create_ADXCurveFit_Constant_initWithDouble_withDoubleArray_(jdouble time, IOSDoubleArray *value);

J2OBJC_TYPE_LITERAL_HEADER(ADXCurveFit_Constant)

#endif

#pragma pop_macro("INCLUDE_ALL_CurveFit")
