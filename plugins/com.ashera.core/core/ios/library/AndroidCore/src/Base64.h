//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\util\Base64.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Base64")
#ifdef RESTRICT_Base64
#define INCLUDE_ALL_Base64 0
#else
#define INCLUDE_ALL_Base64 1
#endif
#undef RESTRICT_Base64

#if !defined (ADBase64_) && (INCLUDE_ALL_Base64 || defined(INCLUDE_ADBase64))
#define ADBase64_

@class IOSByteArray;

@interface ADBase64 : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSByteArray *)decodeWithNSString:(NSString *)encoded
                        withNSString:(NSString *)default2;

+ (NSString *)encodeToStringWithByteArray:(IOSByteArray *)data
                             withNSString:(NSString *)noWrap;

@end

J2OBJC_EMPTY_STATIC_INIT(ADBase64)

inline NSString *ADBase64_get_DEFAULT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADBase64_DEFAULT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADBase64, DEFAULT, NSString *)

inline NSString *ADBase64_get_NO_WRAP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADBase64_NO_WRAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADBase64, NO_WRAP, NSString *)

FOUNDATION_EXPORT void ADBase64_init(ADBase64 *self);

FOUNDATION_EXPORT ADBase64 *new_ADBase64_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADBase64 *create_ADBase64_init(void);

FOUNDATION_EXPORT IOSByteArray *ADBase64_decodeWithNSString_withNSString_(NSString *encoded, NSString *default2);

FOUNDATION_EXPORT NSString *ADBase64_encodeToStringWithByteArray_withNSString_(IOSByteArray *data, NSString *noWrap);

J2OBJC_TYPE_LITERAL_HEADER(ADBase64)

@compatibility_alias RAndroidUtilBase64 ADBase64;

#endif

#pragma pop_macro("INCLUDE_ALL_Base64")
