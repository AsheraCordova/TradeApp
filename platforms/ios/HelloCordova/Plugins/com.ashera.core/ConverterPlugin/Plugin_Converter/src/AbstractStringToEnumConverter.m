//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\Plugin_Converter\src\com\ashera\converter\AbstractStringToEnumConverter.java
//

#include "AbstractStringToEnumConverter.h"
#include "IFragment.h"
#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"


@implementation ASAbstractStringToEnumConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASAbstractStringToEnumConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)convertFromWithId:(NSString *)value
        withJavaUtilMap:(id<JavaUtilMap>)dependentAttributesMap
        withASIFragment:(id<ASIFragment>)fragment {
  id<JavaUtilMap> mapping = JreRetainedLocalValue([self getMapping]);
  if ([((id<JavaUtilMap>) nil_chk(mapping)) containsKeyWithId:value]) {
    return [mapping getWithId:value];
  }
  id defaultValue = JreRetainedLocalValue([self getDefault]);
  return defaultValue;
}

- (NSString *)convertToWithId:(id)value
              withASIFragment:(id<ASIFragment>)fragment {
  id<JavaUtilMap> mapping = JreRetainedLocalValue([self getMapping]);
  NSString *convertValue = nil;
  id<JavaUtilSet> keySet = JreRetainedLocalValue([((id<JavaUtilMap>) nil_chk(mapping)) keySet]);
  for (NSString * __strong key in nil_chk(keySet)) {
    id mappingValue = JreRetainedLocalValue([mapping getWithId:key]);
    if (mappingValue == value) {
      convertValue = key;
      break;
    }
  }
  return convertValue;
}

- (id<JavaUtilMap>)getMapping {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getDefault {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilList>)getDependentAttributes {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertFromWithId:withJavaUtilMap:withASIFragment:);
  methods[2].selector = @selector(convertToWithId:withASIFragment:);
  methods[3].selector = @selector(getMapping);
  methods[4].selector = @selector(getDefault);
  methods[5].selector = @selector(getDependentAttributes);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertFrom", "LNSString;LJavaUtilMap;LASIFragment;", "(Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;Lcom/ashera/core/IFragment;)Ljava/lang/Object;", "convertTo", "LNSObject;LASIFragment;", "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "()Ljava/util/List<Ljava/lang/String;>;", "Ljava/lang/Object;Lcom/ashera/converter/IConverter<Ljava/lang/Object;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ASAbstractStringToEnumConverter = { "AbstractStringToEnumConverter", "com.ashera.converter", ptrTable, methods, NULL, 7, 0x401, 6, 0, -1, -1, -1, 7, -1 };
  return &_ASAbstractStringToEnumConverter;
}

@end

void ASAbstractStringToEnumConverter_init(ASAbstractStringToEnumConverter *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASAbstractStringToEnumConverter)
