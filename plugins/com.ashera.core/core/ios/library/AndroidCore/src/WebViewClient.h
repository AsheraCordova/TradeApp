//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\webkit\WebViewClient.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_WebViewClient")
#ifdef RESTRICT_WebViewClient
#define INCLUDE_ALL_WebViewClient 0
#else
#define INCLUDE_ALL_WebViewClient 1
#endif
#undef RESTRICT_WebViewClient

#if !defined (ADWebViewClient_) && (INCLUDE_ALL_WebViewClient || defined(INCLUDE_ADWebViewClient))
#define ADWebViewClient_

@class ADClientCertRequest;
@class ADHttpAuthHandler;
@class ADSslError;
@class ADSslErrorHandler;
@class ADWebResourceResponse;
@class ADWebView;
@protocol ADBitmap;

@interface ADWebViewClient : NSObject

#pragma mark Public

- (instancetype)init;

- (void)onPageFinishedWithADWebView:(ADWebView *)view
                       withNSString:(NSString *)url;

- (void)onPageStartedWithADWebView:(ADWebView *)view
                      withNSString:(NSString *)url
                      withADBitmap:(id<ADBitmap>)favicon;

- (void)onReceivedClientCertRequestWithADWebView:(ADWebView *)view
                         withADClientCertRequest:(ADClientCertRequest *)request;

- (void)onReceivedErrorWithADWebView:(ADWebView *)view
                             withInt:(jint)errorCode
                        withNSString:(NSString *)description_
                        withNSString:(NSString *)failingUrl;

- (void)onReceivedHttpAuthRequestWithADWebView:(ADWebView *)view
                         withADHttpAuthHandler:(ADHttpAuthHandler *)handler
                                  withNSString:(NSString *)host
                                  withNSString:(NSString *)realm;

- (void)onReceivedSslErrorWithADWebView:(ADWebView *)view
                  withADSslErrorHandler:(ADSslErrorHandler *)handler
                         withADSslError:(ADSslError *)error;

- (ADWebResourceResponse *)shouldInterceptRequestWithADWebView:(ADWebView *)view
                                                  withNSString:(NSString *)url;

- (jboolean)shouldOverrideUrlLoadingWithADWebView:(ADWebView *)view
                                     withNSString:(NSString *)url;

@end

J2OBJC_EMPTY_STATIC_INIT(ADWebViewClient)

inline jint ADWebViewClient_get_ERROR_HOST_LOOKUP(void);
#define ADWebViewClient_ERROR_HOST_LOOKUP 0
J2OBJC_STATIC_FIELD_CONSTANT(ADWebViewClient, ERROR_HOST_LOOKUP, jint)

inline jint ADWebViewClient_get_ERROR_UNSUPPORTED_SCHEME(void);
#define ADWebViewClient_ERROR_UNSUPPORTED_SCHEME 0
J2OBJC_STATIC_FIELD_CONSTANT(ADWebViewClient, ERROR_UNSUPPORTED_SCHEME, jint)

FOUNDATION_EXPORT void ADWebViewClient_init(ADWebViewClient *self);

FOUNDATION_EXPORT ADWebViewClient *new_ADWebViewClient_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADWebViewClient *create_ADWebViewClient_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADWebViewClient)

@compatibility_alias RAndroidWebkitWebViewClient ADWebViewClient;

#endif

#pragma pop_macro("INCLUDE_ALL_WebViewClient")
