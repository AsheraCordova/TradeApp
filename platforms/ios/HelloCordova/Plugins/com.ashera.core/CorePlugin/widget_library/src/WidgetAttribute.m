//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\WidgetAttribute.java
//

#include "IWidget.h"
#include "J2ObjC_source.h"
#include "WidgetAttribute.h"


@interface ASWidgetAttribute () {
 @public
  NSString *attributeName_;
  NSString *attributeType_;
  NSString *arrayType_;
  NSString *arrayListToFinalType_;
  jint order_;
  jboolean isForChild_;
  NSString *decorator_;
  jint bufferStrategy_;
  jint updateUiFlag_;
  jboolean applyBeforeChildAdd_;
  jint simpleWrapableViewStrategy_;
}

- (instancetype)initWithASWidgetAttribute_Builder:(ASWidgetAttribute_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(ASWidgetAttribute, attributeName_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttribute, attributeType_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttribute, arrayType_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttribute, arrayListToFinalType_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttribute, decorator_, NSString *)

__attribute__((unused)) static void ASWidgetAttribute_initWithASWidgetAttribute_Builder_(ASWidgetAttribute *self, ASWidgetAttribute_Builder *builder);

__attribute__((unused)) static ASWidgetAttribute *new_ASWidgetAttribute_initWithASWidgetAttribute_Builder_(ASWidgetAttribute_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static ASWidgetAttribute *create_ASWidgetAttribute_initWithASWidgetAttribute_Builder_(ASWidgetAttribute_Builder *builder);

@interface ASWidgetAttribute_Builder () {
 @public
  NSString *attributeName_;
  NSString *attributeType_;
  jint order_;
  jint simpleWrapableViewStrategy_;
  jboolean isForChild_;
  NSString *decorator_;
  jint bufferStrategy_;
  jint updateUiFlag_;
  jboolean applyBeforeChildAdd_;
  NSString *arrayType_;
  NSString *arrayListToFinalType_;
}

@end

J2OBJC_FIELD_SETTER(ASWidgetAttribute_Builder, attributeName_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttribute_Builder, attributeType_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttribute_Builder, decorator_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttribute_Builder, arrayType_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttribute_Builder, arrayListToFinalType_, NSString *)

@implementation ASWidgetAttribute

- (instancetype)initWithASWidgetAttribute_Builder:(ASWidgetAttribute_Builder *)builder {
  ASWidgetAttribute_initWithASWidgetAttribute_Builder_(self, builder);
  return self;
}

- (NSString *)getArrayListToFinalType {
  return arrayListToFinalType_;
}

- (void)setArrayListToFinalTypeWithNSString:(NSString *)arrayListToFinalType {
  JreStrongAssign(&self->arrayListToFinalType_, arrayListToFinalType);
}

- (jboolean)isApplyBeforeChildAdd {
  return applyBeforeChildAdd_;
}

- (NSString *)getAttributeName {
  return attributeName_;
}

- (void)setAttributeNameWithNSString:(NSString *)attributeName {
  JreStrongAssign(&self->attributeName_, attributeName);
}

- (NSString *)getAttributeType {
  return attributeType_;
}

- (void)setAttributeTypeWithNSString:(NSString *)attributeType {
  JreStrongAssign(&self->attributeType_, attributeType);
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[NSString class]]) {
    return [((NSString *) nil_chk(attributeName_)) java_equalsIgnoreCase:(NSString *) obj];
  }
  return [((NSString *) nil_chk(attributeName_)) isEqual:((ASWidgetAttribute *) nil_chk(((ASWidgetAttribute *) cast_chk(obj, [ASWidgetAttribute class]))))->attributeName_];
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(attributeName_)) hash]);
}

- (jint)getOrder {
  return order_;
}

- (void)setOrderWithInt:(jint)order {
  self->order_ = order;
}

- (jboolean)isForChild {
  return isForChild_;
}

- (void)setForChildWithBoolean:(jboolean)isForChild {
  self->isForChild_ = isForChild;
}

- (NSString *)getDecorator {
  return decorator_;
}

- (void)setDecoratorWithNSString:(NSString *)decorator {
  JreStrongAssign(&self->decorator_, decorator);
}

- (jint)getBufferStrategy {
  return bufferStrategy_;
}

- (void)setBufferStrategyWithInt:(jint)bufferStrategy {
  self->bufferStrategy_ = bufferStrategy;
}

- (jint)getUpdateUiFlag {
  return updateUiFlag_;
}

- (void)setUpdateUiFlagWithInt:(jint)updateUiFlag {
  self->updateUiFlag_ = updateUiFlag;
}

- (NSString *)description {
  return attributeName_;
}

- (NSString *)getArrayType {
  return arrayType_;
}

- (void)setArrayTypeWithNSString:(NSString *)arrayType {
  JreStrongAssign(&self->arrayType_, arrayType);
}

+ (ASWidgetAttribute_Builder *)builder {
  return ASWidgetAttribute_builder();
}

- (jint)getSimpleWrapableViewStrategy {
  return simpleWrapableViewStrategy_;
}

- (void)setSimpleWrapableViewStrategyWithInt:(jint)simpleWrapableViewStrategy {
  self->simpleWrapableViewStrategy_ = simpleWrapableViewStrategy;
}

- (void)dealloc {
  RELEASE_(attributeName_);
  RELEASE_(attributeType_);
  RELEASE_(arrayType_);
  RELEASE_(arrayListToFinalType_);
  RELEASE_(decorator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 2, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASWidgetAttribute_Builder:);
  methods[1].selector = @selector(getArrayListToFinalType);
  methods[2].selector = @selector(setArrayListToFinalTypeWithNSString:);
  methods[3].selector = @selector(isApplyBeforeChildAdd);
  methods[4].selector = @selector(getAttributeName);
  methods[5].selector = @selector(setAttributeNameWithNSString:);
  methods[6].selector = @selector(getAttributeType);
  methods[7].selector = @selector(setAttributeTypeWithNSString:);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  methods[10].selector = @selector(getOrder);
  methods[11].selector = @selector(setOrderWithInt:);
  methods[12].selector = @selector(isForChild);
  methods[13].selector = @selector(setForChildWithBoolean:);
  methods[14].selector = @selector(getDecorator);
  methods[15].selector = @selector(setDecoratorWithNSString:);
  methods[16].selector = @selector(getBufferStrategy);
  methods[17].selector = @selector(setBufferStrategyWithInt:);
  methods[18].selector = @selector(getUpdateUiFlag);
  methods[19].selector = @selector(setUpdateUiFlagWithInt:);
  methods[20].selector = @selector(description);
  methods[21].selector = @selector(getArrayType);
  methods[22].selector = @selector(setArrayTypeWithNSString:);
  methods[23].selector = @selector(builder);
  methods[24].selector = @selector(getSimpleWrapableViewStrategy);
  methods[25].selector = @selector(setSimpleWrapableViewStrategyWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "attributeName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeType_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "arrayType_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "arrayListToFinalType_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "order_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isForChild_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "decorator_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bufferStrategy_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "updateUiFlag_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "applyBeforeChildAdd_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "simpleWrapableViewStrategy_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASWidgetAttribute_Builder;", "setArrayListToFinalType", "LNSString;", "setAttributeName", "setAttributeType", "equals", "LNSObject;", "hashCode", "setOrder", "I", "setForChild", "Z", "setDecorator", "setBufferStrategy", "setUpdateUiFlag", "toString", "setArrayType", "setSimpleWrapableViewStrategy" };
  static const J2ObjcClassInfo _ASWidgetAttribute = { "WidgetAttribute", "com.ashera.widget", ptrTable, methods, fields, 7, 0x1, 26, 11, -1, 0, -1, -1, -1 };
  return &_ASWidgetAttribute;
}

@end

void ASWidgetAttribute_initWithASWidgetAttribute_Builder_(ASWidgetAttribute *self, ASWidgetAttribute_Builder *builder) {
  NSObject_init(self);
  self->simpleWrapableViewStrategy_ = ASIWidget_APPLY_TO_VIEW_WRAPPER;
  JreStrongAssign(&self->attributeName_, ((ASWidgetAttribute_Builder *) nil_chk(builder))->attributeName_);
  JreStrongAssign(&self->attributeType_, builder->attributeType_);
  self->order_ = builder->order_;
  self->isForChild_ = builder->isForChild_;
  JreStrongAssign(&self->decorator_, builder->decorator_);
  self->bufferStrategy_ = builder->bufferStrategy_;
  self->updateUiFlag_ = builder->updateUiFlag_;
  self->applyBeforeChildAdd_ = builder->applyBeforeChildAdd_;
  JreStrongAssign(&self->arrayType_, builder->arrayType_);
  JreStrongAssign(&self->arrayListToFinalType_, builder->arrayListToFinalType_);
  self->simpleWrapableViewStrategy_ = builder->simpleWrapableViewStrategy_;
}

ASWidgetAttribute *new_ASWidgetAttribute_initWithASWidgetAttribute_Builder_(ASWidgetAttribute_Builder *builder) {
  J2OBJC_NEW_IMPL(ASWidgetAttribute, initWithASWidgetAttribute_Builder_, builder)
}

ASWidgetAttribute *create_ASWidgetAttribute_initWithASWidgetAttribute_Builder_(ASWidgetAttribute_Builder *builder) {
  J2OBJC_CREATE_IMPL(ASWidgetAttribute, initWithASWidgetAttribute_Builder_, builder)
}

ASWidgetAttribute_Builder *ASWidgetAttribute_builder() {
  ASWidgetAttribute_initialize();
  return create_ASWidgetAttribute_Builder_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASWidgetAttribute)

@implementation ASWidgetAttribute_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASWidgetAttribute_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ASWidgetAttribute_Builder *)withNameWithNSString:(NSString *)attributeName {
  JreStrongAssign(&self->attributeName_, attributeName);
  return self;
}

- (ASWidgetAttribute_Builder *)withTypeWithNSString:(NSString *)attributeType {
  JreStrongAssign(&self->attributeType_, attributeType);
  return self;
}

- (ASWidgetAttribute_Builder *)withArrayTypeWithNSString:(NSString *)arrayType {
  JreStrongAssign(&self->arrayType_, arrayType);
  return self;
}

- (ASWidgetAttribute_Builder *)withArrayListToFinalTypeWithNSString:(NSString *)arrayListToFinalType {
  JreStrongAssign(&self->arrayListToFinalType_, arrayListToFinalType);
  return self;
}

- (ASWidgetAttribute_Builder *)withOrderWithInt:(jint)order {
  self->order_ = order;
  return self;
}

- (ASWidgetAttribute_Builder *)forChild {
  self->isForChild_ = true;
  return self;
}

- (ASWidgetAttribute_Builder *)withDecoratorWithNSString:(NSString *)decorator {
  JreStrongAssign(&self->decorator_, decorator);
  return self;
}

- (ASWidgetAttribute_Builder *)withBufferStrategyWithInt:(jint)bufferStrategy {
  self->bufferStrategy_ = bufferStrategy;
  return self;
}

- (ASWidgetAttribute_Builder *)withSimpleWrapableViewStrategyWithInt:(jint)simpleWrapableViewStrategy {
  self->simpleWrapableViewStrategy_ = simpleWrapableViewStrategy;
  return self;
}

- (ASWidgetAttribute_Builder *)withUiFlagWithInt:(jint)updateUiFlag {
  self->updateUiFlag_ = updateUiFlag;
  return self;
}

- (ASWidgetAttribute_Builder *)beforeChildAdd {
  self->applyBeforeChildAdd_ = true;
  return self;
}

- (ASWidgetAttribute *)build {
  return create_ASWidgetAttribute_initWithASWidgetAttribute_Builder_(self);
}

- (void)dealloc {
  RELEASE_(attributeName_);
  RELEASE_(attributeType_);
  RELEASE_(decorator_);
  RELEASE_(arrayType_);
  RELEASE_(arrayListToFinalType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, 7, 1, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, 8, 6, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, 9, 6, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, 10, 6, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute_Builder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASWidgetAttribute;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(withNameWithNSString:);
  methods[2].selector = @selector(withTypeWithNSString:);
  methods[3].selector = @selector(withArrayTypeWithNSString:);
  methods[4].selector = @selector(withArrayListToFinalTypeWithNSString:);
  methods[5].selector = @selector(withOrderWithInt:);
  methods[6].selector = @selector(forChild);
  methods[7].selector = @selector(withDecoratorWithNSString:);
  methods[8].selector = @selector(withBufferStrategyWithInt:);
  methods[9].selector = @selector(withSimpleWrapableViewStrategyWithInt:);
  methods[10].selector = @selector(withUiFlagWithInt:);
  methods[11].selector = @selector(beforeChildAdd);
  methods[12].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "attributeName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeType_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "order_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "simpleWrapableViewStrategy_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isForChild_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "decorator_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bufferStrategy_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "updateUiFlag_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "applyBeforeChildAdd_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "arrayType_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "arrayListToFinalType_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "withName", "LNSString;", "withType", "withArrayType", "withArrayListToFinalType", "withOrder", "I", "withDecorator", "withBufferStrategy", "withSimpleWrapableViewStrategy", "withUiFlag", "LASWidgetAttribute;" };
  static const J2ObjcClassInfo _ASWidgetAttribute_Builder = { "Builder", "com.ashera.widget", ptrTable, methods, fields, 7, 0x19, 13, 11, 11, -1, -1, -1, -1 };
  return &_ASWidgetAttribute_Builder;
}

@end

void ASWidgetAttribute_Builder_init(ASWidgetAttribute_Builder *self) {
  NSObject_init(self);
}

ASWidgetAttribute_Builder *new_ASWidgetAttribute_Builder_init() {
  J2OBJC_NEW_IMPL(ASWidgetAttribute_Builder, init)
}

ASWidgetAttribute_Builder *create_ASWidgetAttribute_Builder_init() {
  J2OBJC_CREATE_IMPL(ASWidgetAttribute_Builder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASWidgetAttribute_Builder)
