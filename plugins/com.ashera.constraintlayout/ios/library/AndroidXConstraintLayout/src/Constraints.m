//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\widget\Constraints.java
//

#include "ConstraintLayout.h"
#include "ConstraintSet.h"
#include "Constraints.h"
#include "J2ObjC_source.h"
#include "ViewGroup.h"


@implementation ADXConstraints

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXConstraints_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ADXConstraintSet *)getConstraintSet {
  if (myConstraintSet_ == nil) {
    JreStrongAssignAndConsume(&myConstraintSet_, new_ADXConstraintSet_init());
  }
  [myConstraintSet_ cloneWithADXConstraints:self];
  return myConstraintSet_;
}

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b {
}

- (void)dealloc {
  RELEASE_(myConstraintSet_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXConstraintSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getConstraintSet);
  methods[2].selector = @selector(onLayoutWithBoolean:withInt:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "myConstraintSet_", "LADXConstraintSet;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onLayout", "ZIIII", "LADXConstraints_LayoutParams;" };
  static const J2ObjcClassInfo _ADXConstraints = { "Constraints", "androidx.constraintlayout.widget", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, 2, -1, -1, -1 };
  return &_ADXConstraints;
}

@end

void ADXConstraints_init(ADXConstraints *self) {
  ADViewGroup_init(self);
}

ADXConstraints *new_ADXConstraints_init() {
  J2OBJC_NEW_IMPL(ADXConstraints, init)
}

ADXConstraints *create_ADXConstraints_init() {
  J2OBJC_CREATE_IMPL(ADXConstraints, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXConstraints)

@implementation ADXConstraints_LayoutParams

- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height {
  ADXConstraints_LayoutParams_initWithInt_withInt_(self, width, height);
  return self;
}

- (instancetype)initWithADXConstraints_LayoutParams:(ADXConstraints_LayoutParams *)source {
  ADXConstraints_LayoutParams_initWithADXConstraints_LayoutParams_(self, source);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:);
  methods[1].selector = @selector(initWithADXConstraints_LayoutParams:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "alpha_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "applyElevation_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "elevation_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "rotation_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "rotationX_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "rotationY_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "scaleX_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "scaleY_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "transformPivotX_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "transformPivotY_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "translationX_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "translationY_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "translationZ_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "LADXConstraints_LayoutParams;", "LADXConstraints;" };
  static const J2ObjcClassInfo _ADXConstraints_LayoutParams = { "LayoutParams", "androidx.constraintlayout.widget", ptrTable, methods, fields, 7, 0x9, 2, 13, 2, -1, -1, -1, -1 };
  return &_ADXConstraints_LayoutParams;
}

@end

void ADXConstraints_LayoutParams_initWithInt_withInt_(ADXConstraints_LayoutParams *self, jint width, jint height) {
  ADXConstraintLayout_LayoutParams_initWithInt_withInt_(self, width, height);
  self->alpha_ = 1;
  self->applyElevation_ = false;
  self->elevation_ = 0;
  self->rotation_ = 0;
  self->rotationX_ = 0;
  self->rotationY_ = 0;
  self->scaleX_ = 1;
  self->scaleY_ = 1;
  self->transformPivotX_ = 0;
  self->transformPivotY_ = 0;
  self->translationX_ = 0;
  self->translationY_ = 0;
  self->translationZ_ = 0;
}

ADXConstraints_LayoutParams *new_ADXConstraints_LayoutParams_initWithInt_withInt_(jint width, jint height) {
  J2OBJC_NEW_IMPL(ADXConstraints_LayoutParams, initWithInt_withInt_, width, height)
}

ADXConstraints_LayoutParams *create_ADXConstraints_LayoutParams_initWithInt_withInt_(jint width, jint height) {
  J2OBJC_CREATE_IMPL(ADXConstraints_LayoutParams, initWithInt_withInt_, width, height)
}

void ADXConstraints_LayoutParams_initWithADXConstraints_LayoutParams_(ADXConstraints_LayoutParams *self, ADXConstraints_LayoutParams *source) {
  ADXConstraintLayout_LayoutParams_initWithADXConstraintLayout_LayoutParams_(self, source);
  self->alpha_ = 1;
  self->applyElevation_ = false;
  self->elevation_ = 0;
  self->rotation_ = 0;
  self->rotationX_ = 0;
  self->rotationY_ = 0;
  self->scaleX_ = 1;
  self->scaleY_ = 1;
  self->transformPivotX_ = 0;
  self->transformPivotY_ = 0;
  self->translationX_ = 0;
  self->translationY_ = 0;
  self->translationZ_ = 0;
}

ADXConstraints_LayoutParams *new_ADXConstraints_LayoutParams_initWithADXConstraints_LayoutParams_(ADXConstraints_LayoutParams *source) {
  J2OBJC_NEW_IMPL(ADXConstraints_LayoutParams, initWithADXConstraints_LayoutParams_, source)
}

ADXConstraints_LayoutParams *create_ADXConstraints_LayoutParams_initWithADXConstraints_LayoutParams_(ADXConstraints_LayoutParams *source) {
  J2OBJC_CREATE_IMPL(ADXConstraints_LayoutParams, initWithADXConstraints_LayoutParams_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXConstraints_LayoutParams)
