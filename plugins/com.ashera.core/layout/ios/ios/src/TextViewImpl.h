//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\TextViewImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TextViewImpl")
#ifdef RESTRICT_TextViewImpl
#define INCLUDE_ALL_TextViewImpl 0
#else
#define INCLUDE_ALL_TextViewImpl 1
#endif
#undef RESTRICT_TextViewImpl

#if !defined (ASTextViewImpl_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl))
#define ASTextViewImpl_

#define RESTRICT_BaseWidget 1
#define INCLUDE_ASBaseWidget 1
#include "BaseWidget.h"

#define RESTRICT_ValidationErrorLabel 1
#define INCLUDE_ASValidationErrorLabel 1
#include "ValidationErrorLabel.h"

@class ASMeasurableTextView;
@class ASTextViewImpl_TextViewBean;
@class ASTextViewImpl_TextViewCommandBuilder;
@class ASWidgetAttribute;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASTextViewImpl : ASBaseWidget < ASValidationErrorLabel > {
 @public
  id uiView_;
  ASMeasurableTextView *measurableTextView_;
}
@property id uiView;

#pragma mark Public

- (instancetype)init;

- (id)asNativeWidget;

- (id)asWidget;

- (jboolean)checkIosVersionWithNSString:(NSString *)v;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (void)drawableStateChanged;

- (id)getAdjustsFontSizeToFitWidth;

- (id)getAllowsDefaultTighteningForTruncation;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (jint)getBaseLine;

- (ASTextViewImpl_TextViewBean *)getBean;

- (jint)getBorderPadding;

- (ASTextViewImpl_TextViewCommandBuilder *)getBuilder;

- (id)getHighlightedTextColor;

- (id)getIsEnabled;

- (id)getIsHighlighted;

- (id)getIsUserInteractionEnabled;

- (jint)getLineHeightPadding;

- (jint)getMaxEms;

- (jint)getMaxHeight;

- (jint)getMaxLines;

- (jint)getMaxWidth;

- (jint)getMinEms;

- (id)getMinimumScaleFactor;

- (jint)getMinLines;

- (id)getNumberOfLines;

- (id)getPluginWithNSString:(NSString *)plugin;

- (id)getPreferredMaxLayoutWidth;

- (id)getShadowColor;

- (id)getText;

- (id)getTextColor;

- (void)invalidate;

- (void)loadAttributesWithNSString:(NSString *)attributeName;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)onRtlPropertiesChangedWithInt:(jint)layoutDirection;

- (void)requestLayout;

- (void)setAdjustsFontSizeToFitWidthWithId:(id)nativeWidget
                                    withId:(id)value;

- (void)setAllowsDefaultTighteningForTruncationWithId:(id)nativeWidget
                                               withId:(id)value;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setErrorMessageWithNSString:(NSString *)message;

- (void)setHighlightedTextColorWithId:(id)nativeWidget
                               withId:(id)value;

- (void)setIdWithNSString:(NSString *)id_;

- (void)setIsEnabledWithId:(id)nativeWidget
                    withId:(id)value;

- (void)setIsHighlightedWithId:(id)nativeWidget
                        withId:(id)value;

- (void)setIsUserInteractionEnabledWithId:(id)nativeWidget
                                   withId:(id)value;

- (void)setMinimumScaleFactorWithId:(id)nativeWidget
                             withId:(id)value;

- (void)setNumberOfLinesWithId:(id)nativeWidget
                        withId:(id)value;

- (void)setPaddingWithId:(id)objValue;

- (void)setPaddingBottomWithId:(id)objValue;

- (void)setPaddingLeftWithId:(id)objValue;

- (void)setPaddingRightWithId:(id)objValue;

- (void)setPaddingTopWithId:(id)objValue;

- (void)setPreferredMaxLayoutWidthWithId:(id)nativeWidget
                                  withId:(id)value;

- (void)setShadowColorWithId:(id)nativeWidget
                      withId:(id)value;

- (void)setTextWithId:(id)nativeWidget
               withId:(id)value;

- (void)setTextColorWithId:(id)nativeWidget
                    withId:(id)value;

+ (NSString *)toUpperCaseWithNSString:(NSString *)text;

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height;

- (void)updatePadding;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0
                    withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ASTextViewImpl)

J2OBJC_FIELD_SETTER(ASTextViewImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASTextViewImpl, measurableTextView_, ASMeasurableTextView *)

inline NSString *ASTextViewImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASTextViewImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASTextViewImpl, LOCAL_NAME, NSString *)

inline NSString *ASTextViewImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASTextViewImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASTextViewImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASTextViewImpl_init(ASTextViewImpl *self);

FOUNDATION_EXPORT ASTextViewImpl *new_ASTextViewImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl *create_ASTextViewImpl_init(void);

FOUNDATION_EXPORT NSString *ASTextViewImpl_toUpperCaseWithNSString_(NSString *text);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl)

@compatibility_alias ComAsheraLayoutTextViewImpl ASTextViewImpl;

#endif

#if !defined (ASTextViewImpl_AutoSizeTextType_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_AutoSizeTextType))
#define ASTextViewImpl_AutoSizeTextType_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASTextViewImpl_AutoSizeTextType : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_AutoSizeTextType)

FOUNDATION_EXPORT void ASTextViewImpl_AutoSizeTextType_init(ASTextViewImpl_AutoSizeTextType *self);

FOUNDATION_EXPORT ASTextViewImpl_AutoSizeTextType *new_ASTextViewImpl_AutoSizeTextType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_AutoSizeTextType *create_ASTextViewImpl_AutoSizeTextType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_AutoSizeTextType)

#endif

#if !defined (ASTextViewImpl_Ellipsize_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_Ellipsize))
#define ASTextViewImpl_Ellipsize_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASTextViewImpl_Ellipsize : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_Ellipsize)

FOUNDATION_EXPORT void ASTextViewImpl_Ellipsize_init(ASTextViewImpl_Ellipsize *self);

FOUNDATION_EXPORT ASTextViewImpl_Ellipsize *new_ASTextViewImpl_Ellipsize_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_Ellipsize *create_ASTextViewImpl_Ellipsize_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_Ellipsize)

#endif

#if !defined (ASTextViewImpl_MarqueeRepeatLimit_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_MarqueeRepeatLimit))
#define ASTextViewImpl_MarqueeRepeatLimit_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASTextViewImpl_MarqueeRepeatLimit : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

- (jboolean)supportsIntAlso;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_MarqueeRepeatLimit)

FOUNDATION_EXPORT void ASTextViewImpl_MarqueeRepeatLimit_init(ASTextViewImpl_MarqueeRepeatLimit *self);

FOUNDATION_EXPORT ASTextViewImpl_MarqueeRepeatLimit *new_ASTextViewImpl_MarqueeRepeatLimit_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_MarqueeRepeatLimit *create_ASTextViewImpl_MarqueeRepeatLimit_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_MarqueeRepeatLimit)

#endif

#if !defined (ASTextViewImpl_JustificationMode_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_JustificationMode))
#define ASTextViewImpl_JustificationMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASTextViewImpl_JustificationMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_JustificationMode)

FOUNDATION_EXPORT void ASTextViewImpl_JustificationMode_init(ASTextViewImpl_JustificationMode *self);

FOUNDATION_EXPORT ASTextViewImpl_JustificationMode *new_ASTextViewImpl_JustificationMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_JustificationMode *create_ASTextViewImpl_JustificationMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_JustificationMode)

#endif

#if !defined (ASTextViewImpl_Font_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_Font))
#define ASTextViewImpl_Font_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASTextViewImpl_Font : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_Font)

FOUNDATION_EXPORT void ASTextViewImpl_Font_init(ASTextViewImpl_Font *self);

FOUNDATION_EXPORT ASTextViewImpl_Font *new_ASTextViewImpl_Font_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_Font *create_ASTextViewImpl_Font_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_Font)

#endif

#if !defined (ASTextViewImpl_TextStyle_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_TextStyle))
#define ASTextViewImpl_TextStyle_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASTextViewImpl_TextStyle : ASAbstractBitFlagConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_TextStyle)

FOUNDATION_EXPORT void ASTextViewImpl_TextStyle_init(ASTextViewImpl_TextStyle *self);

FOUNDATION_EXPORT ASTextViewImpl_TextStyle *new_ASTextViewImpl_TextStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_TextStyle *create_ASTextViewImpl_TextStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_TextStyle)

#endif

#if !defined (ASTextViewImpl_DrawableTintMode_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_DrawableTintMode))
#define ASTextViewImpl_DrawableTintMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASTextViewImpl_DrawableTintMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_DrawableTintMode)

FOUNDATION_EXPORT void ASTextViewImpl_DrawableTintMode_init(ASTextViewImpl_DrawableTintMode *self);

FOUNDATION_EXPORT ASTextViewImpl_DrawableTintMode *new_ASTextViewImpl_DrawableTintMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_DrawableTintMode *create_ASTextViewImpl_DrawableTintMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_DrawableTintMode)

#endif

#if !defined (ASTextViewImpl_TextViewExt_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_TextViewExt))
#define ASTextViewImpl_TextViewExt_

#define RESTRICT_MeasurableTextView 1
#define INCLUDE_ASMeasurableTextView 1
#include "MeasurableTextView.h"

#define RESTRICT_ILifeCycleDecorator 1
#define INCLUDE_ASILifeCycleDecorator 1
#include "ILifeCycleDecorator.h"

@class ADRectF;
@class ASTextViewImpl;
@class ASWidgetAttribute;
@class IOSObjectArray;
@protocol ASIWidget;
@protocol JavaUtilList;

@interface ASTextViewImpl_TextViewExt : ASMeasurableTextView < ASILifeCycleDecorator >

#pragma mark Public

- (instancetype)initWithASTextViewImpl:(ASTextViewImpl *)outer$;

- (void)drawableStateChanged;

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (jint)getBorderPadding;

- (jint)getBorderWidth;

- (jint)getLineHeight;

- (jint)getLineHeightPadding;

- (id<JavaUtilList>)getMethods;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget OBJC_METHOD_FAMILY_NONE;

- (void)offsetLeftAndRightWithInt:(jint)offset;

- (void)offsetTopAndBottomWithInt:(jint)offset;

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

- (void)onRtlPropertiesChangedWithInt:(jint)layoutDirection;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue;

- (void)setVisibilityWithInt:(jint)visibility;

- (jboolean)suggestedSizeFitsInSpaceWithInt:(jint)mAutoSizeTextSizeInPx
                                withADRectF:(ADRectF *)availableSpace;

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height;

#pragma mark Protected

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b;

- (void)setTextSizeInternalWithInt:(jint)unit
                         withFloat:(jfloat)optimalTextSize
                       withBoolean:(jboolean)b;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithASIWidget:(id<ASIWidget>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_TextViewExt)

FOUNDATION_EXPORT void ASTextViewImpl_TextViewExt_initWithASTextViewImpl_(ASTextViewImpl_TextViewExt *self, ASTextViewImpl *outer$);

FOUNDATION_EXPORT ASTextViewImpl_TextViewExt *new_ASTextViewImpl_TextViewExt_initWithASTextViewImpl_(ASTextViewImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_TextViewExt *create_ASTextViewImpl_TextViewExt_initWithASTextViewImpl_(ASTextViewImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_TextViewExt)

#endif

#if !defined (ASTextViewImpl_PostMeasureHandler_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_PostMeasureHandler))
#define ASTextViewImpl_PostMeasureHandler_

#define RESTRICT_EventBusHandler 1
#define INCLUDE_ASEventBusHandler 1
#include "EventBusHandler.h"

@class ASTextViewImpl;

@interface ASTextViewImpl_PostMeasureHandler : ASEventBusHandler

#pragma mark Public

- (instancetype)initWithASTextViewImpl:(ASTextViewImpl *)outer$
                          withNSString:(NSString *)type;

#pragma mark Protected

- (void)doPerformWithId:(id)payload;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_PostMeasureHandler)

FOUNDATION_EXPORT void ASTextViewImpl_PostMeasureHandler_initWithASTextViewImpl_withNSString_(ASTextViewImpl_PostMeasureHandler *self, ASTextViewImpl *outer$, NSString *type);

FOUNDATION_EXPORT ASTextViewImpl_PostMeasureHandler *new_ASTextViewImpl_PostMeasureHandler_initWithASTextViewImpl_withNSString_(ASTextViewImpl *outer$, NSString *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_PostMeasureHandler *create_ASTextViewImpl_PostMeasureHandler_initWithASTextViewImpl_withNSString_(ASTextViewImpl *outer$, NSString *type);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_PostMeasureHandler)

#endif

#if !defined (ASTextViewImpl_TextViewCommandBuilder_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_TextViewCommandBuilder))
#define ASTextViewImpl_TextViewCommandBuilder_

#define RESTRICT_ViewImpl 1
#define INCLUDE_ASViewImpl_ViewCommandBuilder 1
#include "ViewImpl.h"

@class ASTextViewImpl;

@interface ASTextViewImpl_TextViewCommandBuilder : ASViewImpl_ViewCommandBuilder

#pragma mark Public

- (instancetype)initWithASTextViewImpl:(ASTextViewImpl *)outer$;

- (ASTextViewImpl_TextViewCommandBuilder *)executeWithBoolean:(jboolean)setter;

- (id)getAutoSizeMaxTextSize;

- (id)getAutoSizeMinTextSize;

- (id)getAutoSizeStepGranularity;

- (id)getAutoSizeTextType;

- (id)getDrawablePadding;

- (id)getEllipsize;

- (id)getEnabled;

- (id)getFirstBaselineToTopHeight;

- (id)getGravity;

- (id)getHeight;

- (id)getIosHighlightedTextColor;

- (id)getIosMinimumScaleFactor;

- (id)getIosNumberOfLines;

- (id)getIosPreferredMaxLayoutWidth;

- (id)getIosShadowColor;

- (id)getIosText;

- (id)getIosTextColor;

- (id)getJustificationMode;

- (id)getLastBaselineToBottomHeight;

- (id)getMarqueeRepeatLimit;

- (id)getMaxEms;

- (id)getMaxHeight;

- (id)getMaxLines;

- (id)getMaxWidth;

- (id)getMinEms;

- (id)getMinHeight;

- (id)getMinLines;

- (id)getMinWidth;

- (id)getPaddingBottom;

- (id)getPaddingEnd;

- (id)getPaddingLeft;

- (id)getPaddingRight;

- (id)getPaddingStart;

- (id)getPaddingTop;

- (id)getShadowColor;

- (id)getShadowDx;

- (id)getShadowDy;

- (id)getText;

- (id)getTextColor;

- (id)getTextColorHighlight;

- (id)getTextSize;

- (id)getWidth;

- (ASTextViewImpl_TextViewCommandBuilder *)invalidate;

- (id)isIosAdjustsFontSizeToFitWidth;

- (id)isIosAllowsDefaultTighteningForTruncation;

- (id)isIosIsEnabled;

- (id)isIosIsHighlighted;

- (id)isIosIsUserInteractionEnabled;

- (ASTextViewImpl_TextViewCommandBuilder *)notifyDataSetChangedWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)refreshUiFromModelWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)requestLayout;

- (ASTextViewImpl_TextViewCommandBuilder *)reset;

- (ASTextViewImpl_TextViewCommandBuilder *)setAlphaWithFloat:(jfloat)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setAsDragSourceWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setAttributeUnderTestWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setAutoSizeMaxTextSizeWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setAutoSizeMinTextSizeWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setAutoSizePresetSizesWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setAutoSizeStepGranularityWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setAutoSizeTextTypeWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setBackgroundRepeatWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setBackgroundTintModeWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setBackgroundTintWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setBackgroundWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setClickableWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setContentDescriptionWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setCustomErrorMessageKeysWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setCustomErrorMessageValuesWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setDrawableBottomWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setDrawableEndWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setDrawableLeftWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setDrawablePaddingWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setDrawableRightWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setDrawableStartWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setDrawableTintWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setDrawableTintModeWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setDrawableTopWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setDuplicateParentStateWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setEditableWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setEllipsizeWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setEmsWithInt:(jint)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setEnabledWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setErrorStyleWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setFirstBaselineToTopHeightWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setFocusableWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setFontFamilyWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setForegroundGravityWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setForegroundRepeatWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setForegroundTintModeWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setForegroundTintWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setForegroundWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setGravityWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setHeightWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIdWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setInvalidateOnFrameChangeWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosAccessibilityHintWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosAccessibilityIgnoresInvertColorsWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosAccessibilityLabelWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosAccessibilityTraitsWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosAccessibilityValueWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosAdjustsFontSizeToFitWidthWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosAllowsDefaultTighteningForTruncationWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosAlphaWithFloat:(jfloat)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosAutoresizesSubviewsWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosBackgroundColorWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosClearsContextBeforeDrawingWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosClipsToBoundsWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosContentScaleFactorWithFloat:(jfloat)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosHighlightedTextColorWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosInsetsLayoutMarginsFromSafeAreaWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosIsAccessibilityElementWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosIsEnabledWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosIsExclusiveTouchWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosIsHiddenWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosIsHighlightedWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosIsMultipleTouchEnabledWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosIsOpaqueWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosIsUserInteractionEnabledWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosLargeContentImageWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosLargeContentTitleWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosLayerBorderColorWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosLayerBorderWidthWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosLayerCornerRadiusWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosLayerMasksToBoundsWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosMinimumScaleFactorWithFloat:(jfloat)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosNumberOfLinesWithInt:(jint)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosPreferredMaxLayoutWidthWithFloat:(jfloat)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosPreservesSuperviewLayoutMarginsWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosRestorationIdentifierWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosScalesLargeContentImageWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosShadowColorWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosShowsLargeContentViewerWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosTagWithInt:(jint)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosTextWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosTextColorWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosTintColorWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setIosTranslatesAutoresizingMaskIntoConstraintsWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setJustificationModeWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setKeepScreenOnWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setLastBaselineToBottomHeightWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setLayoutDirectionWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setLinesWithInt:(jint)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setLongClickableWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setMarqueeRepeatLimitWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setMaxEmsWithInt:(jint)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setMaxHeightWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setMaxLengthWithInt:(jint)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setMaxLinesWithInt:(jint)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setMaxWidthWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setMinEmsWithInt:(jint)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setMinHeightWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setMinLinesWithInt:(jint)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setMinWidthWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setModelParamWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setModelPojoToUiParamsWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setModelPojoToUiWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setModelSyncEventsWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setModelUiToPojoEventIdsWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setModelUiToPojoWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setOnClickWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setOnDragWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setOnKeyWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setOnLongClickWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setOnTouchWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setPaddingWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setPaddingBottomWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setPaddingEndWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setPaddingHorizontalWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setPaddingLeftWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setPaddingRightWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setPaddingStartWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setPaddingTopWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setPaddingVerticalWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setPasswordWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setRotationWithFloat:(jfloat)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setRotationXWithFloat:(jfloat)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setRotationYWithFloat:(jfloat)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setScaleXWithFloat:(jfloat)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setScaleYWithFloat:(jfloat)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setScrollHorizontallyWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setSelectedWithBoolean:(jboolean)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setShadowColorWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setShadowDxWithFloat:(jfloat)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setShadowDyWithFloat:(jfloat)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setSingleLineWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setStartOrStopMarqueeWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setStyleWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setTextWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setTextAlignmentWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setTextAllCapsWithBoolean:(jboolean)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setTextColorWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setTextColorHighlightWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setTextDirectionWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setTextFormatWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setTextSizeWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setTextStyleWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setTransformPivotXWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setTransformPivotYWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setTranslationXWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setTranslationYWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setTranslationZWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setTypefaceWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setV_maxlengthWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setV_maxWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setV_minlengthWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setV_minWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setV_patternWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setV_requiredWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setV_typeWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setValidationErrorDisplayTypeWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setValidationWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setVisibilityWithNSString:(NSString *)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)setWidthWithNSString:(NSString *)value;

- (ASTextViewImpl_TextViewCommandBuilder *)setZIndexWithInt:(jint)arg0;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetAlpha;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetAutoSizeMaxTextSize;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetAutoSizeMinTextSize;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetAutoSizeStepGranularity;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetAutoSizeTextType;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetBackground;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetBackgroundTint;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetBackgroundTintMode;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetClickable;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetContentDescription;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetDrawablePadding;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetDuplicateParentState;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetEllipsize;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetEnabled;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetFirstBaselineToTopHeight;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetFocusable;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetForeground;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetForegroundGravity;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetForegroundTint;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetForegroundTintMode;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetGravity;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetHeight;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetId;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosAccessibilityHint;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosAccessibilityIgnoresInvertColors;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosAccessibilityLabel;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosAccessibilityTraits;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosAccessibilityValue;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosAdjustsFontSizeToFitWidth;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosAllowsDefaultTighteningForTruncation;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosAlpha;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosAutoresizesSubviews;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosBackgroundColor;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosClearsContextBeforeDrawing;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosClipsToBounds;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosContentScaleFactor;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosHighlightedTextColor;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosInsetsLayoutMarginsFromSafeArea;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosIsAccessibilityElement;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosIsEnabled;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosIsExclusiveTouch;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosIsFocused;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosIsHidden;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosIsHighlighted;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosIsMultipleTouchEnabled;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosIsOpaque;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosIsUserInteractionEnabled;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosLargeContentImage;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosLargeContentTitle;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosMinimumScaleFactor;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosNumberOfLines;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosPreferredMaxLayoutWidth;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosPreservesSuperviewLayoutMargins;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosRestorationIdentifier;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosScalesLargeContentImage;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosShadowColor;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosShowsLargeContentViewer;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosTag;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosText;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosTextColor;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosTintColor;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetIosTranslatesAutoresizingMaskIntoConstraints;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetJustificationMode;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetKeepScreenOn;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetLastBaselineToBottomHeight;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetLayoutDirection;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetLongClickable;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetMarqueeRepeatLimit;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetMaxEms;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetMaxHeight;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetMaxLines;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetMaxWidth;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetMinEms;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetMinHeight;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetMinLines;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetMinWidth;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetModelParam;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetModelPojoToUi;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetModelSyncEvents;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetModelUiToPojo;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetPaddingBottom;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetPaddingEnd;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetPaddingLeft;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetPaddingRight;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetPaddingStart;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetPaddingTop;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetRotation;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetRotationX;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetRotationY;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetScaleX;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetScaleY;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetSelected;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetShadowColor;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetShadowDx;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetShadowDy;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetText;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTextAlignment;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTextColor;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTextColorHighlight;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTextDirection;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTextSize;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTransformPivotX;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTransformPivotY;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTranslationX;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTranslationY;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetTranslationZ;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetValidateForm;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetVisibility;

- (ASTextViewImpl_TextViewCommandBuilder *)tryGetWidth;

- (ASTextViewImpl_TextViewCommandBuilder *)updateModelDataWithNSString:(NSString *)arg0
                                                                withId:(id)arg1;

- (ASTextViewImpl_TextViewCommandBuilder *)validateFormWithNSString:(NSString *)arg0;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_TextViewCommandBuilder)

FOUNDATION_EXPORT void ASTextViewImpl_TextViewCommandBuilder_initWithASTextViewImpl_(ASTextViewImpl_TextViewCommandBuilder *self, ASTextViewImpl *outer$);

FOUNDATION_EXPORT ASTextViewImpl_TextViewCommandBuilder *new_ASTextViewImpl_TextViewCommandBuilder_initWithASTextViewImpl_(ASTextViewImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_TextViewCommandBuilder *create_ASTextViewImpl_TextViewCommandBuilder_initWithASTextViewImpl_(ASTextViewImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_TextViewCommandBuilder)

#endif

#if !defined (ASTextViewImpl_TextViewBean_) && (INCLUDE_ALL_TextViewImpl || defined(INCLUDE_ASTextViewImpl_TextViewBean))
#define ASTextViewImpl_TextViewBean_

#define RESTRICT_ViewImpl 1
#define INCLUDE_ASViewImpl_ViewBean 1
#include "ViewImpl.h"

@class ASTextViewImpl;
@protocol ASIWidget;

@interface ASTextViewImpl_TextViewBean : ASViewImpl_ViewBean

#pragma mark Public

- (instancetype)initWithASTextViewImpl:(ASTextViewImpl *)outer$;

- (id)getAutoSizeMaxTextSize;

- (id)getAutoSizeMinTextSize;

- (id)getAutoSizeStepGranularity;

- (id)getAutoSizeTextType;

- (id)getDrawablePadding;

- (id)getEllipsize;

- (id)getEnabled;

- (id)getFirstBaselineToTopHeight;

- (id)getGravity;

- (id)getHeight;

- (id)getIosHighlightedTextColor;

- (id)getIosMinimumScaleFactor;

- (id)getIosNumberOfLines;

- (id)getIosPreferredMaxLayoutWidth;

- (id)getIosShadowColor;

- (id)getIosText;

- (id)getIosTextColor;

- (id)getJustificationMode;

- (id)getLastBaselineToBottomHeight;

- (id)getMarqueeRepeatLimit;

- (id)getMaxEms;

- (id)getMaxHeight;

- (id)getMaxLines;

- (id)getMaxWidth;

- (id)getMinEms;

- (id)getMinHeight;

- (id)getMinLines;

- (id)getMinWidth;

- (id)getPaddingBottom;

- (id)getPaddingEnd;

- (id)getPaddingLeft;

- (id)getPaddingRight;

- (id)getPaddingStart;

- (id)getPaddingTop;

- (id)getShadowColor;

- (id)getShadowDx;

- (id)getShadowDy;

- (id)getText;

- (id)getTextColor;

- (id)getTextColorHighlight;

- (id)getTextSize;

- (id)getWidth;

- (id)isIosAdjustsFontSizeToFitWidth;

- (id)isIosAllowsDefaultTighteningForTruncation;

- (id)isIosIsEnabled;

- (id)isIosIsHighlighted;

- (id)isIosIsUserInteractionEnabled;

- (void)setAutoSizeMaxTextSizeWithNSString:(NSString *)value;

- (void)setAutoSizeMinTextSizeWithNSString:(NSString *)value;

- (void)setAutoSizePresetSizesWithNSString:(NSString *)value;

- (void)setAutoSizeStepGranularityWithNSString:(NSString *)value;

- (void)setAutoSizeTextTypeWithNSString:(NSString *)value;

- (void)setDrawableBottomWithNSString:(NSString *)value;

- (void)setDrawableEndWithNSString:(NSString *)value;

- (void)setDrawableLeftWithNSString:(NSString *)value;

- (void)setDrawablePaddingWithNSString:(NSString *)value;

- (void)setDrawableRightWithNSString:(NSString *)value;

- (void)setDrawableStartWithNSString:(NSString *)value;

- (void)setDrawableTintWithNSString:(NSString *)value;

- (void)setDrawableTintModeWithNSString:(NSString *)value;

- (void)setDrawableTopWithNSString:(NSString *)value;

- (void)setEditableWithBoolean:(jboolean)value;

- (void)setEllipsizeWithNSString:(NSString *)value;

- (void)setEmsWithInt:(jint)value;

- (void)setEnabledWithBoolean:(jboolean)value;

- (void)setFirstBaselineToTopHeightWithNSString:(NSString *)value;

- (void)setFontFamilyWithNSString:(NSString *)value;

- (void)setGravityWithNSString:(NSString *)value;

- (void)setHeightWithNSString:(NSString *)value;

- (void)setIosAdjustsFontSizeToFitWidthWithBoolean:(jboolean)value;

- (void)setIosAllowsDefaultTighteningForTruncationWithBoolean:(jboolean)value;

- (void)setIosHighlightedTextColorWithNSString:(NSString *)value;

- (void)setIosIsEnabledWithBoolean:(jboolean)value;

- (void)setIosIsHighlightedWithBoolean:(jboolean)value;

- (void)setIosIsUserInteractionEnabledWithBoolean:(jboolean)value;

- (void)setIosMinimumScaleFactorWithFloat:(jfloat)value;

- (void)setIosNumberOfLinesWithInt:(jint)value;

- (void)setIosPreferredMaxLayoutWidthWithFloat:(jfloat)value;

- (void)setIosShadowColorWithNSString:(NSString *)value;

- (void)setIosTextWithNSString:(NSString *)value;

- (void)setIosTextColorWithNSString:(NSString *)value;

- (void)setJustificationModeWithNSString:(NSString *)value;

- (void)setLastBaselineToBottomHeightWithNSString:(NSString *)value;

- (void)setLinesWithInt:(jint)value;

- (void)setMarqueeRepeatLimitWithNSString:(NSString *)value;

- (void)setMaxEmsWithInt:(jint)value;

- (void)setMaxHeightWithNSString:(NSString *)value;

- (void)setMaxLengthWithInt:(jint)value;

- (void)setMaxLinesWithInt:(jint)value;

- (void)setMaxWidthWithNSString:(NSString *)value;

- (void)setMinEmsWithInt:(jint)value;

- (void)setMinHeightWithNSString:(NSString *)value;

- (void)setMinLinesWithInt:(jint)value;

- (void)setMinWidthWithNSString:(NSString *)value;

- (void)setPaddingWithNSString:(NSString *)value;

- (void)setPaddingBottomWithNSString:(NSString *)value;

- (void)setPaddingEndWithNSString:(NSString *)value;

- (void)setPaddingHorizontalWithNSString:(NSString *)value;

- (void)setPaddingLeftWithNSString:(NSString *)value;

- (void)setPaddingRightWithNSString:(NSString *)value;

- (void)setPaddingStartWithNSString:(NSString *)value;

- (void)setPaddingTopWithNSString:(NSString *)value;

- (void)setPaddingVerticalWithNSString:(NSString *)value;

- (void)setPasswordWithBoolean:(jboolean)value;

- (void)setScrollHorizontallyWithBoolean:(jboolean)value;

- (void)setShadowColorWithNSString:(NSString *)value;

- (void)setShadowDxWithFloat:(jfloat)value;

- (void)setShadowDyWithFloat:(jfloat)value;

- (void)setSingleLineWithBoolean:(jboolean)value;

- (void)setStartOrStopMarqueeWithBoolean:(jboolean)value;

- (void)setTextWithNSString:(NSString *)value;

- (void)setTextAllCapsWithBoolean:(jboolean)value;

- (void)setTextColorWithNSString:(NSString *)value;

- (void)setTextColorHighlightWithNSString:(NSString *)value;

- (void)setTextFormatWithNSString:(NSString *)value;

- (void)setTextSizeWithNSString:(NSString *)value;

- (void)setTextStyleWithNSString:(NSString *)value;

- (void)setTypefaceWithNSString:(NSString *)value;

- (void)setWidthWithNSString:(NSString *)value;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithASIWidget:(id<ASIWidget>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTextViewImpl_TextViewBean)

FOUNDATION_EXPORT void ASTextViewImpl_TextViewBean_initWithASTextViewImpl_(ASTextViewImpl_TextViewBean *self, ASTextViewImpl *outer$);

FOUNDATION_EXPORT ASTextViewImpl_TextViewBean *new_ASTextViewImpl_TextViewBean_initWithASTextViewImpl_(ASTextViewImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTextViewImpl_TextViewBean *create_ASTextViewImpl_TextViewBean_initWithASTextViewImpl_(ASTextViewImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASTextViewImpl_TextViewBean)

#endif

#pragma pop_macro("INCLUDE_ALL_TextViewImpl")
