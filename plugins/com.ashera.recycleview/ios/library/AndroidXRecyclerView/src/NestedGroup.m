//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\com\xwray\groupie\NestedGroup.java
//

#include "GroupDataObserver.h"
#include "Item.h"
#include "J2ObjC_source.h"
#include "NestedGroup.h"
#include "RVGroup.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"

@class ADXNestedGroup_GroupDataObservable;
@protocol JavaUtilList;


@interface ADXNestedGroup () {
 @public
  ADXNestedGroup_GroupDataObservable *observable_;
}

@end

J2OBJC_FIELD_SETTER(ADXNestedGroup, observable_, ADXNestedGroup_GroupDataObservable *)

/*!
 @brief Iterate in reverse order in case any observer decides to remove themself from the list
  in their callback
 */
@interface ADXNestedGroup_GroupDataObservable : NSObject {
 @public
  id<JavaUtilList> observers_;
}

- (instancetype)init;

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount;

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount
                                  withId:(id)payload;

- (void)onItemInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                             withInt:(jint)position;

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position;

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position
                             withId:(id)payload;

- (void)onItemRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position;

- (void)onItemRangeInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount;

- (void)onItemRangeRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount;

- (void)onItemMovedWithADXRVGroup:(id<ADXRVGroup>)group
                          withInt:(jint)fromPosition
                          withInt:(jint)toPosition;

- (void)onChangedWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)registerObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)observer;

- (void)unregisterObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)observer;

- (void)onDataSetInvalidated;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNestedGroup_GroupDataObservable)

J2OBJC_FIELD_SETTER(ADXNestedGroup_GroupDataObservable, observers_, id<JavaUtilList>)

__attribute__((unused)) static void ADXNestedGroup_GroupDataObservable_init(ADXNestedGroup_GroupDataObservable *self);

__attribute__((unused)) static ADXNestedGroup_GroupDataObservable *new_ADXNestedGroup_GroupDataObservable_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNestedGroup_GroupDataObservable *create_ADXNestedGroup_GroupDataObservable_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXNestedGroup_GroupDataObservable)

@implementation ADXNestedGroup

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXNestedGroup_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)getItemCount {
  jint size = 0;
  for (jint i = 0; i < [self getGroupCount]; i++) {
    id<ADXRVGroup> group = JreRetainedLocalValue([self getGroupWithInt:i]);
    size += [((id<ADXRVGroup>) nil_chk(group)) getItemCount];
  }
  return size;
}

- (jint)getItemCountBeforeGroupWithADXRVGroup:(id<ADXRVGroup>)group {
  jint groupIndex = [self getPositionWithADXRVGroup:group];
  return [self getItemCountBeforeGroupWithInt:groupIndex];
}

- (jint)getItemCountBeforeGroupWithInt:(jint)groupIndex {
  jint size = 0;
  for (jint i = 0; i < groupIndex; i++) {
    id<ADXRVGroup> currentGroup = [self getGroupWithInt:i];
    size += [((id<ADXRVGroup>) nil_chk(currentGroup)) getItemCount];
  }
  return size;
}

- (id<ADXRVGroup>)getGroupWithInt:(jint)position {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getGroupCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ADXItem *)getItemWithInt:(jint)position {
  jint previousPosition = 0;
  for (jint i = 0; i < [self getGroupCount]; i++) {
    id<ADXRVGroup> group = JreRetainedLocalValue([self getGroupWithInt:i]);
    jint size = [((id<ADXRVGroup>) nil_chk(group)) getItemCount];
    if (size + previousPosition > position) {
      return [group getItemWithInt:position - previousPosition];
    }
    previousPosition += size;
  }
  @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I$", @"Wanted item at ", position, @" but there are only ", [self getItemCount], @" items"));
}

- (jint)getPositionWithADXItem:(ADXItem *)item {
  jint previousPosition = 0;
  for (jint i = 0; i < [self getGroupCount]; i++) {
    id<ADXRVGroup> group = JreRetainedLocalValue([self getGroupWithInt:i]);
    jint position = [((id<ADXRVGroup>) nil_chk(group)) getPositionWithADXItem:item];
    if (position >= 0) {
      return position + previousPosition;
    }
    previousPosition += [group getItemCount];
  }
  return -1;
}

- (jint)getPositionWithADXRVGroup:(id<ADXRVGroup>)group {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)registerGroupDataObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)groupDataObserver {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) registerObserverWithADXGroupDataObserver:groupDataObserver];
}

- (void)unregisterGroupDataObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)groupDataObserver {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) unregisterObserverWithADXGroupDataObserver:groupDataObserver];
}

- (void)addWithADXRVGroup:(id<ADXRVGroup>)group {
  [((id<ADXRVGroup>) nil_chk(group)) registerGroupDataObserverWithADXGroupDataObserver:self];
}

- (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups {
  for (id<ADXRVGroup> __strong group in nil_chk(groups)) {
    [((id<ADXRVGroup>) nil_chk(group)) registerGroupDataObserverWithADXGroupDataObserver:self];
  }
}

- (void)addWithInt:(jint)position
    withADXRVGroup:(id<ADXRVGroup>)group {
  [((id<ADXRVGroup>) nil_chk(group)) registerGroupDataObserverWithADXGroupDataObserver:self];
}

- (void)addAllWithInt:(jint)position
withJavaUtilCollection:(id<JavaUtilCollection>)groups {
  for (id<ADXRVGroup> __strong group in nil_chk(groups)) {
    [((id<ADXRVGroup>) nil_chk(group)) registerGroupDataObserverWithADXGroupDataObserver:self];
  }
}

- (void)removeWithADXRVGroup:(id<ADXRVGroup>)group {
  [((id<ADXRVGroup>) nil_chk(group)) unregisterGroupDataObserverWithADXGroupDataObserver:self];
}

- (void)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups {
  for (id<ADXRVGroup> __strong group in nil_chk(groups)) {
    [((id<ADXRVGroup>) nil_chk(group)) unregisterGroupDataObserverWithADXGroupDataObserver:self];
  }
}

- (void)replaceAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups {
  jint groupCount = [self getGroupCount];
  for (jint i = groupCount - 1; i >= 0; i--) {
    [((id<ADXRVGroup>) nil_chk([self getGroupWithInt:i])) unregisterGroupDataObserverWithADXGroupDataObserver:self];
  }
  for (id<ADXRVGroup> __strong group in nil_chk(groups)) {
    [((id<ADXRVGroup>) nil_chk(group)) registerGroupDataObserverWithADXGroupDataObserver:self];
  }
}

- (void)onChangedWithADXRVGroup:(id<ADXRVGroup>)group {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRangeChangedWithADXRVGroup:self withInt:[self getItemCountBeforeGroupWithADXRVGroup:group] withInt:[((id<ADXRVGroup>) nil_chk(group)) getItemCount]];
}

- (void)onItemInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                             withInt:(jint)position {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemInsertedWithADXRVGroup:self withInt:[self getItemCountBeforeGroupWithADXRVGroup:group] + position];
}

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemChangedWithADXRVGroup:self withInt:[self getItemCountBeforeGroupWithADXRVGroup:group] + position];
}

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position
                             withId:(id)payload {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemChangedWithADXRVGroup:self withInt:[self getItemCountBeforeGroupWithADXRVGroup:group] + position withId:payload];
}

- (void)onItemRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRemovedWithADXRVGroup:self withInt:[self getItemCountBeforeGroupWithADXRVGroup:group] + position];
}

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRangeChangedWithADXRVGroup:self withInt:[self getItemCountBeforeGroupWithADXRVGroup:group] + positionStart withInt:itemCount];
}

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount
                                  withId:(id)payload {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRangeChangedWithADXRVGroup:self withInt:[self getItemCountBeforeGroupWithADXRVGroup:group] + positionStart withInt:itemCount withId:payload];
}

- (void)onItemRangeInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRangeInsertedWithADXRVGroup:self withInt:[self getItemCountBeforeGroupWithADXRVGroup:group] + positionStart withInt:itemCount];
}

- (void)onItemRangeRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRangeRemovedWithADXRVGroup:self withInt:[self getItemCountBeforeGroupWithADXRVGroup:group] + positionStart withInt:itemCount];
}

- (void)onItemMovedWithADXRVGroup:(id<ADXRVGroup>)group
                          withInt:(jint)fromPosition
                          withInt:(jint)toPosition {
  jint groupPosition = [self getItemCountBeforeGroupWithADXRVGroup:group];
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemMovedWithADXRVGroup:self withInt:groupPosition + fromPosition withInt:groupPosition + toPosition];
}

- (void)onDataSetInvalidated {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onDataSetInvalidated];
}

- (void)notifyItemRangeInsertedWithInt:(jint)positionStart
                               withInt:(jint)itemCount {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRangeInsertedWithADXRVGroup:self withInt:positionStart withInt:itemCount];
}

- (void)notifyItemRangeRemovedWithInt:(jint)positionStart
                              withInt:(jint)itemCount {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRangeRemovedWithADXRVGroup:self withInt:positionStart withInt:itemCount];
}

- (void)notifyItemMovedWithInt:(jint)fromPosition
                       withInt:(jint)toPosition {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemMovedWithADXRVGroup:self withInt:fromPosition withInt:toPosition];
}

- (void)notifyChanged {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onChangedWithADXRVGroup:self];
}

- (void)notifyItemInsertedWithInt:(jint)position {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemInsertedWithADXRVGroup:self withInt:position];
}

- (void)notifyItemChangedWithInt:(jint)position {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemChangedWithADXRVGroup:self withInt:position];
}

- (void)notifyItemChangedWithInt:(jint)position
                          withId:(id)payload {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemChangedWithADXRVGroup:self withInt:position withId:payload];
}

- (void)notifyItemRemovedWithInt:(jint)position {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRemovedWithADXRVGroup:self withInt:position];
}

- (void)notifyItemRangeChangedWithInt:(jint)positionStart
                              withInt:(jint)itemCount {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRangeChangedWithADXRVGroup:self withInt:positionStart withInt:itemCount];
}

- (void)notifyItemRangeChangedWithInt:(jint)positionStart
                              withInt:(jint)itemCount
                               withId:(id)payload {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onItemRangeChangedWithADXRVGroup:self withInt:positionStart withInt:itemCount withId:payload];
}

- (void)notifyDataSetInvalidated {
  [((ADXNestedGroup_GroupDataObservable *) nil_chk(observable_)) onDataSetInvalidated];
}

- (void)dealloc {
  RELEASE_(observable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 0, 2, -1, -1, -1, -1 },
    { NULL, "LADXRVGroup;", 0x401, 3, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXItem;", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 5, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, 13, -1, -1 },
    { NULL, "V", 0x1, 10, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 15, -1, 16, -1, -1 },
    { NULL, "V", 0x1, 17, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 12, -1, 13, -1, -1 },
    { NULL, "V", 0x1, 19, 12, -1, 13, -1, -1 },
    { NULL, "V", 0x1, 20, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 30, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 34, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 36, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 38, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 41, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getItemCount);
  methods[2].selector = @selector(getItemCountBeforeGroupWithADXRVGroup:);
  methods[3].selector = @selector(getItemCountBeforeGroupWithInt:);
  methods[4].selector = @selector(getGroupWithInt:);
  methods[5].selector = @selector(getGroupCount);
  methods[6].selector = @selector(getItemWithInt:);
  methods[7].selector = @selector(getPositionWithADXItem:);
  methods[8].selector = @selector(getPositionWithADXRVGroup:);
  methods[9].selector = @selector(registerGroupDataObserverWithADXGroupDataObserver:);
  methods[10].selector = @selector(unregisterGroupDataObserverWithADXGroupDataObserver:);
  methods[11].selector = @selector(addWithADXRVGroup:);
  methods[12].selector = @selector(addAllWithJavaUtilCollection:);
  methods[13].selector = @selector(addWithInt:withADXRVGroup:);
  methods[14].selector = @selector(addAllWithInt:withJavaUtilCollection:);
  methods[15].selector = @selector(removeWithADXRVGroup:);
  methods[16].selector = @selector(removeAllWithJavaUtilCollection:);
  methods[17].selector = @selector(replaceAllWithJavaUtilCollection:);
  methods[18].selector = @selector(onChangedWithADXRVGroup:);
  methods[19].selector = @selector(onItemInsertedWithADXRVGroup:withInt:);
  methods[20].selector = @selector(onItemChangedWithADXRVGroup:withInt:);
  methods[21].selector = @selector(onItemChangedWithADXRVGroup:withInt:withId:);
  methods[22].selector = @selector(onItemRemovedWithADXRVGroup:withInt:);
  methods[23].selector = @selector(onItemRangeChangedWithADXRVGroup:withInt:withInt:);
  methods[24].selector = @selector(onItemRangeChangedWithADXRVGroup:withInt:withInt:withId:);
  methods[25].selector = @selector(onItemRangeInsertedWithADXRVGroup:withInt:withInt:);
  methods[26].selector = @selector(onItemRangeRemovedWithADXRVGroup:withInt:withInt:);
  methods[27].selector = @selector(onItemMovedWithADXRVGroup:withInt:withInt:);
  methods[28].selector = @selector(onDataSetInvalidated);
  methods[29].selector = @selector(notifyItemRangeInsertedWithInt:withInt:);
  methods[30].selector = @selector(notifyItemRangeRemovedWithInt:withInt:);
  methods[31].selector = @selector(notifyItemMovedWithInt:withInt:);
  methods[32].selector = @selector(notifyChanged);
  methods[33].selector = @selector(notifyItemInsertedWithInt:);
  methods[34].selector = @selector(notifyItemChangedWithInt:);
  methods[35].selector = @selector(notifyItemChangedWithInt:withId:);
  methods[36].selector = @selector(notifyItemRemovedWithInt:);
  methods[37].selector = @selector(notifyItemRangeChangedWithInt:withInt:);
  methods[38].selector = @selector(notifyItemRangeChangedWithInt:withInt:withId:);
  methods[39].selector = @selector(notifyDataSetInvalidated);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observable_", "LADXNestedGroup_GroupDataObservable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getItemCountBeforeGroup", "LADXRVGroup;", "I", "getGroup", "getItem", "getPosition", "LADXItem;", "registerGroupDataObserver", "LADXGroupDataObserver;", "unregisterGroupDataObserver", "add", "addAll", "LJavaUtilCollection;", "(Ljava/util/Collection<+Lcom/xwray/groupie/RVGroup;>;)V", "ILADXRVGroup;", "ILJavaUtilCollection;", "(ILjava/util/Collection<+Lcom/xwray/groupie/RVGroup;>;)V", "remove", "removeAll", "replaceAll", "onChanged", "onItemInserted", "LADXRVGroup;I", "onItemChanged", "LADXRVGroup;ILNSObject;", "onItemRemoved", "onItemRangeChanged", "LADXRVGroup;II", "LADXRVGroup;IILNSObject;", "onItemRangeInserted", "onItemRangeRemoved", "onItemMoved", "notifyItemRangeInserted", "II", "notifyItemRangeRemoved", "notifyItemMoved", "notifyItemInserted", "notifyItemChanged", "ILNSObject;", "notifyItemRemoved", "notifyItemRangeChanged", "IILNSObject;", "LADXNestedGroup_GroupDataObservable;" };
  static const J2ObjcClassInfo _ADXNestedGroup = { "NestedGroup", "com.xwray.groupie", ptrTable, methods, fields, 7, 0x401, 40, 1, -1, 42, -1, -1, -1 };
  return &_ADXNestedGroup;
}

@end

void ADXNestedGroup_init(ADXNestedGroup *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->observable_, new_ADXNestedGroup_GroupDataObservable_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNestedGroup)

@implementation ADXNestedGroup_GroupDataObservable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXNestedGroup_GroupDataObservable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onItemRangeChangedWithADXRVGroup:group withInt:positionStart withInt:itemCount];
  }
}

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount
                                  withId:(id)payload {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onItemRangeChangedWithADXRVGroup:group withInt:positionStart withInt:itemCount withId:payload];
  }
}

- (void)onItemInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                             withInt:(jint)position {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onItemInsertedWithADXRVGroup:group withInt:position];
  }
}

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onItemChangedWithADXRVGroup:group withInt:position];
  }
}

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position
                             withId:(id)payload {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onItemChangedWithADXRVGroup:group withInt:position withId:payload];
  }
}

- (void)onItemRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onItemRemovedWithADXRVGroup:group withInt:position];
  }
}

- (void)onItemRangeInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onItemRangeInsertedWithADXRVGroup:group withInt:positionStart withInt:itemCount];
  }
}

- (void)onItemRangeRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onItemRangeRemovedWithADXRVGroup:group withInt:positionStart withInt:itemCount];
  }
}

- (void)onItemMovedWithADXRVGroup:(id<ADXRVGroup>)group
                          withInt:(jint)fromPosition
                          withInt:(jint)toPosition {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onItemMovedWithADXRVGroup:group withInt:fromPosition withInt:toPosition];
  }
}

- (void)onChangedWithADXRVGroup:(id<ADXRVGroup>)group {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onChangedWithADXRVGroup:group];
  }
}

- (void)registerObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)observer {
  @synchronized(observers_) {
    if ([((id<JavaUtilList>) nil_chk(observers_)) containsWithId:observer]) {
      @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$", @"Observer ", observer, @" is already registered."));
    }
    [observers_ addWithId:observer];
  }
}

- (void)unregisterObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)observer {
  @synchronized(observers_) {
    jint index = [((id<JavaUtilList>) nil_chk(observers_)) indexOfWithId:observer];
    [observers_ removeWithInt:index];
  }
}

- (void)onDataSetInvalidated {
  for (jint i = [((id<JavaUtilList>) nil_chk(observers_)) size] - 1; i >= 0; i--) {
    [((id<ADXGroupDataObserver>) nil_chk([observers_ getWithInt:i])) onDataSetInvalidated];
  }
}

- (void)dealloc {
  RELEASE_(observers_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 8, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 9, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 10, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onItemRangeChangedWithADXRVGroup:withInt:withInt:);
  methods[2].selector = @selector(onItemRangeChangedWithADXRVGroup:withInt:withInt:withId:);
  methods[3].selector = @selector(onItemInsertedWithADXRVGroup:withInt:);
  methods[4].selector = @selector(onItemChangedWithADXRVGroup:withInt:);
  methods[5].selector = @selector(onItemChangedWithADXRVGroup:withInt:withId:);
  methods[6].selector = @selector(onItemRemovedWithADXRVGroup:withInt:);
  methods[7].selector = @selector(onItemRangeInsertedWithADXRVGroup:withInt:withInt:);
  methods[8].selector = @selector(onItemRangeRemovedWithADXRVGroup:withInt:withInt:);
  methods[9].selector = @selector(onItemMovedWithADXRVGroup:withInt:withInt:);
  methods[10].selector = @selector(onChangedWithADXRVGroup:);
  methods[11].selector = @selector(registerObserverWithADXGroupDataObserver:);
  methods[12].selector = @selector(unregisterObserverWithADXGroupDataObserver:);
  methods[13].selector = @selector(onDataSetInvalidated);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observers_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 16, -1 },
  };
  static const void *ptrTable[] = { "onItemRangeChanged", "LADXRVGroup;II", "LADXRVGroup;IILNSObject;", "onItemInserted", "LADXRVGroup;I", "onItemChanged", "LADXRVGroup;ILNSObject;", "onItemRemoved", "onItemRangeInserted", "onItemRangeRemoved", "onItemMoved", "onChanged", "LADXRVGroup;", "registerObserver", "LADXGroupDataObserver;", "unregisterObserver", "Ljava/util/List<Lcom/xwray/groupie/GroupDataObserver;>;", "LADXNestedGroup;" };
  static const J2ObjcClassInfo _ADXNestedGroup_GroupDataObservable = { "GroupDataObservable", "com.xwray.groupie", ptrTable, methods, fields, 7, 0xa, 14, 1, 17, -1, -1, -1, -1 };
  return &_ADXNestedGroup_GroupDataObservable;
}

@end

void ADXNestedGroup_GroupDataObservable_init(ADXNestedGroup_GroupDataObservable *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->observers_, new_JavaUtilArrayList_init());
}

ADXNestedGroup_GroupDataObservable *new_ADXNestedGroup_GroupDataObservable_init() {
  J2OBJC_NEW_IMPL(ADXNestedGroup_GroupDataObservable, init)
}

ADXNestedGroup_GroupDataObservable *create_ADXNestedGroup_GroupDataObservable_init() {
  J2OBJC_CREATE_IMPL(ADXNestedGroup_GroupDataObservable, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNestedGroup_GroupDataObservable)
