//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\Plugin_HtmlParser\src\com\ashera\parser\html\Html.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Html")
#ifdef RESTRICT_Html
#define INCLUDE_ALL_Html 0
#else
#define INCLUDE_ALL_Html 1
#endif
#undef RESTRICT_Html

#if !defined (ASHtml_) && (INCLUDE_ALL_Html || defined(INCLUDE_ASHtml))
#define ASHtml_

@protocol ASAttributedString;
@protocol ASIFragment;
@protocol JavaUtilMap;
@protocol OrgXmlSaxContentHandler;

/*!
 @brief This class processes HTML strings into displayable styled text.
 Not all HTML tags are supported.
 */
@interface ASHtml : NSObject

#pragma mark Public

/*!
 @brief Returns displayable styled text from the provided HTML string.
 Any &lt;img&gt; tags in the HTML will use the specified ImageGetter
  to request a representation of the image (use null if you don't
  want this) and the specified TagHandler to handle unknown tags
  (specify null if you don't want this). 
 <p>This uses TagSoup to handle real HTML, including all of the brokenness found in the wild.
 @param htmlConfig
 */
+ (id<ASAttributedString>)fromHtmlWithNSString:(NSString *)source
                               withJavaUtilMap:(id<JavaUtilMap>)htmlConfig
                               withASIFragment:(id<ASIFragment>)fragment;

+ (void)parseHtmlWithNSString:(NSString *)source
  withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)contentHandler;

@end

J2OBJC_EMPTY_STATIC_INIT(ASHtml)

inline NSString *ASHtml_get_UNORDERED_LIST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASHtml_UNORDERED_LIST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASHtml, UNORDERED_LIST, NSString *)

inline NSString *ASHtml_get_ORDERED_LIST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASHtml_ORDERED_LIST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASHtml, ORDERED_LIST, NSString *)

inline NSString *ASHtml_get_LIST_ITEM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASHtml_LIST_ITEM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASHtml, LIST_ITEM, NSString *)

FOUNDATION_EXPORT id<ASAttributedString> ASHtml_fromHtmlWithNSString_withJavaUtilMap_withASIFragment_(NSString *source, id<JavaUtilMap> htmlConfig, id<ASIFragment> fragment);

FOUNDATION_EXPORT void ASHtml_parseHtmlWithNSString_withOrgXmlSaxContentHandler_(NSString *source, id<OrgXmlSaxContentHandler> contentHandler);

J2OBJC_TYPE_LITERAL_HEADER(ASHtml)

@compatibility_alias ComAsheraParserHtmlHtml ASHtml;

#endif

#pragma pop_macro("INCLUDE_ALL_Html")
