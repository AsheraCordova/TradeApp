//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\model\ModelExpressionParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ModelExpressionParser")
#ifdef RESTRICT_ModelExpressionParser
#define INCLUDE_ALL_ModelExpressionParser 0
#else
#define INCLUDE_ALL_ModelExpressionParser 1
#endif
#undef RESTRICT_ModelExpressionParser

#if !defined (ASModelExpressionParser_) && (INCLUDE_ALL_ModelExpressionParser || defined(INCLUDE_ASModelExpressionParser))
#define ASModelExpressionParser_

@class ASModelExpressionParser_ModelFromScopeHolder;
@class ASModelExpressionParser_ModelLoopHolder;
@class ASModelExpressionParser_ModelStoreVarHolder;
@class ASModelExpressionParser_ModelUpdateToScopeHolder;
@class IOSObjectArray;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface ASModelExpressionParser : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

+ (id<JavaUtilList>)parseEventExpressionWithNSString:(NSString *)expression;

+ (ASModelExpressionParser_ModelFromScopeHolder *)parseModelFromScopeWithNSString:(NSString *)expression;

+ (ASModelExpressionParser_ModelLoopHolder *)parseModelLoopExpressionWithNSString:(NSString *)expression;

+ (ASModelExpressionParser_ModelStoreVarHolder *)parseModelStoreVarExpressionWithNSString:(NSString *)expression;

+ (ASModelExpressionParser_ModelUpdateToScopeHolder *)parseModelUpdateToScopeWithNSString:(NSString *)expression;

+ (id<JavaUtilList>)parseModelVarExpressionWithNSString:(NSString *)expression;

+ (id<JavaUtilList>)parsePojoToUiExpressionWithNSString:(NSString *)expression;

+ (id<JavaUtilMap>)parseSimpleCssExpressionWithNSString:(NSString *)cssStr;

+ (id<JavaUtilMap>)parseSimpleCssExpressionWithNSString:(NSString *)cssStr
                                        withJavaUtilMap:(id<JavaUtilMap>)params;

+ (id<JavaUtilList>)parseUiToPojoExpressionWithNSString:(NSString *)expression;

@end

J2OBJC_STATIC_INIT(ASModelExpressionParser)

FOUNDATION_EXPORT void ASModelExpressionParser_init(ASModelExpressionParser *self);

FOUNDATION_EXPORT ASModelExpressionParser *new_ASModelExpressionParser_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASModelExpressionParser *create_ASModelExpressionParser_init(void);

FOUNDATION_EXPORT id<JavaUtilList> ASModelExpressionParser_parseEventExpressionWithNSString_(NSString *expression);

FOUNDATION_EXPORT ASModelExpressionParser_ModelFromScopeHolder *ASModelExpressionParser_parseModelFromScopeWithNSString_(NSString *expression);

FOUNDATION_EXPORT id<JavaUtilList> ASModelExpressionParser_parsePojoToUiExpressionWithNSString_(NSString *expression);

FOUNDATION_EXPORT id<JavaUtilList> ASModelExpressionParser_parseUiToPojoExpressionWithNSString_(NSString *expression);

FOUNDATION_EXPORT ASModelExpressionParser_ModelStoreVarHolder *ASModelExpressionParser_parseModelStoreVarExpressionWithNSString_(NSString *expression);

FOUNDATION_EXPORT id<JavaUtilList> ASModelExpressionParser_parseModelVarExpressionWithNSString_(NSString *expression);

FOUNDATION_EXPORT ASModelExpressionParser_ModelLoopHolder *ASModelExpressionParser_parseModelLoopExpressionWithNSString_(NSString *expression);

FOUNDATION_EXPORT ASModelExpressionParser_ModelUpdateToScopeHolder *ASModelExpressionParser_parseModelUpdateToScopeWithNSString_(NSString *expression);

FOUNDATION_EXPORT id<JavaUtilMap> ASModelExpressionParser_parseSimpleCssExpressionWithNSString_(NSString *cssStr);

FOUNDATION_EXPORT id<JavaUtilMap> ASModelExpressionParser_parseSimpleCssExpressionWithNSString_withJavaUtilMap_(NSString *cssStr, id<JavaUtilMap> params);

FOUNDATION_EXPORT void ASModelExpressionParser_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(ASModelExpressionParser)

@compatibility_alias ComAsheraModelModelExpressionParser ASModelExpressionParser;

#endif

#if !defined (ASModelExpressionParser_ModelEventHolder_) && (INCLUDE_ALL_ModelExpressionParser || defined(INCLUDE_ASModelExpressionParser_ModelEventHolder))
#define ASModelExpressionParser_ModelEventHolder_

@class ASModelScope;
@protocol JavaUtilList;

@interface ASModelExpressionParser_ModelEventHolder : NSObject {
 @public
  NSString *varName_;
  NSString *varPath_;
  NSString *key_;
  ASModelScope *varScope_;
  NSString *methodName_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)data;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASModelExpressionParser_ModelEventHolder)

J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelEventHolder, varName_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelEventHolder, varPath_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelEventHolder, key_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelEventHolder, varScope_, ASModelScope *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelEventHolder, methodName_, NSString *)

FOUNDATION_EXPORT void ASModelExpressionParser_ModelEventHolder_initWithJavaUtilList_(ASModelExpressionParser_ModelEventHolder *self, id<JavaUtilList> data);

FOUNDATION_EXPORT ASModelExpressionParser_ModelEventHolder *new_ASModelExpressionParser_ModelEventHolder_initWithJavaUtilList_(id<JavaUtilList> data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASModelExpressionParser_ModelEventHolder *create_ASModelExpressionParser_ModelEventHolder_initWithJavaUtilList_(id<JavaUtilList> data);

J2OBJC_TYPE_LITERAL_HEADER(ASModelExpressionParser_ModelEventHolder)

#endif

#if !defined (ASModelExpressionParser_ModelFromScopeHolder_) && (INCLUDE_ALL_ModelExpressionParser || defined(INCLUDE_ASModelExpressionParser_ModelFromScopeHolder))
#define ASModelExpressionParser_ModelFromScopeHolder_

@class ASModelScope;
@protocol JavaUtilList;

@interface ASModelExpressionParser_ModelFromScopeHolder : NSObject {
 @public
  NSString *varName_;
  NSString *varPath_;
  ASModelScope *varScope_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)data;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASModelExpressionParser_ModelFromScopeHolder)

J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelFromScopeHolder, varName_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelFromScopeHolder, varPath_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelFromScopeHolder, varScope_, ASModelScope *)

FOUNDATION_EXPORT void ASModelExpressionParser_ModelFromScopeHolder_initWithJavaUtilList_(ASModelExpressionParser_ModelFromScopeHolder *self, id<JavaUtilList> data);

FOUNDATION_EXPORT ASModelExpressionParser_ModelFromScopeHolder *new_ASModelExpressionParser_ModelFromScopeHolder_initWithJavaUtilList_(id<JavaUtilList> data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASModelExpressionParser_ModelFromScopeHolder *create_ASModelExpressionParser_ModelFromScopeHolder_initWithJavaUtilList_(id<JavaUtilList> data);

J2OBJC_TYPE_LITERAL_HEADER(ASModelExpressionParser_ModelFromScopeHolder)

#endif

#if !defined (ASModelExpressionParser_ModelPojoToUiHolder_) && (INCLUDE_ALL_ModelExpressionParser || defined(INCLUDE_ASModelExpressionParser_ModelPojoToUiHolder))
#define ASModelExpressionParser_ModelPojoToUiHolder_

@class ASModelScope;
@protocol JavaUtilList;

@interface ASModelExpressionParser_ModelPojoToUiHolder : NSObject {
 @public
  NSString *varPath_;
  NSString *key_;
  NSString *methodName_;
  ASModelScope *varScope_;
  NSString *modelAttribute_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)data;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASModelExpressionParser_ModelPojoToUiHolder)

J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelPojoToUiHolder, varPath_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelPojoToUiHolder, key_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelPojoToUiHolder, methodName_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelPojoToUiHolder, varScope_, ASModelScope *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelPojoToUiHolder, modelAttribute_, NSString *)

FOUNDATION_EXPORT void ASModelExpressionParser_ModelPojoToUiHolder_initWithJavaUtilList_(ASModelExpressionParser_ModelPojoToUiHolder *self, id<JavaUtilList> data);

FOUNDATION_EXPORT ASModelExpressionParser_ModelPojoToUiHolder *new_ASModelExpressionParser_ModelPojoToUiHolder_initWithJavaUtilList_(id<JavaUtilList> data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASModelExpressionParser_ModelPojoToUiHolder *create_ASModelExpressionParser_ModelPojoToUiHolder_initWithJavaUtilList_(id<JavaUtilList> data);

J2OBJC_TYPE_LITERAL_HEADER(ASModelExpressionParser_ModelPojoToUiHolder)

#endif

#if !defined (ASModelExpressionParser_ModelUiToPojoHolder_) && (INCLUDE_ALL_ModelExpressionParser || defined(INCLUDE_ASModelExpressionParser_ModelUiToPojoHolder))
#define ASModelExpressionParser_ModelUiToPojoHolder_

@class ASModelDataType;
@class ASModelScope;
@protocol JavaUtilList;

@interface ASModelExpressionParser_ModelUiToPojoHolder : NSObject {
 @public
  NSString *varPath_;
  NSString *key_;
  ASModelScope *varScope_;
  NSString *modelAttribute_;
  NSString *varName_;
  ASModelDataType *varType_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)data;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASModelExpressionParser_ModelUiToPojoHolder)

J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUiToPojoHolder, varPath_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUiToPojoHolder, key_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUiToPojoHolder, varScope_, ASModelScope *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUiToPojoHolder, modelAttribute_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUiToPojoHolder, varName_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUiToPojoHolder, varType_, ASModelDataType *)

FOUNDATION_EXPORT void ASModelExpressionParser_ModelUiToPojoHolder_initWithJavaUtilList_(ASModelExpressionParser_ModelUiToPojoHolder *self, id<JavaUtilList> data);

FOUNDATION_EXPORT ASModelExpressionParser_ModelUiToPojoHolder *new_ASModelExpressionParser_ModelUiToPojoHolder_initWithJavaUtilList_(id<JavaUtilList> data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASModelExpressionParser_ModelUiToPojoHolder *create_ASModelExpressionParser_ModelUiToPojoHolder_initWithJavaUtilList_(id<JavaUtilList> data);

J2OBJC_TYPE_LITERAL_HEADER(ASModelExpressionParser_ModelUiToPojoHolder)

#endif

#if !defined (ASModelExpressionParser_ModelStoreVarHolder_) && (INCLUDE_ALL_ModelExpressionParser || defined(INCLUDE_ASModelExpressionParser_ModelStoreVarHolder))
#define ASModelExpressionParser_ModelStoreVarHolder_

@class ASModelDataType;
@class ASModelScope;
@protocol JavaUtilList;

@interface ASModelExpressionParser_ModelStoreVarHolder : NSObject {
 @public
  NSString *varName_;
  ASModelScope *varScope_;
  ASModelDataType *varType_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)data;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASModelExpressionParser_ModelStoreVarHolder)

J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelStoreVarHolder, varName_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelStoreVarHolder, varScope_, ASModelScope *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelStoreVarHolder, varType_, ASModelDataType *)

FOUNDATION_EXPORT void ASModelExpressionParser_ModelStoreVarHolder_initWithJavaUtilList_(ASModelExpressionParser_ModelStoreVarHolder *self, id<JavaUtilList> data);

FOUNDATION_EXPORT ASModelExpressionParser_ModelStoreVarHolder *new_ASModelExpressionParser_ModelStoreVarHolder_initWithJavaUtilList_(id<JavaUtilList> data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASModelExpressionParser_ModelStoreVarHolder *create_ASModelExpressionParser_ModelStoreVarHolder_initWithJavaUtilList_(id<JavaUtilList> data);

J2OBJC_TYPE_LITERAL_HEADER(ASModelExpressionParser_ModelStoreVarHolder)

#endif

#if !defined (ASModelExpressionParser_ModelVarHolder_) && (INCLUDE_ALL_ModelExpressionParser || defined(INCLUDE_ASModelExpressionParser_ModelVarHolder))
#define ASModelExpressionParser_ModelVarHolder_

@class ASModelDataType;
@class ASModelScope;
@protocol JavaUtilList;

@interface ASModelExpressionParser_ModelVarHolder : NSObject {
 @public
  NSString *varName_;
  NSString *varPath_;
  NSString *key_;
  ASModelScope *varSource_;
  ASModelScope *varScope_;
  ASModelDataType *dataType_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)data;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASModelExpressionParser_ModelVarHolder)

J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelVarHolder, varName_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelVarHolder, varPath_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelVarHolder, key_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelVarHolder, varSource_, ASModelScope *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelVarHolder, varScope_, ASModelScope *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelVarHolder, dataType_, ASModelDataType *)

FOUNDATION_EXPORT void ASModelExpressionParser_ModelVarHolder_initWithJavaUtilList_(ASModelExpressionParser_ModelVarHolder *self, id<JavaUtilList> data);

FOUNDATION_EXPORT ASModelExpressionParser_ModelVarHolder *new_ASModelExpressionParser_ModelVarHolder_initWithJavaUtilList_(id<JavaUtilList> data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASModelExpressionParser_ModelVarHolder *create_ASModelExpressionParser_ModelVarHolder_initWithJavaUtilList_(id<JavaUtilList> data);

J2OBJC_TYPE_LITERAL_HEADER(ASModelExpressionParser_ModelVarHolder)

#endif

#if !defined (ASModelExpressionParser_ModelLoopHolder_) && (INCLUDE_ALL_ModelExpressionParser || defined(INCLUDE_ASModelExpressionParser_ModelLoopHolder))
#define ASModelExpressionParser_ModelLoopHolder_

@class ASModelDataType;
@class ASModelScope;
@protocol JavaUtilList;

@interface ASModelExpressionParser_ModelLoopHolder : NSObject {
 @public
  NSString *varName_;
  NSString *varPath_;
  NSString *key_;
  ASModelScope *varSource_;
  ASModelScope *varScope_;
  ASModelDataType *dataType_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)data;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASModelExpressionParser_ModelLoopHolder)

J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelLoopHolder, varName_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelLoopHolder, varPath_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelLoopHolder, key_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelLoopHolder, varSource_, ASModelScope *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelLoopHolder, varScope_, ASModelScope *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelLoopHolder, dataType_, ASModelDataType *)

FOUNDATION_EXPORT void ASModelExpressionParser_ModelLoopHolder_initWithJavaUtilList_(ASModelExpressionParser_ModelLoopHolder *self, id<JavaUtilList> data);

FOUNDATION_EXPORT ASModelExpressionParser_ModelLoopHolder *new_ASModelExpressionParser_ModelLoopHolder_initWithJavaUtilList_(id<JavaUtilList> data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASModelExpressionParser_ModelLoopHolder *create_ASModelExpressionParser_ModelLoopHolder_initWithJavaUtilList_(id<JavaUtilList> data);

J2OBJC_TYPE_LITERAL_HEADER(ASModelExpressionParser_ModelLoopHolder)

#endif

#if !defined (ASModelExpressionParser_ModelUpdateToScopeHolder_) && (INCLUDE_ALL_ModelExpressionParser || defined(INCLUDE_ASModelExpressionParser_ModelUpdateToScopeHolder))
#define ASModelExpressionParser_ModelUpdateToScopeHolder_

@class ASModelDataType;
@class ASModelScope;
@protocol JavaUtilList;

@interface ASModelExpressionParser_ModelUpdateToScopeHolder : NSObject {
 @public
  NSString *varName_;
  NSString *varPath_;
  ASModelDataType *varType_;
  ASModelScope *varScope_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)data;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASModelExpressionParser_ModelUpdateToScopeHolder)

J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUpdateToScopeHolder, varName_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUpdateToScopeHolder, varPath_, NSString *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUpdateToScopeHolder, varType_, ASModelDataType *)
J2OBJC_FIELD_SETTER(ASModelExpressionParser_ModelUpdateToScopeHolder, varScope_, ASModelScope *)

FOUNDATION_EXPORT void ASModelExpressionParser_ModelUpdateToScopeHolder_initWithJavaUtilList_(ASModelExpressionParser_ModelUpdateToScopeHolder *self, id<JavaUtilList> data);

FOUNDATION_EXPORT ASModelExpressionParser_ModelUpdateToScopeHolder *new_ASModelExpressionParser_ModelUpdateToScopeHolder_initWithJavaUtilList_(id<JavaUtilList> data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASModelExpressionParser_ModelUpdateToScopeHolder *create_ASModelExpressionParser_ModelUpdateToScopeHolder_initWithJavaUtilList_(id<JavaUtilList> data);

J2OBJC_TYPE_LITERAL_HEADER(ASModelExpressionParser_ModelUpdateToScopeHolder)

#endif

#pragma pop_macro("INCLUDE_ALL_ModelExpressionParser")
