//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\model\Errors.java
//

#include "Error.h"
#include "Errors.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@protocol JavaUtilList;


@interface ASErrors () {
 @public
  id<JavaUtilList> errors_;
}

@end

J2OBJC_FIELD_SETTER(ASErrors, errors_, id<JavaUtilList>)

@implementation ASErrors

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASErrors_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilList>)getErrors {
  return errors_;
}

- (void)setErrorsWithJavaUtilList:(id<JavaUtilList>)errors {
  JreStrongAssign(&self->errors_, errors);
}

- (jboolean)hasErrors {
  return [((id<JavaUtilList>) nil_chk(errors_)) size] > 0;
}

- (void)addErrorWithASError:(ASError *)error {
  [((id<JavaUtilList>) nil_chk(errors_)) addWithId:error];
}

- (void)clear {
  [((id<JavaUtilList>) nil_chk(errors_)) clear];
}

- (void)dealloc {
  RELEASE_(errors_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getErrors);
  methods[2].selector = @selector(setErrorsWithJavaUtilList:);
  methods[3].selector = @selector(hasErrors);
  methods[4].selector = @selector(addErrorWithASError:);
  methods[5].selector = @selector(clear);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "errors_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/List<Lcom/ashera/model/Error;>;", "setErrors", "LJavaUtilList;", "(Ljava/util/List<Lcom/ashera/model/Error;>;)V", "addError", "LASError;", "Ljava/util/List<Lcom/ashera/model/Error;>;" };
  static const J2ObjcClassInfo _ASErrors = { "Errors", "com.ashera.model", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_ASErrors;
}

@end

void ASErrors_init(ASErrors *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->errors_, new_JavaUtilArrayList_init());
}

ASErrors *new_ASErrors_init() {
  J2OBJC_NEW_IMPL(ASErrors, init)
}

ASErrors *create_ASErrors_init() {
  J2OBJC_CREATE_IMPL(ASErrors, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASErrors)
