//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\validations\BaseValidator.java
//

#include "BaseValidator.h"
#include "IWidget.h"
#include "J2ObjC_source.h"


#pragma clang diagnostic ignored "-Wprotocol"

@implementation ASBaseValidator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASBaseValidator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setErrorMessageWithNSString:(NSString *)errorMessage {
  JreStrongAssign(&self->errorMessage_, errorMessage);
}

- (NSString *)getErrorMessageWithASIWidget:(id<ASIWidget>)widget {
  if (errorMessage_ == nil) {
    return [self getDefaultErrorMessageWithASIWidget:widget];
  }
  return errorMessage_;
}

- (NSString *)getDefaultErrorMessageWithASIWidget:(id<ASIWidget>)widget {
  return nil;
}

- (void)dealloc {
  RELEASE_(errorMessage_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 4, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setErrorMessageWithNSString:);
  methods[2].selector = @selector(getErrorMessageWithASIWidget:);
  methods[3].selector = @selector(getDefaultErrorMessageWithASIWidget:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "errorMessage_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setErrorMessage", "LNSString;", "getErrorMessage", "LASIWidget;", "getDefaultErrorMessage" };
  static const J2ObjcClassInfo _ASBaseValidator = { "BaseValidator", "com.ashera.validations", ptrTable, methods, fields, 7, 0x401, 4, 1, -1, -1, -1, -1, -1 };
  return &_ASBaseValidator;
}

@end

void ASBaseValidator_init(ASBaseValidator *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASBaseValidator)
