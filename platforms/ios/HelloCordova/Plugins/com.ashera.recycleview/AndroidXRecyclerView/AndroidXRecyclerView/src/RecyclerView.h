//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\androidx\recyclerview\widget\RecyclerView.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RecyclerView")
#ifdef RESTRICT_RecyclerView
#define INCLUDE_ALL_RecyclerView 0
#else
#define INCLUDE_ALL_RecyclerView 1
#endif
#undef RESTRICT_RecyclerView
#ifdef INCLUDE_ADXRecyclerView_AdapterDataObservable
#define INCLUDE_ADXRecyclerView_Observable 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADXRecyclerView_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView))
#define ADXRecyclerView_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup 1
#include "ViewGroup.h"

@class ADRect;
@class ADRectF;
@class ADView;
@class ADView_MotionEvent;
@class ADXAdapterHelper;
@class ADXChildHelper;
@class ADXGapWorker_LayoutPrefetchRegistryImpl;
@class ADXRecyclerView_Adapter;
@class ADXRecyclerView_AdapterDataObserver;
@class ADXRecyclerView_ItemAnimator;
@class ADXRecyclerView_ItemAnimator_ItemHolderInfo;
@class ADXRecyclerView_ItemDecoration;
@class ADXRecyclerView_LayoutManager;
@class ADXRecyclerView_OnScrollListener;
@class ADXRecyclerView_RecycledViewPool;
@class ADXRecyclerView_Recycler;
@class ADXRecyclerView_SavedState;
@class ADXRecyclerView_State;
@class ADXRecyclerView_ViewHolder;
@class ADXViewInfoStore;
@class IOSIntArray;
@class JavaUtilArrayList;
@protocol ADXRecyclerView_RecyclerListener;
@protocol JavaLangRunnable;
@protocol JavaUtilList;

@interface ADXRecyclerView : ADViewGroup {
 @public
  ADXRecyclerView_Recycler *mRecycler_;
  ADXAdapterHelper *mAdapterHelper_;
  ADXChildHelper *mChildHelper_;
  ADXViewInfoStore *mViewInfoStore_;
  jboolean mClipToPadding_;
  ADRect *mTempRect_;
  ADRectF *mTempRectF_;
  ADXRecyclerView_Adapter *mAdapter_;
  ADXRecyclerView_LayoutManager *mLayout_;
  id<ADXRecyclerView_RecyclerListener> mRecyclerListener_;
  id<JavaUtilList> mRecyclerListeners_;
  JavaUtilArrayList *mItemDecorations_;
  jboolean mIsAttached_;
  jboolean mHasFixedSize_;
  jboolean mEnableFastScroller_;
  jboolean mFirstLayoutComplete_;
  jboolean mLayoutWasDefered_;
  jboolean mLayoutSuppressed_;
  jboolean mAdapterUpdateDuringMeasure_;
  jboolean mDataSetHasChangedAfterLayout_;
  jboolean mDispatchItemsChangedEvent_;
  ADXGapWorker_LayoutPrefetchRegistryImpl *mPrefetchRegistry_;
  ADXRecyclerView_State *mState_;
  jboolean mItemsAddedOrRemoved_;
  jboolean mItemsChanged_;
  jboolean mPostedAnimatorRunner_;
  IOSIntArray *mReusableIntPair_;
  ADXRecyclerView_SavedState *mPendingSavedState_;
  ADXRecyclerView_ItemAnimator *mItemAnimator_;
}

#pragma mark Public

- (instancetype)init;

- (void)addItemDecorationWithADXRecyclerView_ItemDecoration:(ADXRecyclerView_ItemDecoration *)decor;

- (void)addItemDecorationWithADXRecyclerView_ItemDecoration:(ADXRecyclerView_ItemDecoration *)decor
                                                    withInt:(jint)index;

- (jint)computeHorizontalScrollExtent;

- (jint)computeHorizontalScrollOffset;

- (jint)computeHorizontalScrollRange;

- (jint)computeVerticalScrollExtent;

- (jint)computeVerticalScrollOffset;

- (jint)computeVerticalScrollRange;

- (jboolean)dispatchNestedScrollWithInt:(jint)dxConsumed
                                withInt:(jint)dyConsumed
                                withInt:(jint)dxUnconsumed
                                withInt:(jint)dyUnconsumed
                           withIntArray:(IOSIntArray *)offsetInWindow;

- (jboolean)dispatchNestedScrollWithInt:(jint)dxConsumed
                                withInt:(jint)dyConsumed
                                withInt:(jint)dxUnconsumed
                                withInt:(jint)dyUnconsumed
                           withIntArray:(IOSIntArray *)offsetInWindow
                                withInt:(jint)type;

- (void)dispatchNestedScrollWithInt:(jint)dxConsumed
                            withInt:(jint)dyConsumed
                            withInt:(jint)dxUnconsumed
                            withInt:(jint)dyUnconsumed
                       withIntArray:(IOSIntArray *)offsetInWindow
                            withInt:(jint)type
                       withIntArray:(IOSIntArray *)consumed;

- (ADView *)findContainingItemViewWithADView:(ADView *)view;

- (ADXRecyclerView_ViewHolder *)findViewHolderForPositionWithInt:(jint)position;

- (ADXRecyclerView_Adapter *)getAdapter;

- (ADXRecyclerView_ViewHolder *)getChildViewHolderWithADView:(ADView *)child;

- (jlong)getDrawingTime;

- (ADXRecyclerView_LayoutManager *)getLayoutManager;

- (ADXRecyclerView_RecycledViewPool *)getRecycledViewPool;

- (jint)getScrollState;

- (jboolean)hasPendingAdapterUpdates;

- (jboolean)isComputingLayout;

- (void)offsetChildrenHorizontalWithInt:(jint)dx;

- (void)offsetChildrenVerticalWithInt:(jint)dy;

- (void)onChildAttachedToWindowWithADView:(ADView *)child;

- (void)onChildDetachedFromWindowWithADView:(ADView *)child;

- (void)postWithJavaLangRunnable:(id<JavaLangRunnable>)runnable;

- (void)registerObserverWithADXRecyclerView_AdapterDataObserver:(ADXRecyclerView_AdapterDataObserver *)observer;

- (void)scrollByWithInt:(jint)x
                withInt:(jint)y;

- (void)scrollToPositionWithInt:(jint)position;

- (void)setAdapterWithADXRecyclerView_Adapter:(ADXRecyclerView_Adapter *)adapter;

- (void)setLayoutFrozenWithBoolean:(jboolean)frozen;

- (void)setLayoutManagerWithADXRecyclerView_LayoutManager:(ADXRecyclerView_LayoutManager *)layout;

- (void)setOnScrollListenerWithADXRecyclerView_OnScrollListener:(ADXRecyclerView_OnScrollListener *)listener;

- (void)stopScroll;

- (void)suppressLayoutWithBoolean:(jboolean)suppress;

#pragma mark Protected

- (jboolean)awakenScrollBars;

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b;

- (void)onMeasureWithInt:(jint)widthSpec
                 withInt:(jint)heightSpec;

- (void)removeDetachedViewWithADView:(ADView *)child
                         withBoolean:(jboolean)animate;

#pragma mark Package-Private

- (void)animateAppearanceWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)itemHolder
        withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)preLayoutInfo
        withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)postLayoutInfo;

- (void)animateDisappearanceWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder
           withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)preLayoutInfo
           withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)postLayoutInfo;

- (void)assertInLayoutOrScrollWithNSString:(NSString *)message;

- (void)assertNotInLayoutOrScrollWithNSString:(NSString *)message;

- (jboolean)canReuseUpdatedViewHolderWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder;

+ (void)clearNestedRecyclerViewIfNotNestedWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (void)clearOldPositions;

- (void)considerReleasingGlowsOnScrollWithInt:(jint)dx
                                      withInt:(jint)dy;

- (void)consumePendingUpdateOperations;

- (void)defaultOnMeasureWithInt:(jint)widthSpec
                        withInt:(jint)heightSpec;

- (void)dispatchChildAttachedWithADView:(ADView *)child;

- (void)dispatchChildDetachedWithADView:(ADView *)child;

- (void)dispatchLayout;

- (void)dispatchOnScrolledWithInt:(jint)hresult
                          withInt:(jint)vresult;

- (void)dispatchPendingImportantForAccessibilityChanges;

- (NSString *)exceptionLabel;

- (void)fillRemainingScrollValuesWithADXRecyclerView_State:(ADXRecyclerView_State *)state;

+ (ADXRecyclerView *)findNestedRecyclerViewWithADView:(ADView *)view;

- (ADXRecyclerView_ViewHolder *)findViewHolderForPositionWithInt:(jint)position
                                                     withBoolean:(jboolean)checkNewPosition;

- (jint)getAdapterPositionInRecyclerViewWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder;

- (jlong)getChangedHolderKeyWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

+ (ADXRecyclerView_ViewHolder *)getChildViewHolderIntWithADView:(ADView *)child;

+ (void)getDecoratedBoundsWithMarginsIntWithADView:(ADView *)view
                                        withADRect:(ADRect *)outBounds;

- (ADRect *)getItemDecorInsetsForChildWithADView:(ADView *)child;

- (jlong)getNanoTime;

- (jint)getOverScrollMode;

- (void)initAdapterManager OBJC_METHOD_FAMILY_NONE;

- (jboolean)isAccessibilityEnabled;

- (void)markItemDecorInsetsDirty;

- (void)markKnownViewsInvalid;

- (void)offsetPositionRecordsForInsertWithInt:(jint)positionStart
                                      withInt:(jint)itemCount;

- (void)offsetPositionRecordsForMoveWithInt:(jint)from
                                    withInt:(jint)to;

- (void)offsetPositionRecordsForRemoveWithInt:(jint)positionStart
                                      withInt:(jint)itemCount
                                  withBoolean:(jboolean)applyToPreLayout;

- (void)onEnterLayoutOrScroll;

- (void)onExitLayoutOrScroll;

- (void)onExitLayoutOrScrollWithBoolean:(jboolean)enableChangeEvents;

- (void)postAnimationRunner;

- (void)processDataSetCompletelyChangedWithBoolean:(jboolean)dispatchItemsChanged;

- (void)recordAnimationInfoIfBouncedHiddenViewWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder
                             withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)animationInfo;

- (void)removeAndRecycleViews;

- (void)repositionShadowingViews;

- (void)saveOldPositions;

- (jboolean)scrollByInternalWithInt:(jint)x
                            withInt:(jint)y
             withADView_MotionEvent:(ADView_MotionEvent *)ev
                            withInt:(jint)type;

- (void)scrollStepWithInt:(jint)dx
                  withInt:(jint)dy
             withIntArray:(IOSIntArray *)consumed;

- (void)startInterceptRequestLayout;

- (void)stopInterceptRequestLayoutWithBoolean:(jboolean)performLayoutChildren;

- (void)viewRangeUpdateWithInt:(jint)positionStart
                       withInt:(jint)itemCount
                        withId:(id)payload;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView)

J2OBJC_FIELD_SETTER(ADXRecyclerView, mRecycler_, ADXRecyclerView_Recycler *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mAdapterHelper_, ADXAdapterHelper *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mChildHelper_, ADXChildHelper *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mViewInfoStore_, ADXViewInfoStore *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mTempRect_, ADRect *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mTempRectF_, ADRectF *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mAdapter_, ADXRecyclerView_Adapter *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mLayout_, ADXRecyclerView_LayoutManager *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mRecyclerListener_, id<ADXRecyclerView_RecyclerListener>)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mRecyclerListeners_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mItemDecorations_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mPrefetchRegistry_, ADXGapWorker_LayoutPrefetchRegistryImpl *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mState_, ADXRecyclerView_State *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mReusableIntPair_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mPendingSavedState_, ADXRecyclerView_SavedState *)
J2OBJC_FIELD_SETTER(ADXRecyclerView, mItemAnimator_, ADXRecyclerView_ItemAnimator *)

inline NSString *ADXRecyclerView_get_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXRecyclerView_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXRecyclerView, TAG, NSString *)

inline jboolean ADXRecyclerView_get_DEBUG(void);
#define ADXRecyclerView_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, DEBUG, jboolean)

inline jboolean ADXRecyclerView_get_VERBOSE_TRACING(void);
#define ADXRecyclerView_VERBOSE_TRACING false
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, VERBOSE_TRACING, jboolean)

inline jboolean ADXRecyclerView_get_FORCE_INVALIDATE_DISPLAY_LIST(void);
#define ADXRecyclerView_FORCE_INVALIDATE_DISPLAY_LIST false
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, FORCE_INVALIDATE_DISPLAY_LIST, jboolean)

inline jboolean ADXRecyclerView_get_ALLOW_SIZE_IN_UNSPECIFIED_SPEC(void);
#define ADXRecyclerView_ALLOW_SIZE_IN_UNSPECIFIED_SPEC true
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, ALLOW_SIZE_IN_UNSPECIFIED_SPEC, jboolean)

inline jboolean ADXRecyclerView_get_POST_UPDATES_ON_ANIMATION(void);
#define ADXRecyclerView_POST_UPDATES_ON_ANIMATION true
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, POST_UPDATES_ON_ANIMATION, jboolean)

inline jboolean ADXRecyclerView_get_ALLOW_THREAD_GAP_WORK(void);
#define ADXRecyclerView_ALLOW_THREAD_GAP_WORK true
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, ALLOW_THREAD_GAP_WORK, jboolean)

inline jboolean ADXRecyclerView_get_DISPATCH_TEMP_DETACH(void);
#define ADXRecyclerView_DISPATCH_TEMP_DETACH false
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, DISPATCH_TEMP_DETACH, jboolean)

inline jint ADXRecyclerView_get_HORIZONTAL(void);
#define ADXRecyclerView_HORIZONTAL 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, HORIZONTAL, jint)

inline jint ADXRecyclerView_get_VERTICAL(void);
#define ADXRecyclerView_VERTICAL 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, VERTICAL, jint)

inline jint ADXRecyclerView_get_DEFAULT_ORIENTATION(void);
#define ADXRecyclerView_DEFAULT_ORIENTATION 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, DEFAULT_ORIENTATION, jint)

inline jint ADXRecyclerView_get_NO_POSITION(void);
#define ADXRecyclerView_NO_POSITION -1
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, NO_POSITION, jint)

inline jint ADXRecyclerView_get_INVALID_TYPE(void);
#define ADXRecyclerView_INVALID_TYPE -1
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, INVALID_TYPE, jint)

inline jint ADXRecyclerView_get_TOUCH_SLOP_DEFAULT(void);
#define ADXRecyclerView_TOUCH_SLOP_DEFAULT 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, TOUCH_SLOP_DEFAULT, jint)

inline jint ADXRecyclerView_get_TOUCH_SLOP_PAGING(void);
#define ADXRecyclerView_TOUCH_SLOP_PAGING 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, TOUCH_SLOP_PAGING, jint)

inline jint ADXRecyclerView_get_UNDEFINED_DURATION(void);
#define ADXRecyclerView_UNDEFINED_DURATION ((jint) 0x80000000)
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, UNDEFINED_DURATION, jint)

inline jint ADXRecyclerView_get_MAX_SCROLL_DURATION(void);
#define ADXRecyclerView_MAX_SCROLL_DURATION 2000
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, MAX_SCROLL_DURATION, jint)

inline NSString *ADXRecyclerView_get_TRACE_SCROLL_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXRecyclerView_TRACE_SCROLL_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXRecyclerView, TRACE_SCROLL_TAG, NSString *)

inline NSString *ADXRecyclerView_get_TRACE_BIND_VIEW_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXRecyclerView_TRACE_BIND_VIEW_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXRecyclerView, TRACE_BIND_VIEW_TAG, NSString *)

inline NSString *ADXRecyclerView_get_TRACE_PREFETCH_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXRecyclerView_TRACE_PREFETCH_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXRecyclerView, TRACE_PREFETCH_TAG, NSString *)

inline NSString *ADXRecyclerView_get_TRACE_NESTED_PREFETCH_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXRecyclerView_TRACE_NESTED_PREFETCH_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXRecyclerView, TRACE_NESTED_PREFETCH_TAG, NSString *)

inline NSString *ADXRecyclerView_get_TRACE_CREATE_VIEW_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXRecyclerView_TRACE_CREATE_VIEW_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXRecyclerView, TRACE_CREATE_VIEW_TAG, NSString *)

inline jint ADXRecyclerView_get_SCROLL_STATE_IDLE(void);
#define ADXRecyclerView_SCROLL_STATE_IDLE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, SCROLL_STATE_IDLE, jint)

inline jint ADXRecyclerView_get_SCROLL_STATE_DRAGGING(void);
#define ADXRecyclerView_SCROLL_STATE_DRAGGING 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, SCROLL_STATE_DRAGGING, jint)

inline jint ADXRecyclerView_get_SCROLL_STATE_SETTLING(void);
#define ADXRecyclerView_SCROLL_STATE_SETTLING 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, SCROLL_STATE_SETTLING, jint)

inline jlong ADXRecyclerView_get_FOREVER_NS(void);
#define ADXRecyclerView_FOREVER_NS 9223372036854775807LL
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, FOREVER_NS, jlong)

inline jint ADXRecyclerView_get_TYPE_TOUCH(void);
#define ADXRecyclerView_TYPE_TOUCH 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView, TYPE_TOUCH, jint)

FOUNDATION_EXPORT ADXRecyclerView_ViewHolder *ADXRecyclerView_getChildViewHolderIntWithADView_(ADView *child);

FOUNDATION_EXPORT void ADXRecyclerView_getDecoratedBoundsWithMarginsIntWithADView_withADRect_(ADView *view, ADRect *outBounds);

FOUNDATION_EXPORT ADXRecyclerView *ADXRecyclerView_findNestedRecyclerViewWithADView_(ADView *view);

FOUNDATION_EXPORT void ADXRecyclerView_clearNestedRecyclerViewIfNotNestedWithADXRecyclerView_ViewHolder_(ADXRecyclerView_ViewHolder *holder);

FOUNDATION_EXPORT void ADXRecyclerView_init(ADXRecyclerView *self);

FOUNDATION_EXPORT ADXRecyclerView *new_ADXRecyclerView_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView *create_ADXRecyclerView_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView)

@compatibility_alias AndroidxRecyclerviewWidgetRecyclerView ADXRecyclerView;

#endif

#if !defined (ADXRecyclerView_AdapterDataObserver_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_AdapterDataObserver))
#define ADXRecyclerView_AdapterDataObserver_

@interface ADXRecyclerView_AdapterDataObserver : NSObject

#pragma mark Public

- (instancetype)init;

- (void)onChanged;

- (void)onItemRangeChangedWithInt:(jint)positionStart
                          withInt:(jint)itemCount;

- (void)onItemRangeChangedWithInt:(jint)positionStart
                          withInt:(jint)itemCount
                           withId:(id)payload;

- (void)onItemRangeInsertedWithInt:(jint)positionStart
                           withInt:(jint)itemCount;

- (void)onItemRangeMovedWithInt:(jint)fromPosition
                        withInt:(jint)toPosition
                        withInt:(jint)itemCount;

- (void)onItemRangeRemovedWithInt:(jint)positionStart
                          withInt:(jint)itemCount;

- (void)onStateRestorationPolicyChanged;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_AdapterDataObserver)

FOUNDATION_EXPORT void ADXRecyclerView_AdapterDataObserver_init(ADXRecyclerView_AdapterDataObserver *self);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_AdapterDataObserver)

#endif

#if !defined (ADXRecyclerView_RecycledViewPool_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_RecycledViewPool))
#define ADXRecyclerView_RecycledViewPool_

@class ADSparseArray;
@class ADXRecyclerView_Adapter;
@class ADXRecyclerView_ViewHolder;

@interface ADXRecyclerView_RecycledViewPool : NSObject {
 @public
  ADSparseArray *mScrap_;
}

#pragma mark Public

- (instancetype)init;

- (void)clear;

- (ADXRecyclerView_ViewHolder *)getRecycledViewWithInt:(jint)viewType;

- (jint)getRecycledViewCountWithInt:(jint)viewType;

- (void)putRecycledViewWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)scrap;

- (void)setMaxRecycledViewsWithInt:(jint)viewType
                           withInt:(jint)max;

#pragma mark Package-Private

- (void)attach;

- (void)detach;

- (void)factorInBindTimeWithInt:(jint)viewType
                       withLong:(jlong)bindTimeNs;

- (void)factorInCreateTimeWithInt:(jint)viewType
                         withLong:(jlong)createTimeNs;

- (void)onAdapterChangedWithADXRecyclerView_Adapter:(ADXRecyclerView_Adapter *)oldAdapter
                        withADXRecyclerView_Adapter:(ADXRecyclerView_Adapter *)newAdapter
                                        withBoolean:(jboolean)compatibleWithPrevious;

- (jlong)runningAverageWithLong:(jlong)oldAverage
                       withLong:(jlong)newValue;

- (jint)size;

- (jboolean)willBindInTimeWithInt:(jint)viewType
                         withLong:(jlong)approxCurrentNs
                         withLong:(jlong)deadlineNs;

- (jboolean)willCreateInTimeWithInt:(jint)viewType
                           withLong:(jlong)approxCurrentNs
                           withLong:(jlong)deadlineNs;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_RecycledViewPool)

J2OBJC_FIELD_SETTER(ADXRecyclerView_RecycledViewPool, mScrap_, ADSparseArray *)

FOUNDATION_EXPORT void ADXRecyclerView_RecycledViewPool_init(ADXRecyclerView_RecycledViewPool *self);

FOUNDATION_EXPORT ADXRecyclerView_RecycledViewPool *new_ADXRecyclerView_RecycledViewPool_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_RecycledViewPool *create_ADXRecyclerView_RecycledViewPool_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_RecycledViewPool)

#endif

#if !defined (ADXRecyclerView_RecycledViewPool_ScrapData_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_RecycledViewPool_ScrapData))
#define ADXRecyclerView_RecycledViewPool_ScrapData_

@class JavaUtilArrayList;

@interface ADXRecyclerView_RecycledViewPool_ScrapData : NSObject {
 @public
  JavaUtilArrayList *mScrapHeap_;
  jint mMaxScrap_;
  jlong mCreateRunningAverageNs_;
  jlong mBindRunningAverageNs_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_RecycledViewPool_ScrapData)

J2OBJC_FIELD_SETTER(ADXRecyclerView_RecycledViewPool_ScrapData, mScrapHeap_, JavaUtilArrayList *)

FOUNDATION_EXPORT void ADXRecyclerView_RecycledViewPool_ScrapData_init(ADXRecyclerView_RecycledViewPool_ScrapData *self);

FOUNDATION_EXPORT ADXRecyclerView_RecycledViewPool_ScrapData *new_ADXRecyclerView_RecycledViewPool_ScrapData_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_RecycledViewPool_ScrapData *create_ADXRecyclerView_RecycledViewPool_ScrapData_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_RecycledViewPool_ScrapData)

#endif

#if !defined (ADXRecyclerView_Recycler_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_Recycler))
#define ADXRecyclerView_Recycler_

@class ADView;
@class ADXRecyclerView;
@class ADXRecyclerView_Adapter;
@class ADXRecyclerView_RecycledViewPool;
@class ADXRecyclerView_ViewCacheExtension;
@class ADXRecyclerView_ViewHolder;
@class JavaUtilArrayList;
@protocol JavaUtilList;

@interface ADXRecyclerView_Recycler : NSObject {
 @public
  JavaUtilArrayList *mAttachedScrap_;
  JavaUtilArrayList *mChangedScrap_;
  JavaUtilArrayList *mCachedViews_;
  jint mViewCacheMax_;
  ADXRecyclerView_RecycledViewPool *mRecyclerPool_;
}

#pragma mark Public

- (instancetype)initWithADXRecyclerView:(ADXRecyclerView *)outer$;

- (void)bindViewToPositionWithADView:(ADView *)view
                             withInt:(jint)position;

- (void)clear;

- (jint)convertPreLayoutPositionToPostLayoutWithInt:(jint)position;

- (id<JavaUtilList>)getScrapList;

- (ADView *)getViewForPositionWithInt:(jint)position;

- (void)recycleViewWithADView:(ADView *)view;

- (void)setViewCacheSizeWithInt:(jint)viewCount;

#pragma mark Package-Private

- (void)addViewHolderToRecycledViewPoolWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder
                                                          withBoolean:(jboolean)dispatchRecycled;

- (void)clearOldPositions;

- (void)clearScrap;

- (void)dispatchViewRecycledWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (ADXRecyclerView_ViewHolder *)getChangedScrapViewForPositionWithInt:(jint)position;

- (ADXRecyclerView_RecycledViewPool *)getRecycledViewPool;

- (jint)getScrapCount;

- (ADXRecyclerView_ViewHolder *)getScrapOrCachedViewForIdWithLong:(jlong)id_
                                                          withInt:(jint)type
                                                      withBoolean:(jboolean)dryRun;

- (ADXRecyclerView_ViewHolder *)getScrapOrHiddenOrCachedHolderForPositionWithInt:(jint)position
                                                                     withBoolean:(jboolean)dryRun;

- (ADView *)getScrapViewAtWithInt:(jint)index;

- (ADView *)getViewForPositionWithInt:(jint)position
                          withBoolean:(jboolean)dryRun;

- (void)markItemDecorInsetsDirty;

- (void)markKnownViewsInvalid;

- (void)offsetPositionRecordsForInsertWithInt:(jint)insertedAt
                                      withInt:(jint)count;

- (void)offsetPositionRecordsForMoveWithInt:(jint)from
                                    withInt:(jint)to;

- (void)offsetPositionRecordsForRemoveWithInt:(jint)removedFrom
                                      withInt:(jint)count
                                  withBoolean:(jboolean)applyToPreLayout;

- (void)onAdapterChangedWithADXRecyclerView_Adapter:(ADXRecyclerView_Adapter *)oldAdapter
                        withADXRecyclerView_Adapter:(ADXRecyclerView_Adapter *)newAdapter
                                        withBoolean:(jboolean)compatibleWithPrevious;

- (void)quickRecycleScrapViewWithADView:(ADView *)view;

- (void)recycleAndClearCachedViews;

- (void)recycleCachedViewAtWithInt:(jint)cachedViewIndex;

- (void)recycleViewHolderInternalWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (void)scrapViewWithADView:(ADView *)view;

- (void)setRecycledViewPoolWithADXRecyclerView_RecycledViewPool:(ADXRecyclerView_RecycledViewPool *)pool;

- (void)setViewCacheExtensionWithADXRecyclerView_ViewCacheExtension:(ADXRecyclerView_ViewCacheExtension *)extension;

- (ADXRecyclerView_ViewHolder *)tryGetViewHolderForPositionByDeadlineWithInt:(jint)position
                                                                 withBoolean:(jboolean)dryRun
                                                                    withLong:(jlong)deadlineNs;

- (void)unscrapViewWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (void)updateViewCacheSize;

- (jboolean)validateViewHolderForOffsetPositionWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (void)viewRangeUpdateWithInt:(jint)positionStart
                       withInt:(jint)itemCount;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_Recycler)

J2OBJC_FIELD_SETTER(ADXRecyclerView_Recycler, mAttachedScrap_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_Recycler, mChangedScrap_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_Recycler, mCachedViews_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_Recycler, mRecyclerPool_, ADXRecyclerView_RecycledViewPool *)

inline jint ADXRecyclerView_Recycler_get_DEFAULT_CACHE_SIZE(void);
#define ADXRecyclerView_Recycler_DEFAULT_CACHE_SIZE 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_Recycler, DEFAULT_CACHE_SIZE, jint)

FOUNDATION_EXPORT void ADXRecyclerView_Recycler_initWithADXRecyclerView_(ADXRecyclerView_Recycler *self, ADXRecyclerView *outer$);

FOUNDATION_EXPORT ADXRecyclerView_Recycler *new_ADXRecyclerView_Recycler_initWithADXRecyclerView_(ADXRecyclerView *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_Recycler *create_ADXRecyclerView_Recycler_initWithADXRecyclerView_(ADXRecyclerView *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_Recycler)

#endif

#if !defined (ADXRecyclerView_ViewCacheExtension_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_ViewCacheExtension))
#define ADXRecyclerView_ViewCacheExtension_

@class ADView;
@class ADXRecyclerView_Recycler;

@interface ADXRecyclerView_ViewCacheExtension : NSObject

#pragma mark Public

- (instancetype)init;

- (ADView *)getViewForPositionAndTypeWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
                                                          withInt:(jint)position
                                                          withInt:(jint)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_ViewCacheExtension)

FOUNDATION_EXPORT void ADXRecyclerView_ViewCacheExtension_init(ADXRecyclerView_ViewCacheExtension *self);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_ViewCacheExtension)

#endif

#if !defined (ADXRecyclerView_Adapter_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_Adapter))
#define ADXRecyclerView_Adapter_

@class ADViewGroup;
@class ADXRecyclerView;
@class ADXRecyclerView_AdapterDataObserver;
@class ADXRecyclerView_ViewHolder;
@protocol JavaUtilList;

@interface ADXRecyclerView_Adapter : NSObject

#pragma mark Public

- (instancetype)init;

- (void)bindViewHolderWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder
                                             withInt:(jint)position;

- (ADXRecyclerView_ViewHolder *)createViewHolderWithADViewGroup:(ADViewGroup *)parent
                                                        withInt:(jint)viewType;

- (jint)findRelativeAdapterPositionInWithADXRecyclerView_Adapter:(ADXRecyclerView_Adapter *)adapter
                                  withADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder
                                                         withInt:(jint)localPosition;

- (jint)getItemCount;

- (jlong)getItemIdWithInt:(jint)position;

- (jint)getItemViewTypeWithInt:(jint)position;

- (jboolean)hasObservers;

- (jboolean)hasStableIds;

- (void)notifyDataSetChanged;

- (void)notifyItemChangedWithInt:(jint)position;

- (void)notifyItemChangedWithInt:(jint)position
                          withId:(id)payload;

- (void)notifyItemInsertedWithInt:(jint)position;

- (void)notifyItemMovedWithInt:(jint)fromPosition
                       withInt:(jint)toPosition;

- (void)notifyItemRangeChangedWithInt:(jint)positionStart
                              withInt:(jint)itemCount;

- (void)notifyItemRangeChangedWithInt:(jint)positionStart
                              withInt:(jint)itemCount
                               withId:(id)payload;

- (void)notifyItemRangeInsertedWithInt:(jint)positionStart
                               withInt:(jint)itemCount;

- (void)notifyItemRangeRemovedWithInt:(jint)positionStart
                              withInt:(jint)itemCount;

- (void)notifyItemRemovedWithInt:(jint)position;

- (void)onAttachedToRecyclerViewWithADXRecyclerView:(ADXRecyclerView *)recyclerView;

- (void)onBindViewHolderWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder
                                               withInt:(jint)position;

- (void)onBindViewHolderWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder
                                               withInt:(jint)position
                                      withJavaUtilList:(id<JavaUtilList>)payloads;

- (ADXRecyclerView_ViewHolder *)onCreateViewHolderWithADViewGroup:(ADViewGroup *)parent
                                                          withInt:(jint)viewType;

- (void)onDetachedFromRecyclerViewWithADXRecyclerView:(ADXRecyclerView *)recyclerView;

- (jboolean)onFailedToRecycleViewWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (void)onViewAttachedToWindowWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (void)onViewDetachedFromWindowWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (void)onViewRecycledWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (void)registerAdapterDataObserverWithADXRecyclerView_AdapterDataObserver:(ADXRecyclerView_AdapterDataObserver *)observer;

- (void)setHasStableIdsWithBoolean:(jboolean)hasStableIds;

- (void)unregisterAdapterDataObserverWithADXRecyclerView_AdapterDataObserver:(ADXRecyclerView_AdapterDataObserver *)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_Adapter)

FOUNDATION_EXPORT void ADXRecyclerView_Adapter_init(ADXRecyclerView_Adapter *self);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_Adapter)

#endif

#if !defined (ADXRecyclerView_Adapter_StateRestorationPolicy_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_Adapter_StateRestorationPolicy))
#define ADXRecyclerView_Adapter_StateRestorationPolicy_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ADXRecyclerView_Adapter_StateRestorationPolicy_Enum) {
  ADXRecyclerView_Adapter_StateRestorationPolicy_Enum_ALLOW = 0,
  ADXRecyclerView_Adapter_StateRestorationPolicy_Enum_PREVENT_WHEN_EMPTY = 1,
  ADXRecyclerView_Adapter_StateRestorationPolicy_Enum_PREVENT = 2,
};

@interface ADXRecyclerView_Adapter_StateRestorationPolicy : JavaLangEnum

#pragma mark Public

+ (ADXRecyclerView_Adapter_StateRestorationPolicy *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ADXRecyclerView_Adapter_StateRestorationPolicy_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ADXRecyclerView_Adapter_StateRestorationPolicy)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ADXRecyclerView_Adapter_StateRestorationPolicy *ADXRecyclerView_Adapter_StateRestorationPolicy_values_[];

inline ADXRecyclerView_Adapter_StateRestorationPolicy *ADXRecyclerView_Adapter_StateRestorationPolicy_get_ALLOW(void);
J2OBJC_ENUM_CONSTANT(ADXRecyclerView_Adapter_StateRestorationPolicy, ALLOW)

inline ADXRecyclerView_Adapter_StateRestorationPolicy *ADXRecyclerView_Adapter_StateRestorationPolicy_get_PREVENT_WHEN_EMPTY(void);
J2OBJC_ENUM_CONSTANT(ADXRecyclerView_Adapter_StateRestorationPolicy, PREVENT_WHEN_EMPTY)

inline ADXRecyclerView_Adapter_StateRestorationPolicy *ADXRecyclerView_Adapter_StateRestorationPolicy_get_PREVENT(void);
J2OBJC_ENUM_CONSTANT(ADXRecyclerView_Adapter_StateRestorationPolicy, PREVENT)

FOUNDATION_EXPORT IOSObjectArray *ADXRecyclerView_Adapter_StateRestorationPolicy_values(void);

FOUNDATION_EXPORT ADXRecyclerView_Adapter_StateRestorationPolicy *ADXRecyclerView_Adapter_StateRestorationPolicy_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ADXRecyclerView_Adapter_StateRestorationPolicy *ADXRecyclerView_Adapter_StateRestorationPolicy_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_Adapter_StateRestorationPolicy)

#endif

#if !defined (ADXRecyclerView_LayoutManager_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_LayoutManager))
#define ADXRecyclerView_LayoutManager_

@class ADRect;
@class ADView;
@class ADXChildHelper;
@class ADXRecyclerView;
@class ADXRecyclerView_Adapter;
@class ADXRecyclerView_LayoutParams;
@class ADXRecyclerView_Recycler;
@class ADXRecyclerView_State;
@class ADXViewBoundsCheck;
@class JavaUtilArrayList;
@protocol ADParcelable;
@protocol ADXRecyclerView_LayoutManager_LayoutPrefetchRegistry;
@protocol JavaLangRunnable;

@interface ADXRecyclerView_LayoutManager : NSObject {
 @public
  ADXChildHelper *mChildHelper_;
  ADXRecyclerView *mRecyclerView_;
  ADXViewBoundsCheck *mHorizontalBoundCheck_;
  ADXViewBoundsCheck *mVerticalBoundCheck_;
  jboolean mRequestedSimpleAnimations_;
  jboolean mIsAttachedToWindow_;
  jboolean mAutoMeasure_;
  jint mPrefetchMaxCountObserved_;
  jboolean mPrefetchMaxObservedInInitialPrefetch_;
}

#pragma mark Public

- (instancetype)init;

- (void)addDisappearingViewWithADView:(ADView *)child;

- (void)addDisappearingViewWithADView:(ADView *)child
                              withInt:(jint)index;

- (void)addViewWithADView:(ADView *)child;

- (void)addViewWithADView:(ADView *)child
                  withInt:(jint)index;

- (void)assertInLayoutOrScrollWithNSString:(NSString *)message;

- (void)assertNotInLayoutOrScrollWithNSString:(NSString *)message;

- (void)attachViewWithADView:(ADView *)child;

- (void)attachViewWithADView:(ADView *)child
                     withInt:(jint)index;

- (void)attachViewWithADView:(ADView *)child
                     withInt:(jint)index
withADXRecyclerView_LayoutParams:(ADXRecyclerView_LayoutParams *)lp;

- (void)calculateItemDecorationsForChildWithADView:(ADView *)child
                                        withADRect:(ADRect *)outRect;

- (jboolean)canScrollHorizontally;

- (jboolean)canScrollVertically;

- (jboolean)checkLayoutParamsWithADXRecyclerView_LayoutParams:(ADXRecyclerView_LayoutParams *)lp;

+ (jint)chooseSizeWithInt:(jint)spec
                  withInt:(jint)desired
                  withInt:(jint)min;

- (void)collectAdjacentPrefetchPositionsWithInt:(jint)dx
                                        withInt:(jint)dy
                      withADXRecyclerView_State:(ADXRecyclerView_State *)state
withADXRecyclerView_LayoutManager_LayoutPrefetchRegistry:(id<ADXRecyclerView_LayoutManager_LayoutPrefetchRegistry>)layoutPrefetchRegistry;

- (void)collectInitialPrefetchPositionsWithInt:(jint)adapterItemCount
withADXRecyclerView_LayoutManager_LayoutPrefetchRegistry:(id<ADXRecyclerView_LayoutManager_LayoutPrefetchRegistry>)layoutPrefetchRegistry;

- (jint)computeHorizontalScrollExtentWithADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (jint)computeHorizontalScrollOffsetWithADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (jint)computeHorizontalScrollRangeWithADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (jint)computeVerticalScrollExtentWithADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (jint)computeVerticalScrollOffsetWithADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (jint)computeVerticalScrollRangeWithADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (void)detachAndScrapAttachedViewsWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler;

- (void)detachAndScrapViewWithADView:(ADView *)child
        withADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler;

- (void)detachAndScrapViewAtWithInt:(jint)index
       withADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler;

- (void)detachViewWithADView:(ADView *)child;

- (void)detachViewAtWithInt:(jint)index;

- (void)endAnimationWithADView:(ADView *)view;

- (ADView *)findContainingItemViewWithADView:(ADView *)view;

- (ADView *)findViewByPositionWithInt:(jint)position;

- (ADXRecyclerView_LayoutParams *)generateDefaultLayoutParams;

- (jint)getBaseline;

- (jint)getBottomDecorationHeightWithADView:(ADView *)child;

- (ADView *)getChildAtWithInt:(jint)index;

- (jint)getChildCount;

+ (jint)getChildMeasureSpecWithInt:(jint)parentSize
                           withInt:(jint)padding
                           withInt:(jint)childDimension
                       withBoolean:(jboolean)canScroll;

+ (jint)getChildMeasureSpecWithInt:(jint)parentSize
                           withInt:(jint)parentMode
                           withInt:(jint)padding
                           withInt:(jint)childDimension
                       withBoolean:(jboolean)canScroll;

- (jboolean)getClipToPadding;

- (jint)getColumnCountForAccessibilityWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
                                         withADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (jint)getDecoratedBottomWithADView:(ADView *)child;

- (void)getDecoratedBoundsWithMarginsWithADView:(ADView *)view
                                     withADRect:(ADRect *)outBounds;

- (jint)getDecoratedLeftWithADView:(ADView *)child;

- (jint)getDecoratedMeasuredHeightWithADView:(ADView *)child;

- (jint)getDecoratedMeasuredWidthWithADView:(ADView *)child;

- (jint)getDecoratedRightWithADView:(ADView *)child;

- (jint)getDecoratedTopWithADView:(ADView *)child;

- (jint)getHeight;

- (jint)getHeightMode;

- (jint)getItemCount;

- (jint)getItemViewTypeWithADView:(ADView *)view;

- (jint)getLayoutDirection;

- (jint)getLeftDecorationWidthWithADView:(ADView *)child;

- (jint)getMinimumHeight;

- (jint)getMinimumWidth;

- (jint)getPaddingBottom;

- (jint)getPaddingEnd;

- (jint)getPaddingLeft;

- (jint)getPaddingRight;

- (jint)getPaddingStart;

- (jint)getPaddingTop;

- (jint)getPositionWithADView:(ADView *)view;

- (jint)getRightDecorationWidthWithADView:(ADView *)child;

- (jint)getRowCountForAccessibilityWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
                                      withADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (jint)getTopDecorationHeightWithADView:(ADView *)child;

- (void)getTransformedBoundingBoxWithADView:(ADView *)child
                                withBoolean:(jboolean)includeDecorInsets
                                 withADRect:(ADRect *)outArg;

- (jint)getWidth;

- (jint)getWidthMode;

- (jboolean)hasFocus;

- (void)ignoreViewWithADView:(ADView *)view;

- (jboolean)isAttachedToWindow;

- (jboolean)isAutoMeasureEnabled;

- (jboolean)isFocused;

- (jboolean)isItemPrefetchEnabled;

- (jboolean)isLayoutHierarchicalWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
                                   withADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (jboolean)isMeasurementCacheEnabled;

- (void)layoutDecoratedWithADView:(ADView *)child
                          withInt:(jint)left
                          withInt:(jint)top
                          withInt:(jint)right
                          withInt:(jint)bottom;

- (void)layoutDecoratedWithMarginsWithADView:(ADView *)child
                                     withInt:(jint)left
                                     withInt:(jint)top
                                     withInt:(jint)right
                                     withInt:(jint)bottom;

- (void)measureChildWithADView:(ADView *)child
                       withInt:(jint)widthUsed
                       withInt:(jint)heightUsed;

- (void)measureChildWithMarginsWithADView:(ADView *)child
                                  withInt:(jint)widthUsed
                                  withInt:(jint)heightUsed;

- (void)moveViewWithInt:(jint)fromIndex
                withInt:(jint)toIndex;

- (void)offsetChildrenHorizontalWithInt:(jint)dx;

- (void)offsetChildrenVerticalWithInt:(jint)dy;

- (void)onAdapterChangedWithADXRecyclerView_Adapter:(ADXRecyclerView_Adapter *)oldAdapter
                        withADXRecyclerView_Adapter:(ADXRecyclerView_Adapter *)newAdapter;

- (jboolean)onAddFocusablesWithADXRecyclerView:(ADXRecyclerView *)recyclerView
                         withJavaUtilArrayList:(JavaUtilArrayList *)views
                                       withInt:(jint)direction
                                       withInt:(jint)focusableMode;

- (void)onAttachedToWindowWithADXRecyclerView:(ADXRecyclerView *)view;

- (void)onDetachedFromWindowWithADXRecyclerView:(ADXRecyclerView *)view;

- (void)onDetachedFromWindowWithADXRecyclerView:(ADXRecyclerView *)view
                   withADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler;

- (ADView *)onFocusSearchFailedWithADView:(ADView *)focused
                                  withInt:(jint)direction
             withADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
                withADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (ADView *)onInterceptFocusSearchWithADView:(ADView *)focused
                                     withInt:(jint)direction;

- (void)onItemsAddedWithADXRecyclerView:(ADXRecyclerView *)recyclerView
                                withInt:(jint)positionStart
                                withInt:(jint)itemCount;

- (void)onItemsChangedWithADXRecyclerView:(ADXRecyclerView *)recyclerView;

- (void)onItemsMovedWithADXRecyclerView:(ADXRecyclerView *)recyclerView
                                withInt:(jint)from
                                withInt:(jint)to
                                withInt:(jint)itemCount;

- (void)onItemsRemovedWithADXRecyclerView:(ADXRecyclerView *)recyclerView
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount;

- (void)onItemsUpdatedWithADXRecyclerView:(ADXRecyclerView *)recyclerView
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount;

- (void)onItemsUpdatedWithADXRecyclerView:(ADXRecyclerView *)recyclerView
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount
                                   withId:(id)payload;

- (void)onLayoutChildrenWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
                           withADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (void)onLayoutCompletedWithADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (void)onMeasureWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
                    withADXRecyclerView_State:(ADXRecyclerView_State *)state
                                      withInt:(jint)widthSpec
                                      withInt:(jint)heightSpec;

- (void)onRestoreInstanceStateWithADParcelable:(id<ADParcelable>)state;

- (id<ADParcelable>)onSaveInstanceState;

- (void)onScrollStateChangedWithInt:(jint)state;

- (void)postOnAnimationWithJavaLangRunnable:(id<JavaLangRunnable>)action;

- (void)removeAllViews;

- (void)removeAndRecycleAllViewsWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler;

- (void)removeAndRecycleViewWithADView:(ADView *)child
          withADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler;

- (void)removeAndRecycleViewAtWithInt:(jint)index
         withADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler;

- (jboolean)removeCallbacksWithJavaLangRunnable:(id<JavaLangRunnable>)action;

- (void)removeDetachedViewWithADView:(ADView *)child;

- (void)removeViewWithADView:(ADView *)child;

- (void)removeViewAtWithInt:(jint)index;

- (void)requestLayout;

- (void)requestSimpleAnimationsInNextLayout;

- (jint)scrollHorizontallyByWithInt:(jint)dx
       withADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
          withADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (void)scrollToPositionWithInt:(jint)position;

- (jint)scrollVerticallyByWithInt:(jint)dy
     withADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
        withADXRecyclerView_State:(ADXRecyclerView_State *)state;

- (void)setAutoMeasureEnabledWithBoolean:(jboolean)enabled;

- (void)setItemPrefetchEnabledWithBoolean:(jboolean)enabled;

- (void)setMeasuredDimensionWithInt:(jint)widthSize
                            withInt:(jint)heightSize;

- (void)setMeasuredDimensionWithADRect:(ADRect *)childrenBounds
                               withInt:(jint)wSpec
                               withInt:(jint)hSpec;

- (void)setMeasurementCacheEnabledWithBoolean:(jboolean)measurementCacheEnabled;

- (void)smoothScrollToPositionWithADXRecyclerView:(ADXRecyclerView *)recyclerView
                        withADXRecyclerView_State:(ADXRecyclerView_State *)state
                                          withInt:(jint)position;

- (void)stopIgnoringViewWithADView:(ADView *)view;

- (jboolean)supportsPredictiveItemAnimations;

#pragma mark Package-Private

- (void)dispatchAttachedToWindowWithADXRecyclerView:(ADXRecyclerView *)view;

- (void)dispatchDetachedFromWindowWithADXRecyclerView:(ADXRecyclerView *)view
                         withADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler;

- (jboolean)hasFlexibleChildInBothOrientations;

- (void)removeAndRecycleScrapIntWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler;

- (void)setExactMeasureSpecsFromWithADXRecyclerView:(ADXRecyclerView *)recyclerView;

- (void)setMeasuredDimensionFromChildrenWithInt:(jint)widthSpec
                                        withInt:(jint)heightSpec;

- (void)setMeasureSpecsWithInt:(jint)wSpec
                       withInt:(jint)hSpec;

- (void)setRecyclerViewWithADXRecyclerView:(ADXRecyclerView *)recyclerView;

- (jboolean)shouldMeasureChildWithADView:(ADView *)child
                                 withInt:(jint)widthSpec
                                 withInt:(jint)heightSpec
        withADXRecyclerView_LayoutParams:(ADXRecyclerView_LayoutParams *)lp;

- (jboolean)shouldMeasureTwice;

- (jboolean)shouldReMeasureChildWithADView:(ADView *)child
                                   withInt:(jint)widthSpec
                                   withInt:(jint)heightSpec
          withADXRecyclerView_LayoutParams:(ADXRecyclerView_LayoutParams *)lp;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_LayoutManager)

J2OBJC_FIELD_SETTER(ADXRecyclerView_LayoutManager, mChildHelper_, ADXChildHelper *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_LayoutManager, mRecyclerView_, ADXRecyclerView *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_LayoutManager, mHorizontalBoundCheck_, ADXViewBoundsCheck *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_LayoutManager, mVerticalBoundCheck_, ADXViewBoundsCheck *)

FOUNDATION_EXPORT void ADXRecyclerView_LayoutManager_init(ADXRecyclerView_LayoutManager *self);

FOUNDATION_EXPORT jint ADXRecyclerView_LayoutManager_chooseSizeWithInt_withInt_withInt_(jint spec, jint desired, jint min);

FOUNDATION_EXPORT jint ADXRecyclerView_LayoutManager_getChildMeasureSpecWithInt_withInt_withInt_withBoolean_(jint parentSize, jint padding, jint childDimension, jboolean canScroll);

FOUNDATION_EXPORT jint ADXRecyclerView_LayoutManager_getChildMeasureSpecWithInt_withInt_withInt_withInt_withBoolean_(jint parentSize, jint parentMode, jint padding, jint childDimension, jboolean canScroll);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_LayoutManager)

#endif

#if !defined (ADXRecyclerView_LayoutManager_LayoutPrefetchRegistry_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_LayoutManager_LayoutPrefetchRegistry))
#define ADXRecyclerView_LayoutManager_LayoutPrefetchRegistry_

@protocol ADXRecyclerView_LayoutManager_LayoutPrefetchRegistry < JavaObject >

- (void)addPositionWithInt:(jint)layoutPosition
                   withInt:(jint)pixelDistance;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_LayoutManager_LayoutPrefetchRegistry)

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_LayoutManager_LayoutPrefetchRegistry)

#endif

#if !defined (ADXRecyclerView_ItemDecoration_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_ItemDecoration))
#define ADXRecyclerView_ItemDecoration_

@class ADRect;
@class ADView;
@class ADXRecyclerView;
@class ADXRecyclerView_State;

@interface ADXRecyclerView_ItemDecoration : NSObject

#pragma mark Public

- (instancetype)init;

- (void)getItemOffsetsWithADRect:(ADRect *)outRect
                         withInt:(jint)itemPosition
             withADXRecyclerView:(ADXRecyclerView *)parent;

- (void)getItemOffsetsWithADRect:(ADRect *)outRect
                      withADView:(ADView *)view
             withADXRecyclerView:(ADXRecyclerView *)parent
       withADXRecyclerView_State:(ADXRecyclerView_State *)state;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_ItemDecoration)

FOUNDATION_EXPORT void ADXRecyclerView_ItemDecoration_init(ADXRecyclerView_ItemDecoration *self);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_ItemDecoration)

#endif

#if !defined (ADXRecyclerView_OnScrollListener_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_OnScrollListener))
#define ADXRecyclerView_OnScrollListener_

@class ADXRecyclerView;

@interface ADXRecyclerView_OnScrollListener : NSObject

#pragma mark Public

- (instancetype)init;

- (void)onScrolledWithADXRecyclerView:(ADXRecyclerView *)recyclerView
                              withInt:(jint)dx
                              withInt:(jint)dy;

- (void)onScrollStateChangedWithADXRecyclerView:(ADXRecyclerView *)recyclerView
                                        withInt:(jint)newState;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_OnScrollListener)

FOUNDATION_EXPORT void ADXRecyclerView_OnScrollListener_init(ADXRecyclerView_OnScrollListener *self);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_OnScrollListener)

#endif

#if !defined (ADXRecyclerView_RecyclerListener_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_RecyclerListener))
#define ADXRecyclerView_RecyclerListener_

@class ADXRecyclerView_ViewHolder;

@protocol ADXRecyclerView_RecyclerListener < JavaObject >

- (void)onViewRecycledWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_RecyclerListener)

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_RecyclerListener)

#endif

#if !defined (ADXRecyclerView_OnChildAttachStateChangeListener_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_OnChildAttachStateChangeListener))
#define ADXRecyclerView_OnChildAttachStateChangeListener_

@class ADView;

@protocol ADXRecyclerView_OnChildAttachStateChangeListener < JavaObject >

- (void)onChildViewAttachedToWindowWithADView:(ADView *)view;

- (void)onChildViewDetachedFromWindowWithADView:(ADView *)view;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_OnChildAttachStateChangeListener)

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_OnChildAttachStateChangeListener)

#endif

#if !defined (ADXRecyclerView_ViewHolder_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_ViewHolder))
#define ADXRecyclerView_ViewHolder_

@class ADView;
@class ADXRecyclerView;
@class ADXRecyclerView_Adapter;
@class ADXRecyclerView_Recycler;
@class JavaLangRefWeakReference;
@protocol JavaUtilList;

@interface ADXRecyclerView_ViewHolder : NSObject {
 @public
  ADView *itemView_;
  JavaLangRefWeakReference *mNestedRecyclerView_;
  jint mPosition_;
  jint mOldPosition_;
  jlong mItemId_;
  jint mItemViewType_;
  jint mPreLayoutPosition_;
  ADXRecyclerView_ViewHolder *mShadowedHolder_;
  ADXRecyclerView_ViewHolder *mShadowingHolder_;
  jint mFlags_;
  id<JavaUtilList> mPayloads_;
  id<JavaUtilList> mUnmodifiedPayloads_;
  ADXRecyclerView_Recycler *mScrapContainer_;
  jboolean mInChangeScrap_;
  jint mPendingAccessibilityState_;
  ADXRecyclerView *mOwnerRecyclerView_;
  ADXRecyclerView_Adapter *mBindingAdapter_;
}

#pragma mark Public

- (instancetype)initWithADView:(ADView *)itemView;

- (jint)getAbsoluteAdapterPosition;

- (jint)getAdapterPosition;

- (ADXRecyclerView_Adapter *)getBindingAdapter;

- (jint)getBindingAdapterPosition;

- (jlong)getItemId;

- (jint)getItemViewType;

- (jint)getLayoutPosition;

- (jint)getOldPosition;

- (jint)getPosition;

- (jboolean)isRecyclable;

- (void)setIsRecyclableWithBoolean:(jboolean)recyclable;

- (NSString *)description;

#pragma mark Package-Private

- (void)addChangePayloadWithId:(id)payload;

- (void)addFlagsWithInt:(jint)flags;

- (void)clearOldPosition;

- (void)clearPayload;

- (void)clearReturnedFromScrapFlag;

- (void)clearTmpDetachFlag;

- (jboolean)doesTransientStatePreventRecycling;

- (void)flagRemovedAndOffsetPositionWithInt:(jint)mNewPosition
                                    withInt:(jint)offset
                                withBoolean:(jboolean)applyToPreLayout;

- (id<JavaUtilList>)getUnmodifiedPayloads;

- (jboolean)hasAnyOfTheFlagsWithInt:(jint)flags;

- (jboolean)isAdapterPositionUnknown;

- (jboolean)isAttachedToTransitionOverlay;

- (jboolean)isBound;

- (jboolean)isInvalid;

- (jboolean)isRemoved;

- (jboolean)isScrap;

- (jboolean)isTmpDetached;

- (jboolean)isUpdated;

- (jboolean)needsUpdate;

- (void)offsetPositionWithInt:(jint)offset
                  withBoolean:(jboolean)applyToPreLayout;

- (void)onEnteredHiddenStateWithADXRecyclerView:(ADXRecyclerView *)parent;

- (void)onLeftHiddenStateWithADXRecyclerView:(ADXRecyclerView *)parent;

- (void)resetInternal;

- (void)saveOldPosition;

- (void)setFlagsWithInt:(jint)flags
                withInt:(jint)mask;

- (void)setScrapContainerWithADXRecyclerView_Recycler:(ADXRecyclerView_Recycler *)recycler
                                          withBoolean:(jboolean)isChangeScrap;

- (jboolean)shouldBeKeptAsChild;

- (jboolean)shouldIgnore;

- (void)stopIgnoring;

- (void)unScrap;

- (jboolean)wasReturnedFromScrap;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ADXRecyclerView_ViewHolder)

J2OBJC_FIELD_SETTER(ADXRecyclerView_ViewHolder, itemView_, ADView *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_ViewHolder, mNestedRecyclerView_, JavaLangRefWeakReference *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_ViewHolder, mShadowedHolder_, ADXRecyclerView_ViewHolder *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_ViewHolder, mShadowingHolder_, ADXRecyclerView_ViewHolder *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_ViewHolder, mPayloads_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ADXRecyclerView_ViewHolder, mUnmodifiedPayloads_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ADXRecyclerView_ViewHolder, mScrapContainer_, ADXRecyclerView_Recycler *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_ViewHolder, mOwnerRecyclerView_, ADXRecyclerView *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_ViewHolder, mBindingAdapter_, ADXRecyclerView_Adapter *)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_BOUND(void);
#define ADXRecyclerView_ViewHolder_FLAG_BOUND 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_BOUND, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_UPDATE(void);
#define ADXRecyclerView_ViewHolder_FLAG_UPDATE 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_UPDATE, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_INVALID(void);
#define ADXRecyclerView_ViewHolder_FLAG_INVALID 4
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_INVALID, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_REMOVED(void);
#define ADXRecyclerView_ViewHolder_FLAG_REMOVED 8
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_REMOVED, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_NOT_RECYCLABLE(void);
#define ADXRecyclerView_ViewHolder_FLAG_NOT_RECYCLABLE 16
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_NOT_RECYCLABLE, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_RETURNED_FROM_SCRAP(void);
#define ADXRecyclerView_ViewHolder_FLAG_RETURNED_FROM_SCRAP 32
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_RETURNED_FROM_SCRAP, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_IGNORE(void);
#define ADXRecyclerView_ViewHolder_FLAG_IGNORE 128
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_IGNORE, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_TMP_DETACHED(void);
#define ADXRecyclerView_ViewHolder_FLAG_TMP_DETACHED 256
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_TMP_DETACHED, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_ADAPTER_POSITION_UNKNOWN(void);
#define ADXRecyclerView_ViewHolder_FLAG_ADAPTER_POSITION_UNKNOWN 512
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_ADAPTER_POSITION_UNKNOWN, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_ADAPTER_FULLUPDATE(void);
#define ADXRecyclerView_ViewHolder_FLAG_ADAPTER_FULLUPDATE 1024
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_ADAPTER_FULLUPDATE, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_MOVED(void);
#define ADXRecyclerView_ViewHolder_FLAG_MOVED 2048
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_MOVED, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_APPEARED_IN_PRE_LAYOUT(void);
#define ADXRecyclerView_ViewHolder_FLAG_APPEARED_IN_PRE_LAYOUT 4096
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_APPEARED_IN_PRE_LAYOUT, jint)

inline jint ADXRecyclerView_ViewHolder_get_PENDING_ACCESSIBILITY_STATE_NOT_SET(void);
#define ADXRecyclerView_ViewHolder_PENDING_ACCESSIBILITY_STATE_NOT_SET -1
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, PENDING_ACCESSIBILITY_STATE_NOT_SET, jint)

inline jint ADXRecyclerView_ViewHolder_get_FLAG_BOUNCED_FROM_HIDDEN_LIST(void);
#define ADXRecyclerView_ViewHolder_FLAG_BOUNCED_FROM_HIDDEN_LIST 8192
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ViewHolder, FLAG_BOUNCED_FROM_HIDDEN_LIST, jint)

FOUNDATION_EXPORT void ADXRecyclerView_ViewHolder_initWithADView_(ADXRecyclerView_ViewHolder *self, ADView *itemView);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_ViewHolder)

#endif

#if !defined (ADXRecyclerView_LayoutParams_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_LayoutParams))
#define ADXRecyclerView_LayoutParams_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup_MarginLayoutParams 1
#include "ViewGroup.h"

@class ADRect;
@class ADViewGroup_LayoutParams;
@class ADXRecyclerView_ViewHolder;

@interface ADXRecyclerView_LayoutParams : ADViewGroup_MarginLayoutParams {
 @public
  ADXRecyclerView_ViewHolder *mViewHolder_;
  ADRect *mDecorInsets_;
  jboolean mInsetsDirty_;
  jboolean mPendingInvalidate_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height;

- (instancetype)initWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)source;

- (instancetype)initWithADXRecyclerView_LayoutParams:(ADXRecyclerView_LayoutParams *)source;

- (jint)getViewLayoutPosition;

- (jboolean)isItemChanged;

- (jboolean)isItemRemoved;

- (jboolean)isViewInvalid;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithADViewGroup_MarginLayoutParams:(ADViewGroup_MarginLayoutParams *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_LayoutParams)

J2OBJC_FIELD_SETTER(ADXRecyclerView_LayoutParams, mViewHolder_, ADXRecyclerView_ViewHolder *)
J2OBJC_FIELD_SETTER(ADXRecyclerView_LayoutParams, mDecorInsets_, ADRect *)

FOUNDATION_EXPORT void ADXRecyclerView_LayoutParams_initWithInt_withInt_(ADXRecyclerView_LayoutParams *self, jint width, jint height);

FOUNDATION_EXPORT ADXRecyclerView_LayoutParams *new_ADXRecyclerView_LayoutParams_initWithInt_withInt_(jint width, jint height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_LayoutParams *create_ADXRecyclerView_LayoutParams_initWithInt_withInt_(jint width, jint height);

FOUNDATION_EXPORT void ADXRecyclerView_LayoutParams_initWithADViewGroup_LayoutParams_(ADXRecyclerView_LayoutParams *self, ADViewGroup_LayoutParams *source);

FOUNDATION_EXPORT ADXRecyclerView_LayoutParams *new_ADXRecyclerView_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_LayoutParams *create_ADXRecyclerView_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source);

FOUNDATION_EXPORT void ADXRecyclerView_LayoutParams_initWithADXRecyclerView_LayoutParams_(ADXRecyclerView_LayoutParams *self, ADXRecyclerView_LayoutParams *source);

FOUNDATION_EXPORT ADXRecyclerView_LayoutParams *new_ADXRecyclerView_LayoutParams_initWithADXRecyclerView_LayoutParams_(ADXRecyclerView_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_LayoutParams *create_ADXRecyclerView_LayoutParams_initWithADXRecyclerView_LayoutParams_(ADXRecyclerView_LayoutParams *source);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_LayoutParams)

#endif

#if !defined (ADXRecyclerView_Observable_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_Observable))
#define ADXRecyclerView_Observable_

@class JavaUtilArrayList;

@interface ADXRecyclerView_Observable : NSObject {
 @public
  JavaUtilArrayList *mObservers_;
}

#pragma mark Public

- (void)registerObserverWithId:(id)observer;

- (void)unregisterObserverWithId:(id)observer;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_Observable)

J2OBJC_FIELD_SETTER(ADXRecyclerView_Observable, mObservers_, JavaUtilArrayList *)

FOUNDATION_EXPORT void ADXRecyclerView_Observable_init(ADXRecyclerView_Observable *self);

FOUNDATION_EXPORT ADXRecyclerView_Observable *new_ADXRecyclerView_Observable_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_Observable *create_ADXRecyclerView_Observable_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_Observable)

#endif

#if !defined (ADXRecyclerView_AdapterDataObservable_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_AdapterDataObservable))
#define ADXRecyclerView_AdapterDataObservable_

@interface ADXRecyclerView_AdapterDataObservable : ADXRecyclerView_Observable

#pragma mark Public

- (jboolean)hasObservers;

- (void)notifyChanged;

- (void)notifyItemMovedWithInt:(jint)fromPosition
                       withInt:(jint)toPosition;

- (void)notifyItemRangeChangedWithInt:(jint)positionStart
                              withInt:(jint)itemCount;

- (void)notifyItemRangeChangedWithInt:(jint)positionStart
                              withInt:(jint)itemCount
                               withId:(id)payload;

- (void)notifyItemRangeInsertedWithInt:(jint)positionStart
                               withInt:(jint)itemCount;

- (void)notifyItemRangeRemovedWithInt:(jint)positionStart
                              withInt:(jint)itemCount;

- (void)notifyStateRestorationPolicyChanged;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_AdapterDataObservable)

FOUNDATION_EXPORT void ADXRecyclerView_AdapterDataObservable_init(ADXRecyclerView_AdapterDataObservable *self);

FOUNDATION_EXPORT ADXRecyclerView_AdapterDataObservable *new_ADXRecyclerView_AdapterDataObservable_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_AdapterDataObservable *create_ADXRecyclerView_AdapterDataObservable_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_AdapterDataObservable)

#endif

#if !defined (ADXRecyclerView_State_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_State))
#define ADXRecyclerView_State_

@class ADXRecyclerView_Adapter;

@interface ADXRecyclerView_State : NSObject {
 @public
  jint mTargetPosition_;
  jint mPreviousLayoutItemCount_;
  jint mDeletedInvisibleItemCountSincePreviousLayout_;
  jint mLayoutStep_;
  jint mItemCount_;
  jboolean mStructureChanged_;
  jboolean mInPreLayout_;
  jboolean mTrackOldChangeHolders_;
  jboolean mIsMeasuring_;
  jboolean mRunSimpleAnimations_;
  jboolean mRunPredictiveAnimations_;
  jint mFocusedItemPosition_;
  jint mFocusedSubChildId_;
  jint mRemainingScrollHorizontal_;
  jint mRemainingScrollVertical_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)didStructureChange;

- (id)getWithInt:(jint)resourceId;

- (jint)getItemCount;

- (jint)getRemainingScrollHorizontal;

- (jint)getRemainingScrollVertical;

- (jint)getTargetScrollPosition;

- (jboolean)hasTargetScrollPosition;

- (jboolean)isMeasuring;

- (jboolean)isPreLayout;

- (void)putWithInt:(jint)resourceId
            withId:(id)data;

- (void)removeWithInt:(jint)resourceId;

- (NSString *)description;

- (jboolean)willRunPredictiveAnimations;

- (jboolean)willRunSimpleAnimations;

#pragma mark Package-Private

- (void)assertLayoutStepWithInt:(jint)accepted;

- (void)prepareForNestedPrefetchWithADXRecyclerView_Adapter:(ADXRecyclerView_Adapter *)adapter;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_State)

inline jint ADXRecyclerView_State_get_STEP_START(void);
#define ADXRecyclerView_State_STEP_START 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_State, STEP_START, jint)

inline jint ADXRecyclerView_State_get_STEP_LAYOUT(void);
#define ADXRecyclerView_State_STEP_LAYOUT 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_State, STEP_LAYOUT, jint)

inline jint ADXRecyclerView_State_get_STEP_ANIMATIONS(void);
#define ADXRecyclerView_State_STEP_ANIMATIONS 4
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_State, STEP_ANIMATIONS, jint)

FOUNDATION_EXPORT void ADXRecyclerView_State_init(ADXRecyclerView_State *self);

FOUNDATION_EXPORT ADXRecyclerView_State *new_ADXRecyclerView_State_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_State *create_ADXRecyclerView_State_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_State)

#endif

#if !defined (ADXRecyclerView_ItemAnimator_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_ItemAnimator))
#define ADXRecyclerView_ItemAnimator_

@class ADXRecyclerView_ItemAnimator_ItemHolderInfo;
@class ADXRecyclerView_State;
@class ADXRecyclerView_ViewHolder;
@protocol JavaUtilList;

@interface ADXRecyclerView_ItemAnimator : NSObject

#pragma mark Public

- (instancetype)init;

- (jboolean)animateAppearanceWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder
            withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)preLayoutInfo
            withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)postLayoutInfo;

- (jboolean)animateChangeWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)oldHolder
                         withADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)newHolder
        withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)preLayoutInfo
        withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)postLayoutInfo;

- (jboolean)animateDisappearanceWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder
               withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)preLayoutInfo
               withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)postLayoutInfo;

- (jboolean)animatePersistenceWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder
             withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)preLayoutInfo
             withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)postLayoutInfo;

- (jboolean)canReuseUpdatedViewHolderWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder;

- (jboolean)canReuseUpdatedViewHolderWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder
                                                   withJavaUtilList:(id<JavaUtilList>)payloads;

- (void)endAnimationWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)item;

- (void)endAnimations;

- (jlong)getAddDuration;

- (jlong)getChangeDuration;

- (jlong)getMoveDuration;

- (jlong)getRemoveDuration;

- (ADXRecyclerView_ItemAnimator_ItemHolderInfo *)obtainHolderInfo;

- (void)onAnimationFinishedWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder;

- (void)onAnimationStartedWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder;

- (ADXRecyclerView_ItemAnimator_ItemHolderInfo *)recordPostLayoutInformationWithADXRecyclerView_State:(ADXRecyclerView_State *)state
                                                                       withADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder;

- (ADXRecyclerView_ItemAnimator_ItemHolderInfo *)recordPreLayoutInformationWithADXRecyclerView_State:(ADXRecyclerView_State *)state
                                                                      withADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder
                                                                                             withInt:(jint)changeFlags
                                                                                    withJavaUtilList:(id<JavaUtilList>)payloads;

- (void)runPendingAnimations;

- (void)setAddDurationWithLong:(jlong)addDuration;

- (void)setChangeDurationWithLong:(jlong)changeDuration;

- (void)setMoveDurationWithLong:(jlong)moveDuration;

- (void)setRemoveDurationWithLong:(jlong)removeDuration;

#pragma mark Package-Private

+ (jint)buildAdapterChangeFlagsForAnimationsWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_ItemAnimator)

inline jint ADXRecyclerView_ItemAnimator_get_FLAG_CHANGED(void);
#define ADXRecyclerView_ItemAnimator_FLAG_CHANGED 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ItemAnimator, FLAG_CHANGED, jint)

inline jint ADXRecyclerView_ItemAnimator_get_FLAG_REMOVED(void);
#define ADXRecyclerView_ItemAnimator_FLAG_REMOVED 8
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ItemAnimator, FLAG_REMOVED, jint)

inline jint ADXRecyclerView_ItemAnimator_get_FLAG_INVALIDATED(void);
#define ADXRecyclerView_ItemAnimator_FLAG_INVALIDATED 4
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ItemAnimator, FLAG_INVALIDATED, jint)

inline jint ADXRecyclerView_ItemAnimator_get_FLAG_MOVED(void);
#define ADXRecyclerView_ItemAnimator_FLAG_MOVED 2048
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ItemAnimator, FLAG_MOVED, jint)

inline jint ADXRecyclerView_ItemAnimator_get_FLAG_APPEARED_IN_PRE_LAYOUT(void);
#define ADXRecyclerView_ItemAnimator_FLAG_APPEARED_IN_PRE_LAYOUT 4096
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_ItemAnimator, FLAG_APPEARED_IN_PRE_LAYOUT, jint)

FOUNDATION_EXPORT void ADXRecyclerView_ItemAnimator_init(ADXRecyclerView_ItemAnimator *self);

FOUNDATION_EXPORT jint ADXRecyclerView_ItemAnimator_buildAdapterChangeFlagsForAnimationsWithADXRecyclerView_ViewHolder_(ADXRecyclerView_ViewHolder *viewHolder);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_ItemAnimator)

#endif

#if !defined (ADXRecyclerView_ItemAnimator_ItemHolderInfo_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_ItemAnimator_ItemHolderInfo))
#define ADXRecyclerView_ItemAnimator_ItemHolderInfo_

@class ADXRecyclerView_ViewHolder;

@interface ADXRecyclerView_ItemAnimator_ItemHolderInfo : NSObject {
 @public
  jint left_;
  jint top_;
  jint right_;
  jint bottom_;
  jint changeFlags_;
}

#pragma mark Public

- (instancetype)init;

- (ADXRecyclerView_ItemAnimator_ItemHolderInfo *)setFromWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder;

- (ADXRecyclerView_ItemAnimator_ItemHolderInfo *)setFromWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder
                                                                               withInt:(jint)flags;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_ItemAnimator_ItemHolderInfo)

FOUNDATION_EXPORT void ADXRecyclerView_ItemAnimator_ItemHolderInfo_init(ADXRecyclerView_ItemAnimator_ItemHolderInfo *self);

FOUNDATION_EXPORT ADXRecyclerView_ItemAnimator_ItemHolderInfo *new_ADXRecyclerView_ItemAnimator_ItemHolderInfo_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_ItemAnimator_ItemHolderInfo *create_ADXRecyclerView_ItemAnimator_ItemHolderInfo_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_ItemAnimator_ItemHolderInfo)

#endif

#if !defined (ADXRecyclerView_SavedState_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_SavedState))
#define ADXRecyclerView_SavedState_

@protocol ADParcelable;

@interface ADXRecyclerView_SavedState : NSObject {
 @public
  id<ADParcelable> mLayoutState_;
}

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_SavedState)

J2OBJC_FIELD_SETTER(ADXRecyclerView_SavedState, mLayoutState_, id<ADParcelable>)

FOUNDATION_EXPORT void ADXRecyclerView_SavedState_init(ADXRecyclerView_SavedState *self);

FOUNDATION_EXPORT ADXRecyclerView_SavedState *new_ADXRecyclerView_SavedState_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_SavedState *create_ADXRecyclerView_SavedState_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_SavedState)

#endif

#if !defined (ADXRecyclerView_MotionEventCompat_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_MotionEventCompat))
#define ADXRecyclerView_MotionEventCompat_

@class ADView_MotionEvent;

@interface ADXRecyclerView_MotionEventCompat : NSObject

#pragma mark Public

+ (jboolean)isFromSourceWithADView_MotionEvent:(ADView_MotionEvent *)ev
                                       withInt:(jint)source;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_MotionEventCompat)

FOUNDATION_EXPORT void ADXRecyclerView_MotionEventCompat_init(ADXRecyclerView_MotionEventCompat *self);

FOUNDATION_EXPORT ADXRecyclerView_MotionEventCompat *new_ADXRecyclerView_MotionEventCompat_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_MotionEventCompat *create_ADXRecyclerView_MotionEventCompat_init(void);

FOUNDATION_EXPORT jboolean ADXRecyclerView_MotionEventCompat_isFromSourceWithADView_MotionEvent_withInt_(ADView_MotionEvent *ev, jint source);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_MotionEventCompat)

#endif

#if !defined (ADXRecyclerView_InputDevice_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_InputDevice))
#define ADXRecyclerView_InputDevice_

@interface ADXRecyclerView_InputDevice : NSObject

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_InputDevice)

inline jint ADXRecyclerView_InputDevice_get_SOURCE_MOUSE(void);
#define ADXRecyclerView_InputDevice_SOURCE_MOUSE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXRecyclerView_InputDevice, SOURCE_MOUSE, jint)

FOUNDATION_EXPORT void ADXRecyclerView_InputDevice_init(ADXRecyclerView_InputDevice *self);

FOUNDATION_EXPORT ADXRecyclerView_InputDevice *new_ADXRecyclerView_InputDevice_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_InputDevice *create_ADXRecyclerView_InputDevice_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_InputDevice)

#endif

#if !defined (ADXRecyclerView_NestedScrollingChildHelper_) && (INCLUDE_ALL_RecyclerView || defined(INCLUDE_ADXRecyclerView_NestedScrollingChildHelper))
#define ADXRecyclerView_NestedScrollingChildHelper_

@class ADView;
@class IOSIntArray;

@interface ADXRecyclerView_NestedScrollingChildHelper : NSObject

#pragma mark Public

- (instancetype)initWithADView:(ADView *)view;

- (jboolean)dispatchNestedScrollWithInt:(jint)dxConsumed
                                withInt:(jint)dyConsumed
                                withInt:(jint)dxUnconsumed
                                withInt:(jint)dyUnconsumed
                           withIntArray:(IOSIntArray *)offsetInWindow;

- (jboolean)dispatchNestedScrollWithInt:(jint)dxConsumed
                                withInt:(jint)dyConsumed
                                withInt:(jint)dxUnconsumed
                                withInt:(jint)dyUnconsumed
                           withIntArray:(IOSIntArray *)offsetInWindow
                                withInt:(jint)type;

- (void)dispatchNestedScrollWithInt:(jint)dxConsumed
                            withInt:(jint)dyConsumed
                            withInt:(jint)dxUnconsumed
                            withInt:(jint)dyUnconsumed
                       withIntArray:(IOSIntArray *)offsetInWindow
                            withInt:(jint)type
                       withIntArray:(IOSIntArray *)consumed;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXRecyclerView_NestedScrollingChildHelper)

FOUNDATION_EXPORT void ADXRecyclerView_NestedScrollingChildHelper_initWithADView_(ADXRecyclerView_NestedScrollingChildHelper *self, ADView *view);

FOUNDATION_EXPORT ADXRecyclerView_NestedScrollingChildHelper *new_ADXRecyclerView_NestedScrollingChildHelper_initWithADView_(ADView *view) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXRecyclerView_NestedScrollingChildHelper *create_ADXRecyclerView_NestedScrollingChildHelper_initWithADView_(ADView *view);

J2OBJC_TYPE_LITERAL_HEADER(ADXRecyclerView_NestedScrollingChildHelper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_RecyclerView")
