//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\BaseHasWidgets.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_BaseHasWidgets")
#ifdef RESTRICT_BaseHasWidgets
#define INCLUDE_ALL_BaseHasWidgets 0
#else
#define INCLUDE_ALL_BaseHasWidgets 1
#endif
#undef RESTRICT_BaseHasWidgets
#ifdef INCLUDE_ASBaseHasWidgets_LazyBaseWidget
#define INCLUDE_ASBaseHasWidgets 1
#endif

#if !defined (ASBaseHasWidgets_) && (INCLUDE_ALL_BaseHasWidgets || defined(INCLUDE_ASBaseHasWidgets))
#define ASBaseHasWidgets_

#define RESTRICT_BaseWidget 1
#define INCLUDE_ASBaseWidget 1
#include "BaseWidget.h"

#define RESTRICT_HasWidgets 1
#define INCLUDE_ASHasWidgets 1
#include "HasWidgets.h"

@class ASLoopParam;
@class ASWidgetAttribute;
@class ASWidgetViewHolder;
@protocol ASIWidget;
@protocol ASIWidget_CommandCallBack;
@protocol JavaUtilIterator;
@protocol JavaUtilList;

@interface ASBaseHasWidgets : ASBaseWidget < ASHasWidgets > {
 @public
  id<JavaUtilList> widgets_;
  id<JavaUtilList> afterInitWidgets_;
  id<ASIWidget> listItem_;
  id<JavaUtilList> dataList_;
  id<JavaUtilList> ids_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localName;

- (void)addWithASIWidget:(id<ASIWidget>)w
                 withInt:(jint)index;

- (void)addAllModelWithId:(id)objValue;

- (void)addModelWithASLoopParam:(ASLoopParam *)model
                        withInt:(jint)index
                   withNSString:(NSString *)currentLoopVar;

- (void)addModelWithASLoopParam:(ASLoopParam *)model
                   withNSString:(NSString *)currentLoopVar;

- (void)addModelWithId:(id)model;

- (void)addModelWithId:(id)model
               withInt:(jint)index;

- (void)addTemplateWithId:(id)objValue;

- (void)applyModelToWidget;

- (jboolean)areWidgetItemsRecycled;

- (void)clear;

- (ASWidgetViewHolder *)createWidgetViewHolderWithJavaUtilList:(id<JavaUtilList>)viewHolderIds
                                                 withASIWidget:(id<ASIWidget>)widget;

- (id<ASIWidget>)findWidgetByIdWithNSString:(NSString *)id_;

- (id<ASIWidget>)getWithInt:(jint)index;

- (id<ASHasWidgets>)getCompositeLeaf;

- (id<ASIWidget>)getListItem;

- (NSString *)getModelFor;

- (id<JavaUtilList>)getStableIds;

- (id<JavaUtilList>)getWidgets;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilIterator>)iterator;

- (id<ASIWidget>)newLazyInstance OBJC_METHOD_FAMILY_NONE;

- (void)notifyDataSetChanged;

- (jboolean)removeWithInt:(jint)index;

- (jboolean)removeWithASIWidget:(id<ASIWidget>)w;

- (void)removeIdsAndDataWithInt:(jint)index;

- (void)removeModelAtIndexWithInt:(jint)index;

- (void)removeModelByIdWithNSString:(NSString *)id_;

- (jboolean)removeWidgetWithInt:(jint)index;

- (void)setAttributeOnViewHolderWithASWidgetViewHolder:(ASWidgetViewHolder *)widgetViewHolder
                                               withInt:(jint)position;

- (void)setAttributeOnViewHolderWithASWidgetViewHolder:(ASWidgetViewHolder *)widgetViewHolder
                                       withASLoopParam:(ASLoopParam *)model;

- (void)setAttributeOnViewHolderWithASWidgetViewHolder:(ASWidgetViewHolder *)widgetViewHolder
                                       withASLoopParam:(ASLoopParam *)model
                                           withBoolean:(jboolean)invalidateChild;

- (void)setChildAttributeWithASIWidget:(id<ASIWidget>)w
                 withASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (void)setChildAttributeWithASIWidget:(id<ASIWidget>)widget
                 withASWidgetAttribute:(ASWidgetAttribute *)key
                          withNSString:(NSString *)strValue
                                withId:(id)value;

- (void)setModelForWithNSString:(NSString *)modelFor;

#pragma mark Protected

- (void)addItemToParentWithInt:(jint)index
                  withNSString:(NSString *)id_
               withASLoopParam:(ASLoopParam *)childModel;

- (void)addObjectWithASLoopParam:(ASLoopParam *)childModel
                    withNSString:(NSString *)modelIdPath
                         withInt:(jint)index
                    withNSString:(NSString *)currentLoopVar;

- (void)clearModel;

/*!
 @brief Override this if the list contains a subview.
 */
- (id<JavaUtilList>)getChildWidgets;

- (void)invalidateChildIfRequiredWithASIWidget:(id<ASIWidget>)childWidget;

- (void)onChildAddedWithASIWidget:(id<ASIWidget>)widget;

- (void)updateModelRecurseWithASIWidget:(id<ASIWidget>)widget
                        withASLoopParam:(ASLoopParam *)childModel;

- (void)updateModelRecurseWithASIWidget:(id<ASIWidget>)widget
                        withASLoopParam:(ASLoopParam *)childModel
          withASIWidget_CommandCallBack:(id<ASIWidget_CommandCallBack>)callBack;

@end

J2OBJC_EMPTY_STATIC_INIT(ASBaseHasWidgets)

J2OBJC_FIELD_SETTER(ASBaseHasWidgets, widgets_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ASBaseHasWidgets, afterInitWidgets_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ASBaseHasWidgets, listItem_, id<ASIWidget>)
J2OBJC_FIELD_SETTER(ASBaseHasWidgets, dataList_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ASBaseHasWidgets, ids_, id<JavaUtilList>)

FOUNDATION_EXPORT void ASBaseHasWidgets_initWithNSString_withNSString_(ASBaseHasWidgets *self, NSString *groupName, NSString *localName);

J2OBJC_TYPE_LITERAL_HEADER(ASBaseHasWidgets)

@compatibility_alias ComAsheraWidgetBaseHasWidgets ASBaseHasWidgets;

#endif

#if !defined (ASBaseHasWidgets_LazyBaseWidget_) && (INCLUDE_ALL_BaseHasWidgets || defined(INCLUDE_ASBaseHasWidgets_LazyBaseWidget))
#define ASBaseHasWidgets_LazyBaseWidget_

@class ASBaseHasWidgets;
@class ASLoopParam;
@class ASWidgetAttribute;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface ASBaseHasWidgets_LazyBaseWidget : ASBaseHasWidgets

#pragma mark Public

- (instancetype)initWithASBaseHasWidgets:(ASBaseHasWidgets *)outer$;

- (void)addModelWithASLoopParam:(ASLoopParam *)model
                        withInt:(jint)index
                   withNSString:(NSString *)currentLoopParam;

- (void)addModelWithASLoopParam:(ASLoopParam *)model
                   withNSString:(NSString *)currentLoopParam;

- (void)addTemplateWithId:(id)objValue;

- (id)asNativeWidget;

- (id)asWidget;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (id)getChildAttributeWithASIWidget:(id<ASIWidget>)w
               withASWidgetAttribute:(ASWidgetAttribute *)key;

- (NSString *)getGroupName;

- (NSString *)getLocalName;

- (id<JavaUtilList>)getStableIds;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (void)loadAttributesWithNSString:(NSString *)localName;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)removeModelByIdWithNSString:(NSString *)id_;

- (void)restoreToDefaultState;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setChildAttributeWithASIWidget:(id<ASIWidget>)widget
                 withASWidgetAttribute:(ASWidgetAttribute *)key
                          withNSString:(NSString *)strValue
                                withId:(id)value;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0
                    withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASBaseHasWidgets_LazyBaseWidget)

FOUNDATION_EXPORT void ASBaseHasWidgets_LazyBaseWidget_initWithASBaseHasWidgets_(ASBaseHasWidgets_LazyBaseWidget *self, ASBaseHasWidgets *outer$);

FOUNDATION_EXPORT ASBaseHasWidgets_LazyBaseWidget *new_ASBaseHasWidgets_LazyBaseWidget_initWithASBaseHasWidgets_(ASBaseHasWidgets *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASBaseHasWidgets_LazyBaseWidget *create_ASBaseHasWidgets_LazyBaseWidget_initWithASBaseHasWidgets_(ASBaseHasWidgets *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASBaseHasWidgets_LazyBaseWidget)

#endif

#pragma pop_macro("INCLUDE_ALL_BaseHasWidgets")
