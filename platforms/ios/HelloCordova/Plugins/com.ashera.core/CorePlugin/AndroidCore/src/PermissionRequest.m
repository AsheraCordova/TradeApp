//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\webkit\PermissionRequest.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PermissionRequest.h"


@implementation ADPermissionRequest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADPermissionRequest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSLongArray *)getResources {
  return nil;
}

- (void)grantWithLongArray:(IOSLongArray *)resources {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getResources);
  methods[2].selector = @selector(grantWithLongArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "grant", "[J" };
  static const J2ObjcClassInfo _ADPermissionRequest = { "PermissionRequest", "r.android.webkit", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_ADPermissionRequest;
}

@end

void ADPermissionRequest_init(ADPermissionRequest *self) {
  NSObject_init(self);
}

ADPermissionRequest *new_ADPermissionRequest_init() {
  J2OBJC_NEW_IMPL(ADPermissionRequest, init)
}

ADPermissionRequest *create_ADPermissionRequest_init() {
  J2OBJC_CREATE_IMPL(ADPermissionRequest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPermissionRequest)
