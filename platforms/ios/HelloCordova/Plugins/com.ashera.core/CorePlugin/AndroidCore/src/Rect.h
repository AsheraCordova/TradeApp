//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\graphics\Rect.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Rect")
#ifdef RESTRICT_Rect
#define INCLUDE_ALL_Rect 0
#else
#define INCLUDE_ALL_Rect 1
#endif
#undef RESTRICT_Rect

#if !defined (ADRect_) && (INCLUDE_ALL_Rect || defined(INCLUDE_ADRect))
#define ADRect_

/*!
 @brief Rect holds four integer coordinates for a rectangle.The rectangle is
  represented by the coordinates of its 4 edges (left, top, right bottom).
 These fields can be accessed directly. Use width() and height() to retrieve
  the rectangle's width and height. Note: most methods do not check to see that
  the coordinates are sorted correctly (i.e. left <= right and top <= bottom).
 */
@interface ADRect : NSObject {
 @public
  jint left_;
  jint top_;
  jint right_;
  jint bottom_;
}

#pragma mark Public

/*!
 @brief Create a new empty Rect.All coordinates are initialized to 0.
 */
- (instancetype)init;

/*!
 @brief Create a new rectangle with the specified coordinates.Note: no range
  checking is performed, so the caller must ensure that left <= right and
  top <= bottom.
 @param left The X coordinate of the left side of the rectangle
 @param top The Y coordinate of the top of the rectangle
 @param right The X coordinate of the right side of the rectangle
 @param bottom The Y coordinate of the bottom of the rectangle
 */
- (instancetype)initWithInt:(jint)left
                    withInt:(jint)top
                    withInt:(jint)right
                    withInt:(jint)bottom;

/*!
 @brief Create a new rectangle, initialized with the values in the specified
  rectangle (which is left unmodified).
 @param r The rectangle whose coordinates are copied into the new
              rectangle.
 */
- (instancetype)initWithADRect:(ADRect *)r;

/*!
 @return the rectangle's height. This does not check for a valid rectangle
          (i.e. top <= bottom) so the result may be negative.
 */
- (jint)height;

- (jboolean)isEmpty;

/*!
 @brief Offset the rectangle by adding dx to its left and right coordinates, and
  adding dy to its top and bottom coordinates.
 @param dx The amount to add to the rectangle's left and right coordinates
 @param dy The amount to add to the rectangle's top and bottom coordinates
 */
- (void)offsetWithInt:(jint)dx
              withInt:(jint)dy;

/*!
 @brief Set the rectangle's coordinates to the specified values.Note: no range
  checking is performed, so it is up to the caller to ensure that left <=
  right and top <= bottom.
 @param left The X coordinate of the left side of the rectangle
 @param top The Y coordinate of the top of the rectangle
 @param right The X coordinate of the right side of the rectangle
 @param bottom The Y coordinate of the bottom of the rectangle
 */
- (void)setWithInt:(jint)left
           withInt:(jint)top
           withInt:(jint)right
           withInt:(jint)bottom;

- (void)setWithADRect:(ADRect *)src;

- (void)setEmpty;

/*!
 @return the rectangle's width. This does not check for a valid rectangle
          (i.e. left <= right) so the result may be negative.
 */
- (jint)width;

@end

J2OBJC_EMPTY_STATIC_INIT(ADRect)

FOUNDATION_EXPORT void ADRect_init(ADRect *self);

FOUNDATION_EXPORT ADRect *new_ADRect_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADRect *create_ADRect_init(void);

FOUNDATION_EXPORT void ADRect_initWithInt_withInt_withInt_withInt_(ADRect *self, jint left, jint top, jint right, jint bottom);

FOUNDATION_EXPORT ADRect *new_ADRect_initWithInt_withInt_withInt_withInt_(jint left, jint top, jint right, jint bottom) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADRect *create_ADRect_initWithInt_withInt_withInt_withInt_(jint left, jint top, jint right, jint bottom);

FOUNDATION_EXPORT void ADRect_initWithADRect_(ADRect *self, ADRect *r);

FOUNDATION_EXPORT ADRect *new_ADRect_initWithADRect_(ADRect *r) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADRect *create_ADRect_initWithADRect_(ADRect *r);

J2OBJC_TYPE_LITERAL_HEADER(ADRect)

@compatibility_alias RAndroidGraphicsRect ADRect;

#endif

#pragma pop_macro("INCLUDE_ALL_Rect")
