//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\view\accessibility\AccessibilityManager.java
//

#include "AccessibilityManager.h"
#include "Context.h"
#include "J2ObjC_source.h"
#include "View.h"


@implementation ADAccessibilityManager

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADAccessibilityManager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ADView *)getInstanceWithADContext:(ADContext *)mContext {
  return ADAccessibilityManager_getInstanceWithADContext_(mContext);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADView;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getInstanceWithADContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getInstance", "LADContext;" };
  static const J2ObjcClassInfo _ADAccessibilityManager = { "AccessibilityManager", "r.android.view.accessibility", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_ADAccessibilityManager;
}

@end

void ADAccessibilityManager_init(ADAccessibilityManager *self) {
  NSObject_init(self);
}

ADAccessibilityManager *new_ADAccessibilityManager_init() {
  J2OBJC_NEW_IMPL(ADAccessibilityManager, init)
}

ADAccessibilityManager *create_ADAccessibilityManager_init() {
  J2OBJC_CREATE_IMPL(ADAccessibilityManager, init)
}

ADView *ADAccessibilityManager_getInstanceWithADContext_(ADContext *mContext) {
  ADAccessibilityManager_initialize();
  return create_ADView_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADAccessibilityManager)
