//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\text\SpannableStringBuilder.java
//

#include "Editable.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "SpannableStringBuilder.h"
#include "java/lang/CharSequence.h"
#include "java/util/stream/IntStream.h"


#pragma clang diagnostic ignored "-Wprotocol"

@implementation ADSpannableStringBuilder

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)source {
  ADSpannableStringBuilder_initWithJavaLangCharSequence_(self, source);
  return self;
}

- (jint)java_length {
  return 0;
}

- (jchar)charAtWithInt:(jint)index {
  return 0;
}

- (id<JavaLangCharSequence>)subSequenceFrom:(jint)start
                                         to:(jint)end {
  return nil;
}

- (void)getCharsWithInt:(jint)start
                withInt:(jint)end
          withCharArray:(IOSCharArray *)dest
                withInt:(jint)destoff {
}

- (id<ADEditable>)replaceWithInt:(jint)st
                         withInt:(jint)en
        withJavaLangCharSequence:(id<JavaLangCharSequence>)source
                         withInt:(jint)start
                         withInt:(jint)end {
  return nil;
}

- (id<ADEditable>)replaceWithInt:(jint)st
                         withInt:(jint)en
        withJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  return nil;
}

- (id<ADEditable>)insertWithInt:(jint)where
       withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                        withInt:(jint)start
                        withInt:(jint)end {
  return nil;
}

- (id<ADEditable>)insertWithInt:(jint)where
       withJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  return nil;
}

- (id<ADEditable>)delete__WithInt:(jint)st
                          withInt:(jint)en {
  return nil;
}

- (id<ADEditable>)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  return nil;
}

- (id<ADEditable>)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                         withInt:(jint)start
                                         withInt:(jint)end {
  return nil;
}

- (id<ADEditable>)appendWithChar:(jchar)text {
  return nil;
}

- (void)clear {
}

- (void)clearSpans {
}

- (void)setFiltersWithADInputFilterArray:(IOSObjectArray *)filters {
}

- (IOSObjectArray *)getFilters {
  return nil;
}

- (id<JavaUtilStreamIntStream>)chars {
  return JavaLangCharSequence_chars(self);
}

- (id<JavaUtilStreamIntStream>)codePoints {
  return JavaLangCharSequence_codePoints(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "C", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LADEditable;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LADEditable;", 0x1, 8, 10, -1, -1, -1, -1 },
    { NULL, "LADEditable;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LADEditable;", 0x1, 11, 13, -1, -1, -1, -1 },
    { NULL, "LADEditable;", 0x1, 14, 5, -1, -1, -1, -1 },
    { NULL, "LADEditable;", 0x1, 15, 0, -1, -1, -1, -1 },
    { NULL, "LADEditable;", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "LADEditable;", 0x1, 15, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "[LADInputFilter;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangCharSequence:);
  methods[1].selector = @selector(java_length);
  methods[2].selector = @selector(charAtWithInt:);
  methods[3].selector = @selector(subSequenceFrom:to:);
  methods[4].selector = @selector(getCharsWithInt:withInt:withCharArray:withInt:);
  methods[5].selector = @selector(replaceWithInt:withInt:withJavaLangCharSequence:withInt:withInt:);
  methods[6].selector = @selector(replaceWithInt:withInt:withJavaLangCharSequence:);
  methods[7].selector = @selector(insertWithInt:withJavaLangCharSequence:withInt:withInt:);
  methods[8].selector = @selector(insertWithInt:withJavaLangCharSequence:);
  methods[9].selector = @selector(delete__WithInt:withInt:);
  methods[10].selector = @selector(appendWithJavaLangCharSequence:);
  methods[11].selector = @selector(appendWithJavaLangCharSequence:withInt:withInt:);
  methods[12].selector = @selector(appendWithChar:);
  methods[13].selector = @selector(clear);
  methods[14].selector = @selector(clearSpans);
  methods[15].selector = @selector(setFiltersWithADInputFilterArray:);
  methods[16].selector = @selector(getFilters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangCharSequence;", "length", "charAt", "I", "subSequence", "II", "getChars", "II[CI", "replace", "IILJavaLangCharSequence;II", "IILJavaLangCharSequence;", "insert", "ILJavaLangCharSequence;II", "ILJavaLangCharSequence;", "delete", "append", "LJavaLangCharSequence;II", "C", "setFilters", "[LADInputFilter;" };
  static const J2ObjcClassInfo _ADSpannableStringBuilder = { "SpannableStringBuilder", "r.android.text", ptrTable, methods, NULL, 7, 0x1, 17, 0, -1, -1, -1, -1, -1 };
  return &_ADSpannableStringBuilder;
}

@end

void ADSpannableStringBuilder_initWithJavaLangCharSequence_(ADSpannableStringBuilder *self, id<JavaLangCharSequence> source) {
  NSObject_init(self);
}

ADSpannableStringBuilder *new_ADSpannableStringBuilder_initWithJavaLangCharSequence_(id<JavaLangCharSequence> source) {
  J2OBJC_NEW_IMPL(ADSpannableStringBuilder, initWithJavaLangCharSequence_, source)
}

ADSpannableStringBuilder *create_ADSpannableStringBuilder_initWithJavaLangCharSequence_(id<JavaLangCharSequence> source) {
  J2OBJC_CREATE_IMPL(ADSpannableStringBuilder, initWithJavaLangCharSequence_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADSpannableStringBuilder)
