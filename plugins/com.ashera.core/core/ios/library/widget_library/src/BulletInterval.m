//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\attributedtext\BulletInterval.java
//

#include "BulletInterval.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "Interval.h"
#include "J2ObjC_source.h"
#include "StyleInterval.h"
#include "WidgetAttributeMap.h"
#include "java/lang/Integer.h"


@interface ASBulletInterval () {
 @public
  jint indent_;
  jint bulletSpacing_;
}

@end

@implementation ASBulletInterval

- (jint)getBulletSpacing {
  return bulletSpacing_;
}

- (void)setBulletSpacingWithInt:(jint)bulletSpacing {
  self->bulletSpacing_ = bulletSpacing;
}

- (jint)getIndent {
  return indent_;
}

- (void)setIndentWithInt:(jint)indent {
  self->indent_ = indent;
}

- (instancetype)initWithInt:(jint)start
                    withInt:(jint)end
   withASWidgetAttributeMap:(ASWidgetAttributeMap *)style
                    withInt:(jint)indent
                    withInt:(jint)bulletSpacing {
  ASBulletInterval_initWithInt_withInt_withASWidgetAttributeMap_withInt_withInt_(self, start, end, style, indent, bulletSpacing);
  return self;
}

- (NSString *)description {
  return JreStrcat("CI$I$IC", '[', [self getStart], @", ", [self getEnd], @", ", self->indent_, ']');
}

- (ASInterval *)makeNodeWithInt:(jint)start
                        withInt:(jint)end
              withNSObjectArray:(IOSObjectArray *)arguments {
  return create_ASBulletInterval_initWithInt_withInt_withASWidgetAttributeMap_withInt_withInt_(start, end, (ASWidgetAttributeMap *) cast_chk(IOSObjectArray_Get(nil_chk(arguments), 0), [ASWidgetAttributeMap class]), [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(IOSObjectArray_Get(arguments, 1), [JavaLangInteger class]))) intValue], [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(IOSObjectArray_Get(arguments, 2), [JavaLangInteger class]))) intValue]);
}

- (IOSObjectArray *)getArgs {
  return [IOSObjectArray arrayWithObjects:(id[]){ [self getStyle], JavaLangInteger_valueOfWithInt_(indent_), JavaLangInteger_valueOfWithInt_(bulletSpacing_) } count:3 type:NSObject_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LASInterval;", 0x81, 5, 6, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getBulletSpacing);
  methods[1].selector = @selector(setBulletSpacingWithInt:);
  methods[2].selector = @selector(getIndent);
  methods[3].selector = @selector(setIndentWithInt:);
  methods[4].selector = @selector(initWithInt:withInt:withASWidgetAttributeMap:withInt:withInt:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(makeNodeWithInt:withInt:withNSObjectArray:);
  methods[7].selector = @selector(getArgs);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "indent_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bulletSpacing_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setBulletSpacing", "I", "setIndent", "IILASWidgetAttributeMap;II", "toString", "makeNode", "II[LNSObject;" };
  static const J2ObjcClassInfo _ASBulletInterval = { "BulletInterval", "com.ashera.attributedtext", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_ASBulletInterval;
}

@end

void ASBulletInterval_initWithInt_withInt_withASWidgetAttributeMap_withInt_withInt_(ASBulletInterval *self, jint start, jint end, ASWidgetAttributeMap *style, jint indent, jint bulletSpacing) {
  ASStyleInterval_initWithInt_withInt_withASWidgetAttributeMap_(self, start, end, style);
  self->indent_ = indent;
  self->bulletSpacing_ = bulletSpacing;
}

ASBulletInterval *new_ASBulletInterval_initWithInt_withInt_withASWidgetAttributeMap_withInt_withInt_(jint start, jint end, ASWidgetAttributeMap *style, jint indent, jint bulletSpacing) {
  J2OBJC_NEW_IMPL(ASBulletInterval, initWithInt_withInt_withASWidgetAttributeMap_withInt_withInt_, start, end, style, indent, bulletSpacing)
}

ASBulletInterval *create_ASBulletInterval_initWithInt_withInt_withASWidgetAttributeMap_withInt_withInt_(jint start, jint end, ASWidgetAttributeMap *style, jint indent, jint bulletSpacing) {
  J2OBJC_CREATE_IMPL(ASBulletInterval, initWithInt_withInt_withASWidgetAttributeMap_withInt_withInt_, start, end, style, indent, bulletSpacing)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASBulletInterval)
