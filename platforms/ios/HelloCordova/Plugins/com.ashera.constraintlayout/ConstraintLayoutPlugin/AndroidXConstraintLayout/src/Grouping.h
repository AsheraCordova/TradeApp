//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\widgets\analyzer\Grouping.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Grouping")
#ifdef RESTRICT_Grouping
#define INCLUDE_ALL_Grouping 0
#else
#define INCLUDE_ALL_Grouping 1
#endif
#undef RESTRICT_Grouping

#if !defined (ADXGrouping_) && (INCLUDE_ALL_Grouping || defined(INCLUDE_ADXGrouping))
#define ADXGrouping_

@class ADXConstraintWidget;
@class ADXConstraintWidgetContainer;
@class ADXConstraintWidget_DimensionBehaviour;
@class ADXWidgetGroup;
@class JavaUtilArrayList;
@protocol ADXBasicMeasure_Measurer;

/*!
 @brief Implements a simple grouping mechanism, to group interdependent widgets together.
 TODO: we should move towards a more leaner implementation -- this is more expensive as it could be.
 */
@interface ADXGrouping : NSObject

#pragma mark Public

- (instancetype)init;

+ (ADXWidgetGroup *)findDependentsWithADXConstraintWidget:(ADXConstraintWidget *)constraintWidget
                                                  withInt:(jint)orientation
                                    withJavaUtilArrayList:(JavaUtilArrayList *)list
                                       withADXWidgetGroup:(ADXWidgetGroup *)group;

+ (jboolean)simpleSolvingPassWithADXConstraintWidgetContainer:(ADXConstraintWidgetContainer *)layout
                                 withADXBasicMeasure_Measurer:(id<ADXBasicMeasure_Measurer>)measurer;

+ (jboolean)validInGroupWithADXConstraintWidget_DimensionBehaviour:(ADXConstraintWidget_DimensionBehaviour *)layoutHorizontal
                        withADXConstraintWidget_DimensionBehaviour:(ADXConstraintWidget_DimensionBehaviour *)layoutVertical
                        withADXConstraintWidget_DimensionBehaviour:(ADXConstraintWidget_DimensionBehaviour *)widgetHorizontal
                        withADXConstraintWidget_DimensionBehaviour:(ADXConstraintWidget_DimensionBehaviour *)widgetVertical;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGrouping)

FOUNDATION_EXPORT void ADXGrouping_init(ADXGrouping *self);

FOUNDATION_EXPORT ADXGrouping *new_ADXGrouping_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGrouping *create_ADXGrouping_init(void);

FOUNDATION_EXPORT jboolean ADXGrouping_validInGroupWithADXConstraintWidget_DimensionBehaviour_withADXConstraintWidget_DimensionBehaviour_withADXConstraintWidget_DimensionBehaviour_withADXConstraintWidget_DimensionBehaviour_(ADXConstraintWidget_DimensionBehaviour *layoutHorizontal, ADXConstraintWidget_DimensionBehaviour *layoutVertical, ADXConstraintWidget_DimensionBehaviour *widgetHorizontal, ADXConstraintWidget_DimensionBehaviour *widgetVertical);

FOUNDATION_EXPORT jboolean ADXGrouping_simpleSolvingPassWithADXConstraintWidgetContainer_withADXBasicMeasure_Measurer_(ADXConstraintWidgetContainer *layout, id<ADXBasicMeasure_Measurer> measurer);

FOUNDATION_EXPORT ADXWidgetGroup *ADXGrouping_findDependentsWithADXConstraintWidget_withInt_withJavaUtilArrayList_withADXWidgetGroup_(ADXConstraintWidget *constraintWidget, jint orientation, JavaUtilArrayList *list, ADXWidgetGroup *group);

J2OBJC_TYPE_LITERAL_HEADER(ADXGrouping)

@compatibility_alias AndroidxConstraintlayoutCoreWidgetsAnalyzerGrouping ADXGrouping;

#endif

#pragma pop_macro("INCLUDE_ALL_Grouping")
