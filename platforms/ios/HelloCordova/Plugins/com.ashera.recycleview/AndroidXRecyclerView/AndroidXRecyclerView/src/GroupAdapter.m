//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\com\xwray\groupie\GroupAdapter.java
//

#include "AsyncDiffUtil.h"
#include "Context.h"
#include "DiffCallback.h"
#include "DiffUtil.h"
#include "GridLayoutManager.h"
#include "GroupAdapter.h"
#include "GroupUtils.h"
#include "GroupieViewHolder.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "Item.h"
#include "J2ObjC_source.h"
#include "LayoutInflater.h"
#include "OnAsyncUpdateListener.h"
#include "OnItemClickListener.h"
#include "OnItemLongClickListener.h"
#include "RVGroup.h"
#include "RecyclerView.h"
#include "View.h"
#include "ViewGroup.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"

@protocol JavaUtilCollection;
@protocol JavaUtilList;


#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ADXGroupAdapter () {
 @public
  id<JavaUtilList> groups_;
  id<ADXOnItemClickListener> onItemClickListener_;
  id<ADXOnItemLongClickListener> onItemLongClickListener_;
  jint spanCount_;
  ADXItem *lastItemForViewTypeLookup_;
  id<ADXAsyncDiffUtil_Callback> diffUtilCallbacks_;
  ADXAsyncDiffUtil *asyncDiffUtil_;
  ADXGridLayoutManager_SpanSizeLookup *spanSizeLookup_;
}

- (void)removeWithInt:(jint)position
       withADXRVGroup:(id<ADXRVGroup>)group;

- (jint)getItemCountBeforeGroupWithInt:(jint)groupIndex;

- (void)setNewGroupsWithJavaUtilCollection:(id<JavaUtilCollection>)newGroups;

@end

J2OBJC_FIELD_SETTER(ADXGroupAdapter, groups_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ADXGroupAdapter, onItemClickListener_, id<ADXOnItemClickListener>)
J2OBJC_FIELD_SETTER(ADXGroupAdapter, onItemLongClickListener_, id<ADXOnItemLongClickListener>)
J2OBJC_FIELD_SETTER(ADXGroupAdapter, lastItemForViewTypeLookup_, ADXItem *)
J2OBJC_FIELD_SETTER(ADXGroupAdapter, diffUtilCallbacks_, id<ADXAsyncDiffUtil_Callback>)
J2OBJC_FIELD_SETTER(ADXGroupAdapter, asyncDiffUtil_, ADXAsyncDiffUtil *)
J2OBJC_FIELD_SETTER(ADXGroupAdapter, spanSizeLookup_, ADXGridLayoutManager_SpanSizeLookup *)

__attribute__((unused)) static void ADXGroupAdapter_removeWithInt_withADXRVGroup_(ADXGroupAdapter *self, jint position, id<ADXRVGroup> group);

__attribute__((unused)) static jint ADXGroupAdapter_getItemCountBeforeGroupWithInt_(ADXGroupAdapter *self, jint groupIndex);

__attribute__((unused)) static void ADXGroupAdapter_setNewGroupsWithJavaUtilCollection_(ADXGroupAdapter *self, id<JavaUtilCollection> newGroups);

__attribute__((unused)) static IOSObjectArray *ADXGroupAdapter__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ADXGroupAdapter__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ADXGroupAdapter__Annotations$2(void);

@interface ADXGroupAdapter_1 : NSObject < ADXAsyncDiffUtil_Callback > {
 @public
  ADXGroupAdapter *this$0_;
}

- (instancetype)initWithADXGroupAdapter:(ADXGroupAdapter *)outer$;

- (void)onDispatchAsyncResultWithJavaUtilCollection:(id<JavaUtilCollection>)newGroups;

- (void)onInsertedWithInt:(jint)position
                  withInt:(jint)count;

- (void)onRemovedWithInt:(jint)position
                 withInt:(jint)count;

- (void)onMovedWithInt:(jint)fromPosition
               withInt:(jint)toPosition;

- (void)onChangedWithInt:(jint)position
                 withInt:(jint)count
                  withId:(id)payload;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGroupAdapter_1)

__attribute__((unused)) static void ADXGroupAdapter_1_initWithADXGroupAdapter_(ADXGroupAdapter_1 *self, ADXGroupAdapter *outer$);

__attribute__((unused)) static ADXGroupAdapter_1 *new_ADXGroupAdapter_1_initWithADXGroupAdapter_(ADXGroupAdapter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXGroupAdapter_1 *create_ADXGroupAdapter_1_initWithADXGroupAdapter_(ADXGroupAdapter *outer$);

@interface ADXGroupAdapter_2 : ADXGridLayoutManager_SpanSizeLookup {
 @public
  ADXGroupAdapter *this$0_;
}

- (instancetype)initWithADXGroupAdapter:(ADXGroupAdapter *)outer$;

- (jint)getSpanSizeWithInt:(jint)position;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGroupAdapter_2)

__attribute__((unused)) static void ADXGroupAdapter_2_initWithADXGroupAdapter_(ADXGroupAdapter_2 *self, ADXGroupAdapter *outer$);

__attribute__((unused)) static ADXGroupAdapter_2 *new_ADXGroupAdapter_2_initWithADXGroupAdapter_(ADXGroupAdapter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXGroupAdapter_2 *create_ADXGroupAdapter_2_initWithADXGroupAdapter_(ADXGroupAdapter *outer$);

@implementation ADXGroupAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXGroupAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ADXGridLayoutManager_SpanSizeLookup *)getSpanSizeLookup {
  return spanSizeLookup_;
}

- (void)setSpanCountWithInt:(jint)spanCount {
  self->spanCount_ = spanCount;
}

- (jint)getSpanCount {
  return spanCount_;
}

- (void)updateAsyncWithJavaUtilList:(id<JavaUtilList>)newGroups {
  [self updateAsyncWithJavaUtilList:newGroups withBoolean:true withADXOnAsyncUpdateListener:nil];
}

- (void)updateAsyncWithJavaUtilList:(id<JavaUtilList>)newGroups
       withADXOnAsyncUpdateListener:(id<ADXOnAsyncUpdateListener>)onAsyncUpdateListener {
  [self updateAsyncWithJavaUtilList:newGroups withBoolean:true withADXOnAsyncUpdateListener:onAsyncUpdateListener];
}

- (void)updateAsyncWithJavaUtilList:(id<JavaUtilList>)newGroups
                        withBoolean:(jboolean)detectMoves
       withADXOnAsyncUpdateListener:(id<ADXOnAsyncUpdateListener>)onAsyncUpdateListener {
  if ([((id<JavaUtilList>) nil_chk(groups_)) isEmpty]) {
    [self updateWithJavaUtilCollection:newGroups withBoolean:detectMoves];
    if (onAsyncUpdateListener != nil) {
      [onAsyncUpdateListener onUpdateComplete];
    }
    return;
  }
  __unused id<JavaUtilList> oldGroups = create_JavaUtilArrayList_initWithJavaUtilCollection_(groups_);
  __unused ADXDiffCallback *diffUtilCallback = create_ADXDiffCallback_initPackagePrivateWithJavaUtilCollection_withJavaUtilCollection_(oldGroups, newGroups);
  [((ADXAsyncDiffUtil *) nil_chk(asyncDiffUtil_)) calculateDiffWithJavaUtilCollection:newGroups withADXDiffUtil_Callback:diffUtilCallback withADXOnAsyncUpdateListener:onAsyncUpdateListener withBoolean:detectMoves];
}

- (void)replaceAllWithJavaUtilCollection:(id<JavaUtilCollection>)newGroups {
  ADXGroupAdapter_setNewGroupsWithJavaUtilCollection_(self, newGroups);
  [self notifyDataSetChanged];
}

- (void)updateWithJavaUtilCollection:(id<JavaUtilCollection>)newGroups {
  [self updateWithJavaUtilCollection:newGroups withBoolean:true];
}

- (void)updateWithJavaUtilCollection:(id<JavaUtilCollection>)newGroups
                         withBoolean:(jboolean)detectMoves {
  __unused id<JavaUtilList> oldGroups = create_JavaUtilArrayList_initWithJavaUtilCollection_(groups_);
  __unused ADXDiffUtil_DiffResult *diffResult = ADXDiffUtil_calculateDiffWithADXDiffUtil_Callback_withBoolean_(create_ADXDiffCallback_initPackagePrivateWithJavaUtilCollection_withJavaUtilCollection_(oldGroups, newGroups), detectMoves);
  ADXGroupAdapter_setNewGroupsWithJavaUtilCollection_(self, newGroups);
  [((ADXDiffUtil_DiffResult *) nil_chk(diffResult)) dispatchUpdatesToWithADXListUpdateCallback:diffUtilCallbacks_];
}

- (void)setOnItemClickListenerWithADXOnItemClickListener:(id<ADXOnItemClickListener>)onItemClickListener {
  JreStrongAssign(&self->onItemClickListener_, onItemClickListener);
}

- (void)setOnItemLongClickListenerWithADXOnItemLongClickListener:(id<ADXOnItemLongClickListener>)onItemLongClickListener {
  JreStrongAssign(&self->onItemLongClickListener_, onItemLongClickListener);
}

- (ADXGroupieViewHolder *)onCreateViewHolderWithADViewGroup:(ADViewGroup *)parent
                                                    withInt:(jint)viewType {
  ADLayoutInflater *inflater = ADLayoutInflater_fromWithADContext_([((ADViewGroup *) nil_chk(parent)) getContext]);
  ADXItem *item = JreRetainedLocalValue([self getItemForViewTypeWithInt:viewType]);
  ADView *itemView = JreRetainedLocalValue([((ADLayoutInflater *) nil_chk(inflater)) inflateWithInt:[((ADXItem *) nil_chk(item)) getLayout] withADViewGroup:parent withBoolean:false]);
  return [item createViewHolderWithADView:itemView];
}

- (void)onBindViewHolderWithADXRecyclerView_ViewHolder:(ADXGroupieViewHolder *)holder
                                               withInt:(jint)position {
}

- (void)onBindViewHolderWithADXRecyclerView_ViewHolder:(ADXGroupieViewHolder *)holder
                                               withInt:(jint)position
                                      withJavaUtilList:(id<JavaUtilList>)payloads {
  ADXItem *contentItem = JreRetainedLocalValue([self getItemWithInt:position]);
  [((ADXItem *) nil_chk(contentItem)) bindWithADXGroupieViewHolder:holder withInt:position withJavaUtilList:payloads withADXOnItemClickListener:onItemClickListener_ withADXOnItemLongClickListener:onItemLongClickListener_];
}

- (void)onViewRecycledWithADXRecyclerView_ViewHolder:(ADXGroupieViewHolder *)holder {
  ADXItem *contentItem = JreRetainedLocalValue([((ADXGroupieViewHolder *) nil_chk(holder)) getItem]);
  [((ADXItem *) nil_chk(contentItem)) unbindWithADXGroupieViewHolder:holder];
}

- (jboolean)onFailedToRecycleViewWithADXRecyclerView_ViewHolder:(ADXGroupieViewHolder *)holder {
  ADXItem *contentItem = JreRetainedLocalValue([((ADXGroupieViewHolder *) nil_chk(holder)) getItem]);
  return [((ADXItem *) nil_chk(contentItem)) isRecyclable];
}

- (void)onViewAttachedToWindowWithADXRecyclerView_ViewHolder:(ADXGroupieViewHolder *)holder {
  [super onViewAttachedToWindowWithADXRecyclerView_ViewHolder:holder];
  ADXItem *item = JreRetainedLocalValue([self getItemWithADXGroupieViewHolder:holder]);
  [((ADXItem *) nil_chk(item)) onViewAttachedToWindowWithADXGroupieViewHolder:holder];
}

- (void)onViewDetachedFromWindowWithADXRecyclerView_ViewHolder:(ADXGroupieViewHolder *)holder {
  [super onViewDetachedFromWindowWithADXRecyclerView_ViewHolder:holder];
  ADXItem *item = JreRetainedLocalValue([self getItemWithADXGroupieViewHolder:holder]);
  [((ADXItem *) nil_chk(item)) onViewDetachedFromWindowWithADXGroupieViewHolder:holder];
}

- (jint)getItemViewTypeWithInt:(jint)position {
  JreStrongAssign(&lastItemForViewTypeLookup_, [self getItemWithInt:position]);
  if (lastItemForViewTypeLookup_ == nil) @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$I", @"Invalid position ", position));
  return [lastItemForViewTypeLookup_ getViewType];
}

- (jlong)getItemIdWithInt:(jint)position {
  return [((ADXItem *) nil_chk([self getItemWithInt:position])) getId];
}

- (ADXItem *)getItemWithADXGroupieViewHolder:(ADXGroupieViewHolder *)holder {
  return [((ADXGroupieViewHolder *) nil_chk(holder)) getItem];
}

- (ADXItem *)getItemWithInt:(jint)position {
  return ADXGroupUtils_getItemWithJavaUtilCollection_withInt_(groups_, position);
}

- (jint)getAdapterPositionWithADXItem:(ADXItem *)contentItem {
  jint count = 0;
  for (id<ADXRVGroup> __strong group in nil_chk(groups_)) {
    jint index = [((id<ADXRVGroup>) nil_chk(group)) getPositionWithADXItem:contentItem];
    if (index >= 0) return index + count;
    count += [group getItemCount];
  }
  return -1;
}

- (jint)getAdapterPositionWithADXRVGroup:(id<ADXRVGroup>)group {
  jint index = [((id<JavaUtilList>) nil_chk(groups_)) indexOfWithId:group];
  if (index == -1) return -1;
  jint position = 0;
  for (jint i = 0; i < index; i++) {
    position += [((id<ADXRVGroup>) nil_chk([groups_ getWithInt:i])) getItemCount];
  }
  return position;
}

- (jint)getGroupCount {
  return [((id<JavaUtilList>) nil_chk(groups_)) size];
}

- (jint)getItemCount {
  return ADXGroupUtils_getItemCountWithJavaUtilCollection_(groups_);
}

- (jint)getItemCountForGroupWithInt:(jint)groupIndex {
  if (groupIndex >= [((id<JavaUtilList>) nil_chk(groups_)) size]) {
    @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I$", @"Requested group index ", groupIndex, @" but there are ", [groups_ size], @" groups"));
  }
  return [((id<ADXRVGroup>) nil_chk([groups_ getWithInt:groupIndex])) getItemCount];
}

- (jint)getItemCountWithInt:(jint)groupIndex {
  return [self getItemCountForGroupWithInt:groupIndex];
}

- (void)clear {
  for (id<ADXRVGroup> __strong group in nil_chk(groups_)) {
    [((id<ADXRVGroup>) nil_chk(group)) unregisterGroupDataObserverWithADXGroupDataObserver:self];
  }
  [groups_ clear];
  [self notifyDataSetChanged];
}

- (void)addWithADXRVGroup:(id<ADXRVGroup>)group {
  if (group == nil) @throw create_JavaLangRuntimeException_initWithNSString_(@"Group cannot be null");
  jint itemCountBeforeGroup = [self getItemCount];
  [group registerGroupDataObserverWithADXGroupDataObserver:self];
  [((id<JavaUtilList>) nil_chk(groups_)) addWithId:group];
  [self notifyItemRangeInsertedWithInt:itemCountBeforeGroup withInt:[group getItemCount]];
}

- (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups {
  if ([((id<JavaUtilCollection>) nil_chk(groups)) containsWithId:nil]) @throw create_JavaLangRuntimeException_initWithNSString_(@"List of groups can't contain null!");
  jint itemCountBeforeGroup = [self getItemCount];
  jint additionalSize = 0;
  for (id<ADXRVGroup> __strong group in groups) {
    additionalSize += [((id<ADXRVGroup>) nil_chk(group)) getItemCount];
    [group registerGroupDataObserverWithADXGroupDataObserver:self];
  }
  [((id<JavaUtilList>) nil_chk(self->groups_)) addAllWithJavaUtilCollection:groups];
  [self notifyItemRangeInsertedWithInt:itemCountBeforeGroup withInt:additionalSize];
}

- (void)removeWithADXRVGroup:(id<ADXRVGroup>)group {
  if (group == nil) @throw create_JavaLangRuntimeException_initWithNSString_(@"Group cannot be null");
  jint position = [((id<JavaUtilList>) nil_chk(groups_)) indexOfWithId:group];
  ADXGroupAdapter_removeWithInt_withADXRVGroup_(self, position, group);
}

- (void)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups {
  for (id<ADXRVGroup> __strong group in nil_chk(groups)) {
    [self removeWithADXRVGroup:group];
  }
}

- (void)removeGroupAtAdapterPositionWithInt:(jint)position {
  id<ADXRVGroup> group = JreRetainedLocalValue([self getGroupAtAdapterPositionWithInt:position]);
  ADXGroupAdapter_removeWithInt_withADXRVGroup_(self, position, group);
}

- (void)removeGroupWithInt:(jint)adapterPosition {
  [self removeGroupAtAdapterPositionWithInt:adapterPosition];
}

- (void)removeWithInt:(jint)position
       withADXRVGroup:(id<ADXRVGroup>)group {
  ADXGroupAdapter_removeWithInt_withADXRVGroup_(self, position, group);
}

- (void)addWithInt:(jint)index
    withADXRVGroup:(id<ADXRVGroup>)group {
  if (group == nil) @throw create_JavaLangRuntimeException_initWithNSString_(@"Group cannot be null");
  [group registerGroupDataObserverWithADXGroupDataObserver:self];
  [((id<JavaUtilList>) nil_chk(groups_)) addWithInt:index withId:group];
  jint itemCountBeforeGroup = ADXGroupAdapter_getItemCountBeforeGroupWithInt_(self, index);
  [self notifyItemRangeInsertedWithInt:itemCountBeforeGroup withInt:[group getItemCount]];
}

- (id<ADXRVGroup>)getTopLevelGroupWithInt:(jint)position {
  return [((id<JavaUtilList>) nil_chk(groups_)) getWithInt:position];
}

- (id<ADXRVGroup>)getGroupAtAdapterPositionWithInt:(jint)position {
  jint previous = 0;
  jint size;
  for (id<ADXRVGroup> __strong group in nil_chk(groups_)) {
    size = [((id<ADXRVGroup>) nil_chk(group)) getItemCount];
    if (position - previous < size) return group;
    previous += [group getItemCount];
  }
  @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I$", @"Requested position ", position, @" in group adapter but there are only ", previous, @" items"));
}

- (id<ADXRVGroup>)getGroupWithInt:(jint)adapterPosition {
  return [self getGroupAtAdapterPositionWithInt:adapterPosition];
}

- (id<ADXRVGroup>)getGroupWithADXItem:(ADXItem *)contentItem {
  for (id<ADXRVGroup> __strong group in nil_chk(groups_)) {
    if ([((id<ADXRVGroup>) nil_chk(group)) getPositionWithADXItem:contentItem] >= 0) {
      return group;
    }
  }
  @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(@"Item is not present in adapter or in any group");
}

- (void)onChangedWithADXRVGroup:(id<ADXRVGroup>)group {
  [self notifyItemRangeChangedWithInt:[self getAdapterPositionWithADXRVGroup:group] withInt:[((id<ADXRVGroup>) nil_chk(group)) getItemCount]];
}

- (void)onItemInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                             withInt:(jint)position {
  [self notifyItemInsertedWithInt:[self getAdapterPositionWithADXRVGroup:group] + position];
}

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position {
  [self notifyItemChangedWithInt:[self getAdapterPositionWithADXRVGroup:group] + position];
}

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position
                             withId:(id)payload {
  [self notifyItemChangedWithInt:[self getAdapterPositionWithADXRVGroup:group] + position withId:payload];
}

- (void)onItemRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position {
  [self notifyItemRemovedWithInt:[self getAdapterPositionWithADXRVGroup:group] + position];
}

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount {
  [self notifyItemRangeChangedWithInt:[self getAdapterPositionWithADXRVGroup:group] + positionStart withInt:itemCount];
}

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount
                                  withId:(id)payload {
  [self notifyItemRangeChangedWithInt:[self getAdapterPositionWithADXRVGroup:group] + positionStart withInt:itemCount withId:payload];
}

- (void)onItemRangeInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount {
  [self notifyItemRangeInsertedWithInt:[self getAdapterPositionWithADXRVGroup:group] + positionStart withInt:itemCount];
}

- (void)onItemRangeRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount {
  [self notifyItemRangeRemovedWithInt:[self getAdapterPositionWithADXRVGroup:group] + positionStart withInt:itemCount];
}

- (void)onItemMovedWithADXRVGroup:(id<ADXRVGroup>)group
                          withInt:(jint)fromPosition
                          withInt:(jint)toPosition {
  jint groupAdapterPosition = [self getAdapterPositionWithADXRVGroup:group];
  [self notifyItemMovedWithInt:groupAdapterPosition + fromPosition withInt:groupAdapterPosition + toPosition];
}

- (void)onDataSetInvalidated {
  [self notifyDataSetChanged];
}

- (ADXItem *)getItemForViewTypeWithInt:(jint)viewType {
  if (lastItemForViewTypeLookup_ != nil && [lastItemForViewTypeLookup_ getViewType] == viewType) {
    return lastItemForViewTypeLookup_;
  }
  for (jint i = 0; i < [self getItemCount]; i++) {
    ADXItem *item = JreRetainedLocalValue([self getItemWithInt:i]);
    if ([((ADXItem *) nil_chk(item)) getViewType] == viewType) {
      return item;
    }
  }
  @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"Could not find model for view type: ", viewType));
}

- (jint)getItemCountBeforeGroupWithInt:(jint)groupIndex {
  return ADXGroupAdapter_getItemCountBeforeGroupWithInt_(self, groupIndex);
}

- (void)setNewGroupsWithJavaUtilCollection:(id<JavaUtilCollection>)newGroups {
  ADXGroupAdapter_setNewGroupsWithJavaUtilCollection_(self, newGroups);
}

- (void)dealloc {
  RELEASE_(groups_);
  RELEASE_(onItemClickListener_);
  RELEASE_(onItemLongClickListener_);
  RELEASE_(lastItemForViewTypeLookup_);
  RELEASE_(diffUtilCallbacks_);
  RELEASE_(asyncDiffUtil_);
  RELEASE_(spanSizeLookup_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXGridLayoutManager_SpanSizeLookup;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 2, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 2, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x1, 12, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, 14, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "LADXGroupieViewHolder;", 0x1, 19, 20, -1, 21, -1, -1 },
    { NULL, "V", 0x1, 22, 23, -1, 24, -1, -1 },
    { NULL, "V", 0x1, 22, 25, -1, 26, -1, -1 },
    { NULL, "V", 0x1, 27, 28, -1, 29, -1, -1 },
    { NULL, "Z", 0x1, 30, 28, -1, 31, -1, -1 },
    { NULL, "V", 0x1, 32, 28, -1, 29, -1, -1 },
    { NULL, "V", 0x1, 33, 28, -1, 29, -1, -1 },
    { NULL, "I", 0x1, 34, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 35, 1, -1, -1, -1, -1 },
    { NULL, "LADXItem;", 0x1, 36, 28, -1, 37, -1, -1 },
    { NULL, "LADXItem;", 0x1, 36, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 38, 39, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 38, 40, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 41, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 42, 1, -1, -1, 43, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 45, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x1, 46, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 47, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x1, 48, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 49, 1, -1, -1, 50, -1 },
    { NULL, "V", 0x2, 46, 51, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 51, -1, -1, -1, -1 },
    { NULL, "LADXRVGroup;", 0x1, 52, 1, -1, -1, -1, -1 },
    { NULL, "LADXRVGroup;", 0x1, 53, 1, -1, -1, -1, -1 },
    { NULL, "LADXRVGroup;", 0x1, 54, 1, -1, -1, 55, -1 },
    { NULL, "LADXRVGroup;", 0x1, 54, 39, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 56, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 57, 58, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 59, 58, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 59, 60, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 61, 58, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 62, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 62, 64, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 65, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 66, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 67, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXItem;", 0x1, 68, 1, -1, 69, -1, -1 },
    { NULL, "I", 0x2, 70, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 71, 10, -1, 11, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getSpanSizeLookup);
  methods[2].selector = @selector(setSpanCountWithInt:);
  methods[3].selector = @selector(getSpanCount);
  methods[4].selector = @selector(updateAsyncWithJavaUtilList:);
  methods[5].selector = @selector(updateAsyncWithJavaUtilList:withADXOnAsyncUpdateListener:);
  methods[6].selector = @selector(updateAsyncWithJavaUtilList:withBoolean:withADXOnAsyncUpdateListener:);
  methods[7].selector = @selector(replaceAllWithJavaUtilCollection:);
  methods[8].selector = @selector(updateWithJavaUtilCollection:);
  methods[9].selector = @selector(updateWithJavaUtilCollection:withBoolean:);
  methods[10].selector = @selector(setOnItemClickListenerWithADXOnItemClickListener:);
  methods[11].selector = @selector(setOnItemLongClickListenerWithADXOnItemLongClickListener:);
  methods[12].selector = @selector(onCreateViewHolderWithADViewGroup:withInt:);
  methods[13].selector = @selector(onBindViewHolderWithADXRecyclerView_ViewHolder:withInt:);
  methods[14].selector = @selector(onBindViewHolderWithADXRecyclerView_ViewHolder:withInt:withJavaUtilList:);
  methods[15].selector = @selector(onViewRecycledWithADXRecyclerView_ViewHolder:);
  methods[16].selector = @selector(onFailedToRecycleViewWithADXRecyclerView_ViewHolder:);
  methods[17].selector = @selector(onViewAttachedToWindowWithADXRecyclerView_ViewHolder:);
  methods[18].selector = @selector(onViewDetachedFromWindowWithADXRecyclerView_ViewHolder:);
  methods[19].selector = @selector(getItemViewTypeWithInt:);
  methods[20].selector = @selector(getItemIdWithInt:);
  methods[21].selector = @selector(getItemWithADXGroupieViewHolder:);
  methods[22].selector = @selector(getItemWithInt:);
  methods[23].selector = @selector(getAdapterPositionWithADXItem:);
  methods[24].selector = @selector(getAdapterPositionWithADXRVGroup:);
  methods[25].selector = @selector(getGroupCount);
  methods[26].selector = @selector(getItemCount);
  methods[27].selector = @selector(getItemCountForGroupWithInt:);
  methods[28].selector = @selector(getItemCountWithInt:);
  methods[29].selector = @selector(clear);
  methods[30].selector = @selector(addWithADXRVGroup:);
  methods[31].selector = @selector(addAllWithJavaUtilCollection:);
  methods[32].selector = @selector(removeWithADXRVGroup:);
  methods[33].selector = @selector(removeAllWithJavaUtilCollection:);
  methods[34].selector = @selector(removeGroupAtAdapterPositionWithInt:);
  methods[35].selector = @selector(removeGroupWithInt:);
  methods[36].selector = @selector(removeWithInt:withADXRVGroup:);
  methods[37].selector = @selector(addWithInt:withADXRVGroup:);
  methods[38].selector = @selector(getTopLevelGroupWithInt:);
  methods[39].selector = @selector(getGroupAtAdapterPositionWithInt:);
  methods[40].selector = @selector(getGroupWithInt:);
  methods[41].selector = @selector(getGroupWithADXItem:);
  methods[42].selector = @selector(onChangedWithADXRVGroup:);
  methods[43].selector = @selector(onItemInsertedWithADXRVGroup:withInt:);
  methods[44].selector = @selector(onItemChangedWithADXRVGroup:withInt:);
  methods[45].selector = @selector(onItemChangedWithADXRVGroup:withInt:withId:);
  methods[46].selector = @selector(onItemRemovedWithADXRVGroup:withInt:);
  methods[47].selector = @selector(onItemRangeChangedWithADXRVGroup:withInt:withInt:);
  methods[48].selector = @selector(onItemRangeChangedWithADXRVGroup:withInt:withInt:withId:);
  methods[49].selector = @selector(onItemRangeInsertedWithADXRVGroup:withInt:withInt:);
  methods[50].selector = @selector(onItemRangeRemovedWithADXRVGroup:withInt:withInt:);
  methods[51].selector = @selector(onItemMovedWithADXRVGroup:withInt:withInt:);
  methods[52].selector = @selector(onDataSetInvalidated);
  methods[53].selector = @selector(getItemForViewTypeWithInt:);
  methods[54].selector = @selector(getItemCountBeforeGroupWithInt:);
  methods[55].selector = @selector(setNewGroupsWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "groups_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 72, -1 },
    { "onItemClickListener_", "LADXOnItemClickListener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "onItemLongClickListener_", "LADXOnItemLongClickListener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "spanCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastItemForViewTypeLookup_", "LADXItem;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "diffUtilCallbacks_", "LADXAsyncDiffUtil_Callback;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "asyncDiffUtil_", "LADXAsyncDiffUtil;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "spanSizeLookup_", "LADXGridLayoutManager_SpanSizeLookup;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setSpanCount", "I", "updateAsync", "LJavaUtilList;", "(Ljava/util/List<+Lcom/xwray/groupie/RVGroup;>;)V", "LJavaUtilList;LADXOnAsyncUpdateListener;", "(Ljava/util/List<+Lcom/xwray/groupie/RVGroup;>;Lcom/xwray/groupie/OnAsyncUpdateListener;)V", "LJavaUtilList;ZLADXOnAsyncUpdateListener;", "(Ljava/util/List<+Lcom/xwray/groupie/RVGroup;>;ZLcom/xwray/groupie/OnAsyncUpdateListener;)V", "replaceAll", "LJavaUtilCollection;", "(Ljava/util/Collection<+Lcom/xwray/groupie/RVGroup;>;)V", "update", "LJavaUtilCollection;Z", "(Ljava/util/Collection<+Lcom/xwray/groupie/RVGroup;>;Z)V", "setOnItemClickListener", "LADXOnItemClickListener;", "setOnItemLongClickListener", "LADXOnItemLongClickListener;", "onCreateViewHolder", "LADViewGroup;I", "(Lr/android/view/ViewGroup;I)TVH;", "onBindViewHolder", "LADXGroupieViewHolder;I", "(TVH;I)V", "LADXGroupieViewHolder;ILJavaUtilList;", "(TVH;ILjava/util/List<Ljava/lang/Object;>;)V", "onViewRecycled", "LADXGroupieViewHolder;", "(TVH;)V", "onFailedToRecycleView", "(TVH;)Z", "onViewAttachedToWindow", "onViewDetachedFromWindow", "getItemViewType", "getItemId", "getItem", "(TVH;)Lcom/xwray/groupie/Item;", "getAdapterPosition", "LADXItem;", "LADXRVGroup;", "getItemCountForGroup", "getItemCount", (void *)&ADXGroupAdapter__Annotations$0, "add", "addAll", "remove", "removeAll", "removeGroupAtAdapterPosition", "removeGroup", (void *)&ADXGroupAdapter__Annotations$1, "ILADXRVGroup;", "getTopLevelGroup", "getGroupAtAdapterPosition", "getGroup", (void *)&ADXGroupAdapter__Annotations$2, "onChanged", "onItemInserted", "LADXRVGroup;I", "onItemChanged", "LADXRVGroup;ILNSObject;", "onItemRemoved", "onItemRangeChanged", "LADXRVGroup;II", "LADXRVGroup;IILNSObject;", "onItemRangeInserted", "onItemRangeRemoved", "onItemMoved", "getItemForViewType", "(I)Lcom/xwray/groupie/Item<TVH;>;", "getItemCountBeforeGroup", "setNewGroups", "Ljava/util/List<Lcom/xwray/groupie/RVGroup;>;", "<VH:Lcom/xwray/groupie/GroupieViewHolder;>Landroidx/recyclerview/widget/RecyclerView$Adapter<TVH;>;Lcom/xwray/groupie/GroupDataObserver;" };
  static const J2ObjcClassInfo _ADXGroupAdapter = { "GroupAdapter", "com.xwray.groupie", ptrTable, methods, fields, 7, 0x1, 56, 8, -1, -1, -1, 73, -1 };
  return &_ADXGroupAdapter;
}

@end

void ADXGroupAdapter_init(ADXGroupAdapter *self) {
  ADXRecyclerView_Adapter_init(self);
  JreStrongAssignAndConsume(&self->groups_, new_JavaUtilArrayList_init());
  self->spanCount_ = 1;
  JreStrongAssignAndConsume(&self->diffUtilCallbacks_, new_ADXGroupAdapter_1_initWithADXGroupAdapter_(self));
  JreStrongAssignAndConsume(&self->asyncDiffUtil_, new_ADXAsyncDiffUtil_initPackagePrivateWithADXAsyncDiffUtil_Callback_(self->diffUtilCallbacks_));
  JreStrongAssignAndConsume(&self->spanSizeLookup_, new_ADXGroupAdapter_2_initWithADXGroupAdapter_(self));
}

ADXGroupAdapter *new_ADXGroupAdapter_init() {
  J2OBJC_NEW_IMPL(ADXGroupAdapter, init)
}

ADXGroupAdapter *create_ADXGroupAdapter_init() {
  J2OBJC_CREATE_IMPL(ADXGroupAdapter, init)
}

void ADXGroupAdapter_removeWithInt_withADXRVGroup_(ADXGroupAdapter *self, jint position, id<ADXRVGroup> group) {
  jint itemCountBeforeGroup = ADXGroupAdapter_getItemCountBeforeGroupWithInt_(self, position);
  [((id<ADXRVGroup>) nil_chk(group)) unregisterGroupDataObserverWithADXGroupDataObserver:self];
  [((id<JavaUtilList>) nil_chk(self->groups_)) removeWithInt:position];
  [self notifyItemRangeRemovedWithInt:itemCountBeforeGroup withInt:[group getItemCount]];
}

jint ADXGroupAdapter_getItemCountBeforeGroupWithInt_(ADXGroupAdapter *self, jint groupIndex) {
  jint count = 0;
  for (id<ADXRVGroup> __strong group in nil_chk([((id<JavaUtilList>) nil_chk(self->groups_)) subListWithInt:0 withInt:groupIndex])) {
    count += [((id<ADXRVGroup>) nil_chk(group)) getItemCount];
  }
  return count;
}

void ADXGroupAdapter_setNewGroupsWithJavaUtilCollection_(ADXGroupAdapter *self, id<JavaUtilCollection> newGroups) {
  for (id<ADXRVGroup> __strong group in nil_chk(self->groups_)) {
    [((id<ADXRVGroup>) nil_chk(group)) unregisterGroupDataObserverWithADXGroupDataObserver:self];
  }
  [self->groups_ clear];
  [self->groups_ addAllWithJavaUtilCollection:newGroups];
  for (id<ADXRVGroup> __strong group in nil_chk(newGroups)) {
    [((id<ADXRVGroup>) nil_chk(group)) registerGroupDataObserverWithADXGroupDataObserver:self];
  }
}

IOSObjectArray *ADXGroupAdapter__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ADXGroupAdapter__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ADXGroupAdapter__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXGroupAdapter)

@implementation ADXGroupAdapter_1

- (instancetype)initWithADXGroupAdapter:(ADXGroupAdapter *)outer$ {
  ADXGroupAdapter_1_initWithADXGroupAdapter_(self, outer$);
  return self;
}

- (void)onDispatchAsyncResultWithJavaUtilCollection:(id<JavaUtilCollection>)newGroups {
  ADXGroupAdapter_setNewGroupsWithJavaUtilCollection_(this$0_, newGroups);
}

- (void)onInsertedWithInt:(jint)position
                  withInt:(jint)count {
  [this$0_ notifyItemRangeInsertedWithInt:position withInt:count];
}

- (void)onRemovedWithInt:(jint)position
                 withInt:(jint)count {
  [this$0_ notifyItemRangeRemovedWithInt:position withInt:count];
}

- (void)onMovedWithInt:(jint)fromPosition
               withInt:(jint)toPosition {
  [this$0_ notifyItemMovedWithInt:fromPosition withInt:toPosition];
}

- (void)onChangedWithInt:(jint)position
                 withInt:(jint)count
                  withId:(id)payload {
  [this$0_ notifyItemRangeChangedWithInt:position withInt:count withId:payload];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXGroupAdapter:);
  methods[1].selector = @selector(onDispatchAsyncResultWithJavaUtilCollection:);
  methods[2].selector = @selector(onInsertedWithInt:withInt:);
  methods[3].selector = @selector(onRemovedWithInt:withInt:);
  methods[4].selector = @selector(onMovedWithInt:withInt:);
  methods[5].selector = @selector(onChangedWithInt:withInt:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXGroupAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LADXGroupAdapter;", "onDispatchAsyncResult", "LJavaUtilCollection;", "(Ljava/util/Collection<+Lcom/xwray/groupie/RVGroup;>;)V", "onInserted", "II", "onRemoved", "onMoved", "onChanged", "IILNSObject;", "Lcom/xwray/groupie/GroupAdapter<TVH;>;" };
  static const J2ObjcClassInfo _ADXGroupAdapter_1 = { "", "com.xwray.groupie", ptrTable, methods, fields, 7, 0x8010, 6, 1, 0, -1, -1, -1, -1 };
  return &_ADXGroupAdapter_1;
}

@end

void ADXGroupAdapter_1_initWithADXGroupAdapter_(ADXGroupAdapter_1 *self, ADXGroupAdapter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXGroupAdapter_1 *new_ADXGroupAdapter_1_initWithADXGroupAdapter_(ADXGroupAdapter *outer$) {
  J2OBJC_NEW_IMPL(ADXGroupAdapter_1, initWithADXGroupAdapter_, outer$)
}

ADXGroupAdapter_1 *create_ADXGroupAdapter_1_initWithADXGroupAdapter_(ADXGroupAdapter *outer$) {
  J2OBJC_CREATE_IMPL(ADXGroupAdapter_1, initWithADXGroupAdapter_, outer$)
}

@implementation ADXGroupAdapter_2

- (instancetype)initWithADXGroupAdapter:(ADXGroupAdapter *)outer$ {
  ADXGroupAdapter_2_initWithADXGroupAdapter_(self, outer$);
  return self;
}

- (jint)getSpanSizeWithInt:(jint)position {
  @try {
    return [((ADXItem *) nil_chk([this$0_ getItemWithInt:position])) getSpanSizeWithInt:this$0_->spanCount_ withInt:position];
  }
  @catch (JavaLangIndexOutOfBoundsException *e) {
    return this$0_->spanCount_;
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXGroupAdapter:);
  methods[1].selector = @selector(getSpanSizeWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXGroupAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LADXGroupAdapter;", "getSpanSize", "I", "Lcom/xwray/groupie/GroupAdapter<TVH;>;" };
  static const J2ObjcClassInfo _ADXGroupAdapter_2 = { "", "com.xwray.groupie", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, -1, -1, -1 };
  return &_ADXGroupAdapter_2;
}

@end

void ADXGroupAdapter_2_initWithADXGroupAdapter_(ADXGroupAdapter_2 *self, ADXGroupAdapter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ADXGridLayoutManager_SpanSizeLookup_init(self);
}

ADXGroupAdapter_2 *new_ADXGroupAdapter_2_initWithADXGroupAdapter_(ADXGroupAdapter *outer$) {
  J2OBJC_NEW_IMPL(ADXGroupAdapter_2, initWithADXGroupAdapter_, outer$)
}

ADXGroupAdapter_2 *create_ADXGroupAdapter_2_initWithADXGroupAdapter_(ADXGroupAdapter *outer$) {
  J2OBJC_CREATE_IMPL(ADXGroupAdapter_2, initWithADXGroupAdapter_, outer$)
}
