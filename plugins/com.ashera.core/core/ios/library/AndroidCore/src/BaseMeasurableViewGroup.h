//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\com\ashera\view\BaseMeasurableViewGroup.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_BaseMeasurableViewGroup")
#ifdef RESTRICT_BaseMeasurableViewGroup
#define INCLUDE_ALL_BaseMeasurableViewGroup 0
#else
#define INCLUDE_ALL_BaseMeasurableViewGroup 1
#endif
#undef RESTRICT_BaseMeasurableViewGroup

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ASBaseMeasurableViewGroup_) && (INCLUDE_ALL_BaseMeasurableViewGroup || defined(INCLUDE_ASBaseMeasurableViewGroup))
#define ASBaseMeasurableViewGroup_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup 1
#include "ViewGroup.h"

@class ADDrawable;
@class ASBaseMeasurableViewGroup_VerticalAligment;
@class ASRectM;
@class IOSObjectArray;
@protocol ASHasWidgets;
@protocol ASIWidget;

@interface ASBaseMeasurableViewGroup : ADViewGroup {
 @public
  ASBaseMeasurableViewGroup_VerticalAligment *verticalAligment_;
  jboolean mHorizontallyScrolling_;
}

#pragma mark Public

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget;

- (jint)getBaseline;

- (ADDrawable *)getBottomDrawable;

- (ASRectM *)getBottomDrawableBoundsWithInt:(jint)x
                                    withInt:(jint)y
                                    withInt:(jint)width
                                    withInt:(jint)height;

- (jint)getCompoundPaddingBottom;

- (jint)getCompoundPaddingLeft;

- (jint)getCompoundPaddingLeftWithIgnoreCheck;

- (jint)getCompoundPaddingRight;

- (jint)getCompoundPaddingRightWithIgnoreCheck;

- (jint)getCompoundPaddingTop;

- (jint)getDrawablePadding;

- (ADDrawable *)getLeftDrawable;

- (ASRectM *)getLeftDrawableBoundsWithInt:(jint)x
                                  withInt:(jint)y
                                  withInt:(jint)width
                                  withInt:(jint)height;

- (ADDrawable *)getRightDrawable;

- (ASRectM *)getRightDrawableBoundsWithInt:(jint)x
                                   withInt:(jint)y
                                   withInt:(jint)width
                                   withInt:(jint)height;

- (ADDrawable *)getTopDrawable;

- (ASRectM *)getTopDrawableBoundsWithInt:(jint)x
                                 withInt:(jint)y
                                 withInt:(jint)width
                                 withInt:(jint)height;

- (ASBaseMeasurableViewGroup_VerticalAligment *)getVerticalAligment;

- (id<ASIWidget>)getWidget;

- (ASRectM *)getWidgetBoundsWithInt:(jint)width
                            withInt:(jint)height
                  withNSObjectArray:(IOSObjectArray *)nativeWidgets;

- (jboolean)hasDrawables;

- (jboolean)isCompoundHorizontalPaddingConsumed;

- (jboolean)isIgnoreDrawableHeight;

- (jboolean)isVerticalAlignBottom;

- (jboolean)isVerticalAlignMiddle;

- (jboolean)isVerticalAlignTop;

+ (void)measureWidgetWithNoParentWithASHasWidgets:(id<ASHasWidgets>)parent
                                    withASIWidget:(id<ASIWidget>)widget
                                          withInt:(jint)level
                                          withInt:(jint)initialWidth
                                          withInt:(jint)indent;

- (jint)nativeMeasureHeightWithId:(id)uiView
                          withInt:(jint)width;

- (jint)nativeMeasureWidthWithId:(id)uiView;

- (void)setBottomDrawableWithADDrawable:(ADDrawable *)bottomDrawable;

- (void)setCompoundHorizontalPaddingConsumedWithBoolean:(jboolean)isCompoundHorizontalPaddingConsumed;

- (void)setDrawablePaddingWithInt:(jint)drawablePadding;

- (void)setHorizontallyScrollingWithBoolean:(jboolean)horizontallyScrolling;

- (void)setIgnoreDrawableHeightWithBoolean:(jboolean)ignoreDrawableHeight;

- (void)setLeftDrawableWithADDrawable:(ADDrawable *)leftDrawable;

- (void)setRightDrawableWithADDrawable:(ADDrawable *)rightDrawable;

- (void)setTopDrawableWithADDrawable:(ADDrawable *)topDrawable;

- (void)setVerticalAligmentWithASBaseMeasurableViewGroup_VerticalAligment:(ASBaseMeasurableViewGroup_VerticalAligment *)verticalAligment;

#pragma mark Protected

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASBaseMeasurableViewGroup)

J2OBJC_FIELD_SETTER(ASBaseMeasurableViewGroup, verticalAligment_, ASBaseMeasurableViewGroup_VerticalAligment *)

inline jint ASBaseMeasurableViewGroup_get_VERY_WIDE(void);
inline jint ASBaseMeasurableViewGroup_set_VERY_WIDE(jint value);
inline jint *ASBaseMeasurableViewGroup_getRef_VERY_WIDE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASBaseMeasurableViewGroup_VERY_WIDE;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASBaseMeasurableViewGroup, VERY_WIDE, jint)

FOUNDATION_EXPORT void ASBaseMeasurableViewGroup_initWithASIWidget_(ASBaseMeasurableViewGroup *self, id<ASIWidget> widget);

FOUNDATION_EXPORT void ASBaseMeasurableViewGroup_measureWidgetWithNoParentWithASHasWidgets_withASIWidget_withInt_withInt_withInt_(id<ASHasWidgets> parent, id<ASIWidget> widget, jint level, jint initialWidth, jint indent);

J2OBJC_TYPE_LITERAL_HEADER(ASBaseMeasurableViewGroup)

@compatibility_alias ComAsheraViewBaseMeasurableViewGroup ASBaseMeasurableViewGroup;

#endif

#if !defined (ASBaseMeasurableViewGroup_VerticalAligment_) && (INCLUDE_ALL_BaseMeasurableViewGroup || defined(INCLUDE_ASBaseMeasurableViewGroup_VerticalAligment))
#define ASBaseMeasurableViewGroup_VerticalAligment_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ASBaseMeasurableViewGroup_VerticalAligment_Enum) {
  ASBaseMeasurableViewGroup_VerticalAligment_Enum_middle = 0,
  ASBaseMeasurableViewGroup_VerticalAligment_Enum_bottom = 1,
  ASBaseMeasurableViewGroup_VerticalAligment_Enum_top = 2,
};

@interface ASBaseMeasurableViewGroup_VerticalAligment : JavaLangEnum

#pragma mark Public

+ (ASBaseMeasurableViewGroup_VerticalAligment *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ASBaseMeasurableViewGroup_VerticalAligment_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ASBaseMeasurableViewGroup_VerticalAligment)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_values_[];

inline ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_get_middle(void);
J2OBJC_ENUM_CONSTANT(ASBaseMeasurableViewGroup_VerticalAligment, middle)

inline ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_get_bottom(void);
J2OBJC_ENUM_CONSTANT(ASBaseMeasurableViewGroup_VerticalAligment, bottom)

inline ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_get_top(void);
J2OBJC_ENUM_CONSTANT(ASBaseMeasurableViewGroup_VerticalAligment, top)

FOUNDATION_EXPORT IOSObjectArray *ASBaseMeasurableViewGroup_VerticalAligment_values(void);

FOUNDATION_EXPORT ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ASBaseMeasurableViewGroup_VerticalAligment)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_BaseMeasurableViewGroup")
