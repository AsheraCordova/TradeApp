//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\com\xwray\groupie\DiffCallback.java
//

#include "DiffCallback.h"
#include "DiffUtil.h"
#include "GroupUtils.h"
#include "Item.h"
#include "J2ObjC_source.h"
#include "java/util/Collection.h"

@protocol JavaUtilCollection;


@interface ADXDiffCallback () {
 @public
  jint oldBodyItemCount_;
  jint newBodyItemCount_;
  id<JavaUtilCollection> oldGroups_;
  id<JavaUtilCollection> newGroups_;
}

@end

J2OBJC_FIELD_SETTER(ADXDiffCallback, oldGroups_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(ADXDiffCallback, newGroups_, id<JavaUtilCollection>)

@implementation ADXDiffCallback

- (instancetype)initPackagePrivateWithJavaUtilCollection:(id<JavaUtilCollection>)oldGroups
                                  withJavaUtilCollection:(id<JavaUtilCollection>)newGroups {
  ADXDiffCallback_initPackagePrivateWithJavaUtilCollection_withJavaUtilCollection_(self, oldGroups, newGroups);
  return self;
}

- (jint)getOldListSize {
  return oldBodyItemCount_;
}

- (jint)getNewListSize {
  return newBodyItemCount_;
}

- (jboolean)areItemsTheSameWithInt:(jint)oldItemPosition
                           withInt:(jint)newItemPosition {
  ADXItem *oldItem = ADXGroupUtils_getItemWithJavaUtilCollection_withInt_(oldGroups_, oldItemPosition);
  ADXItem *newItem = ADXGroupUtils_getItemWithJavaUtilCollection_withInt_(newGroups_, newItemPosition);
  return [((ADXItem *) nil_chk(newItem)) isSameAsWithADXItem:oldItem];
}

- (jboolean)areContentsTheSameWithInt:(jint)oldItemPosition
                              withInt:(jint)newItemPosition {
  ADXItem *oldItem = ADXGroupUtils_getItemWithJavaUtilCollection_withInt_(oldGroups_, oldItemPosition);
  ADXItem *newItem = ADXGroupUtils_getItemWithJavaUtilCollection_withInt_(newGroups_, newItemPosition);
  return [((ADXItem *) nil_chk(newItem)) hasSameContentAsWithADXItem:oldItem];
}

- (id)getChangePayloadWithInt:(jint)oldItemPosition
                      withInt:(jint)newItemPosition {
  ADXItem *oldItem = ADXGroupUtils_getItemWithJavaUtilCollection_withInt_(oldGroups_, oldItemPosition);
  ADXItem *newItem = ADXGroupUtils_getItemWithJavaUtilCollection_withInt_(newGroups_, newItemPosition);
  return [((ADXItem *) nil_chk(oldItem)) getChangePayloadWithADXItem:newItem];
}

- (void)dealloc {
  RELEASE_(oldGroups_);
  RELEASE_(newGroups_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithJavaUtilCollection:withJavaUtilCollection:);
  methods[1].selector = @selector(getOldListSize);
  methods[2].selector = @selector(getNewListSize);
  methods[3].selector = @selector(areItemsTheSameWithInt:withInt:);
  methods[4].selector = @selector(areContentsTheSameWithInt:withInt:);
  methods[5].selector = @selector(getChangePayloadWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "oldBodyItemCount_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "newBodyItemCount_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "oldGroups_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
    { "newGroups_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;LJavaUtilCollection;", "(Ljava/util/Collection<+Lcom/xwray/groupie/RVGroup;>;Ljava/util/Collection<+Lcom/xwray/groupie/RVGroup;>;)V", "areItemsTheSame", "II", "areContentsTheSame", "getChangePayload", "Ljava/util/Collection<+Lcom/xwray/groupie/RVGroup;>;" };
  static const J2ObjcClassInfo _ADXDiffCallback = { "DiffCallback", "com.xwray.groupie", ptrTable, methods, fields, 7, 0x0, 6, 4, -1, -1, -1, -1, -1 };
  return &_ADXDiffCallback;
}

@end

void ADXDiffCallback_initPackagePrivateWithJavaUtilCollection_withJavaUtilCollection_(ADXDiffCallback *self, id<JavaUtilCollection> oldGroups, id<JavaUtilCollection> newGroups) {
  ADXDiffUtil_Callback_init(self);
  self->oldBodyItemCount_ = ADXGroupUtils_getItemCountWithJavaUtilCollection_(oldGroups);
  self->newBodyItemCount_ = ADXGroupUtils_getItemCountWithJavaUtilCollection_(newGroups);
  JreStrongAssign(&self->oldGroups_, oldGroups);
  JreStrongAssign(&self->newGroups_, newGroups);
}

ADXDiffCallback *new_ADXDiffCallback_initPackagePrivateWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> oldGroups, id<JavaUtilCollection> newGroups) {
  J2OBJC_NEW_IMPL(ADXDiffCallback, initPackagePrivateWithJavaUtilCollection_withJavaUtilCollection_, oldGroups, newGroups)
}

ADXDiffCallback *create_ADXDiffCallback_initPackagePrivateWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> oldGroups, id<JavaUtilCollection> newGroups) {
  J2OBJC_CREATE_IMPL(ADXDiffCallback, initPackagePrivateWithJavaUtilCollection_withJavaUtilCollection_, oldGroups, newGroups)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXDiffCallback)
