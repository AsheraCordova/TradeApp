//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\SolverVariableValues.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SolverVariableValues")
#ifdef RESTRICT_SolverVariableValues
#define INCLUDE_ALL_SolverVariableValues 0
#else
#define INCLUDE_ALL_SolverVariableValues 1
#endif
#undef RESTRICT_SolverVariableValues

#if !defined (ADXSolverVariableValues_) && (INCLUDE_ALL_SolverVariableValues || defined(INCLUDE_ADXSolverVariableValues))
#define ADXSolverVariableValues_

#define RESTRICT_ArrayRow 1
#define INCLUDE_ADXArrayRow_ArrayRowVariables 1
#include "ArrayRow.h"

@class ADXArrayRow;
@class ADXCache;
@class ADXSolverVariable;
@class IOSFloatArray;
@class IOSIntArray;

/*!
 @brief Store a set of variables and their values in an array-based linked list coupled
  with a custom hashmap.
 */
@interface ADXSolverVariableValues : NSObject < ADXArrayRow_ArrayRowVariables > {
 @public
  IOSIntArray *keys_;
  IOSIntArray *nextKeys_;
  IOSIntArray *variables_;
  IOSFloatArray *values_;
  IOSIntArray *previous_;
  IOSIntArray *next_;
  jint mCount_;
  jint head_;
  __unsafe_unretained ADXCache *mCache_;
}

#pragma mark Public

- (void)addWithADXSolverVariable:(ADXSolverVariable *)v
                       withFloat:(jfloat)value
                     withBoolean:(jboolean)removeFromDefinition;

- (void)clear;

- (jboolean)containsWithADXSolverVariable:(ADXSolverVariable *)variable;

- (void)display;

- (void)divideByAmountWithFloat:(jfloat)amount;

- (jfloat)getWithADXSolverVariable:(ADXSolverVariable *)variable;

- (jint)getCurrentSize;

- (ADXSolverVariable *)getVariableWithInt:(jint)index;

- (jfloat)getVariableValueWithInt:(jint)index;

- (jint)indexOfWithADXSolverVariable:(ADXSolverVariable *)variable;

- (void)invert;

- (void)putWithADXSolverVariable:(ADXSolverVariable *)variable
                       withFloat:(jfloat)value;

- (jfloat)removeWithADXSolverVariable:(ADXSolverVariable *)v
                          withBoolean:(jboolean)removeFromDefinition;

- (jint)sizeInBytes;

- (NSString *)description;

- (jfloat)useWithADXArrayRow:(ADXArrayRow *)def
                 withBoolean:(jboolean)removeFromDefinition;

#pragma mark Package-Private

- (instancetype)initWithADXArrayRow:(ADXArrayRow *)row
                       withADXCache:(ADXCache *)cache;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSolverVariableValues)

J2OBJC_FIELD_SETTER(ADXSolverVariableValues, keys_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ADXSolverVariableValues, nextKeys_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ADXSolverVariableValues, variables_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ADXSolverVariableValues, values_, IOSFloatArray *)
J2OBJC_FIELD_SETTER(ADXSolverVariableValues, previous_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ADXSolverVariableValues, next_, IOSIntArray *)

FOUNDATION_EXPORT void ADXSolverVariableValues_initWithADXArrayRow_withADXCache_(ADXSolverVariableValues *self, ADXArrayRow *row, ADXCache *cache);

FOUNDATION_EXPORT ADXSolverVariableValues *new_ADXSolverVariableValues_initWithADXArrayRow_withADXCache_(ADXArrayRow *row, ADXCache *cache) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXSolverVariableValues *create_ADXSolverVariableValues_initWithADXArrayRow_withADXCache_(ADXArrayRow *row, ADXCache *cache);

J2OBJC_TYPE_LITERAL_HEADER(ADXSolverVariableValues)

@compatibility_alias AndroidxConstraintlayoutCoreSolverVariableValues ADXSolverVariableValues;

#endif

#pragma pop_macro("INCLUDE_ALL_SolverVariableValues")
