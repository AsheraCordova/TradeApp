//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\html_parser\src\com\ashera\parser\html\HtmlParser.java
//

#include "HTMLSchema.h"
#include "HtmlParser.h"
#include "J2ObjC_source.h"
#include "TagSoupParser.h"
#include "java/io/IOException.h"
#include "java/io/StringReader.h"
#include "java/lang/RuntimeException.h"
#include "org/xml/sax/ContentHandler.h"
#include "org/xml/sax/InputSource.h"
#include "org/xml/sax/SAXException.h"
#include "org/xml/sax/SAXNotRecognizedException.h"
#include "org/xml/sax/SAXNotSupportedException.h"


inline TSHTMLSchema *ASHtmlParser_get_schema(void);
static TSHTMLSchema *ASHtmlParser_schema;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASHtmlParser, schema, TSHTMLSchema *)

J2OBJC_INITIALIZED_DEFN(ASHtmlParser)

@implementation ASHtmlParser

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASHtmlParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)parseWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)handler
                            withNSString:(NSString *)contentHtml {
  ASHtmlParser_parseWithOrgXmlSaxContentHandler_withNSString_(handler, contentHtml);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(parseWithOrgXmlSaxContentHandler:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "schema", "LTSHTMLSchema;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "parse", "LOrgXmlSaxContentHandler;LNSString;", &ASHtmlParser_schema };
  static const J2ObjcClassInfo _ASHtmlParser = { "HtmlParser", "com.ashera.parser.html", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_ASHtmlParser;
}

+ (void)initialize {
  if (self == [ASHtmlParser class]) {
    JreStrongAssignAndConsume(&ASHtmlParser_schema, new_TSHTMLSchema_init());
    J2OBJC_SET_INITIALIZED(ASHtmlParser)
  }
}

@end

void ASHtmlParser_init(ASHtmlParser *self) {
  NSObject_init(self);
}

ASHtmlParser *new_ASHtmlParser_init() {
  J2OBJC_NEW_IMPL(ASHtmlParser, init)
}

ASHtmlParser *create_ASHtmlParser_init() {
  J2OBJC_CREATE_IMPL(ASHtmlParser, init)
}

void ASHtmlParser_parseWithOrgXmlSaxContentHandler_withNSString_(id<OrgXmlSaxContentHandler> handler, NSString *contentHtml) {
  ASHtmlParser_initialize();
  TSTagSoupParser *parser = create_TSTagSoupParser_init();
  @try {
    [parser setPropertyWithNSString:TSTagSoupParser_schemaProperty withId:ASHtmlParser_schema];
  }
  @catch (OrgXmlSaxSAXNotRecognizedException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
  @catch (OrgXmlSaxSAXNotSupportedException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
  [parser setContentHandlerWithOrgXmlSaxContentHandler:handler];
  @try {
    [parser parseWithOrgXmlSaxInputSource:create_OrgXmlSaxInputSource_initWithJavaIoReader_(create_JavaIoStringReader_initWithNSString_(contentHtml))];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
  @catch (OrgXmlSaxSAXException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASHtmlParser)
