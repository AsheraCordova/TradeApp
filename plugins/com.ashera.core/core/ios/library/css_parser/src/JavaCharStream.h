//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\css_parser\src\com\ashera\css\JavaCharStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaCharStream")
#ifdef RESTRICT_JavaCharStream
#define INCLUDE_ALL_JavaCharStream 0
#else
#define INCLUDE_ALL_JavaCharStream 1
#endif
#undef RESTRICT_JavaCharStream

#if !defined (CSSJavaCharStream_) && (INCLUDE_ALL_JavaCharStream || defined(INCLUDE_CSSJavaCharStream))
#define CSSJavaCharStream_

@class IOSCharArray;
@class IOSIntArray;
@class JavaIoInputStream;
@class JavaIoReader;

/*!
 @brief An implementation of interface CharStream, where the stream is assumed to
  contain only ASCII characters (with java-like unicode escape processing).
 */
@interface CSSJavaCharStream : NSObject {
 @public
  /*!
   @brief Position in buffer.
   */
  jint bufpos_;
  jint bufsize_;
  jint available_;
  jint tokenBegin_;
  IOSIntArray *bufline_;
  IOSIntArray *bufcolumn_;
  jint column_;
  jint line_;
  jboolean prevCharIsCR_;
  jboolean prevCharIsLF_;
  JavaIoReader *inputStream_;
  IOSCharArray *nextCharBuf_;
  IOSCharArray *buffer_;
  jint maxNextCharInd_;
  jint nextCharInd_;
  jint inBuf_;
  jint tabSize_;
  jboolean trackLineColumn_;
}

#pragma mark Public

/*!
 @brief Constructor.
 */
- (instancetype)initPackagePrivateWithJavaIoInputStream:(JavaIoInputStream *)dstream;

/*!
 @brief Constructor.
 */
- (instancetype)initPackagePrivateWithJavaIoInputStream:(JavaIoInputStream *)dstream
                                                withInt:(jint)startline
                                                withInt:(jint)startcolumn;

/*!
 @brief Constructor.
 */
- (instancetype)initPackagePrivateWithJavaIoInputStream:(JavaIoInputStream *)dstream
                                                withInt:(jint)startline
                                                withInt:(jint)startcolumn
                                                withInt:(jint)buffersize;

/*!
 @brief Constructor.
 */
- (instancetype)initPackagePrivateWithJavaIoInputStream:(JavaIoInputStream *)dstream
                                           withNSString:(NSString *)encoding;

/*!
 @brief Constructor.
 */
- (instancetype)initPackagePrivateWithJavaIoInputStream:(JavaIoInputStream *)dstream
                                           withNSString:(NSString *)encoding
                                                withInt:(jint)startline
                                                withInt:(jint)startcolumn;

/*!
 @brief Constructor.
 */
- (instancetype)initPackagePrivateWithJavaIoInputStream:(JavaIoInputStream *)dstream
                                           withNSString:(NSString *)encoding
                                                withInt:(jint)startline
                                                withInt:(jint)startcolumn
                                                withInt:(jint)buffersize;

/*!
 @brief Constructor.
 */
- (instancetype)initPackagePrivateWithJavaIoReader:(JavaIoReader *)dstream;

/*!
 @brief Constructor.
 */
- (instancetype)initPackagePrivateWithJavaIoReader:(JavaIoReader *)dstream
                                           withInt:(jint)startline
                                           withInt:(jint)startcolumn;

/*!
 @brief Constructor.
 */
- (instancetype)initPackagePrivateWithJavaIoReader:(JavaIoReader *)dstream
                                           withInt:(jint)startline
                                           withInt:(jint)startcolumn
                                           withInt:(jint)buffersize;

/*!
 @brief Method to adjust line and column numbers for the start of a token.
 */
- (void)adjustBeginLineColumnWithInt:(jint)newLine
                             withInt:(jint)newCol;

/*!
 @brief Retreat.
 */
- (void)backupWithInt:(jint)amount;

/*!
 @return starting character for token.
 */
- (jchar)BeginToken;

/*!
 @brief Set buffers back to null when finished.
 */
- (void)Done;

/*!
 @return column of token start
 */
- (jint)getBeginColumn;

/*!
 @return line number of token start
 */
- (jint)getBeginLine;

- (jint)getColumn;

/*!
 @brief Get end column.
 */
- (jint)getEndColumn;

/*!
 @brief Get end line.
 */
- (jint)getEndLine;

/*!
 @return token image as String
 */
- (NSString *)GetImage;

- (jint)getLine;

/*!
 @return suffix
 */
- (IOSCharArray *)GetSuffixWithInt:(jint)len;

- (jint)getTabSize;

/*!
 @brief Read a character.
 */
- (jchar)readChar;

/*!
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream;

/*!
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                            withInt:(jint)startline
                            withInt:(jint)startcolumn;

/*!
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                            withInt:(jint)startline
                            withInt:(jint)startcolumn
                            withInt:(jint)buffersize;

/*!
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                       withNSString:(NSString *)encoding;

/*!
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                       withNSString:(NSString *)encoding
                            withInt:(jint)startline
                            withInt:(jint)startcolumn;

/*!
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                       withNSString:(NSString *)encoding
                            withInt:(jint)startline
                            withInt:(jint)startcolumn
                            withInt:(jint)buffersize;

/*!
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoReader:(JavaIoReader *)dstream;

/*!
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoReader:(JavaIoReader *)dstream
                       withInt:(jint)startline
                       withInt:(jint)startcolumn;

/*!
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoReader:(JavaIoReader *)dstream
                       withInt:(jint)startline
                       withInt:(jint)startcolumn
                       withInt:(jint)buffersize;

- (void)setTabSizeWithInt:(jint)i;

#pragma mark Protected

- (void)AdjustBuffSize;

- (void)ExpandBuffWithBoolean:(jboolean)wrapAround;

- (void)FillBuff;

- (jchar)ReadByte;

- (void)UpdateLineColumnWithChar:(jchar)c;

#pragma mark Package-Private

- (jboolean)getTrackLineColumn;

+ (jint)hexvalWithChar:(jchar)c;

- (void)setTrackLineColumnWithBoolean:(jboolean)tlc;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CSSJavaCharStream)

J2OBJC_FIELD_SETTER(CSSJavaCharStream, bufline_, IOSIntArray *)
J2OBJC_FIELD_SETTER(CSSJavaCharStream, bufcolumn_, IOSIntArray *)
J2OBJC_FIELD_SETTER(CSSJavaCharStream, inputStream_, JavaIoReader *)
J2OBJC_FIELD_SETTER(CSSJavaCharStream, nextCharBuf_, IOSCharArray *)
J2OBJC_FIELD_SETTER(CSSJavaCharStream, buffer_, IOSCharArray *)

/*!
 @brief Whether parser is static.
 */
inline jboolean CSSJavaCharStream_get_staticFlag(void);
#define CSSJavaCharStream_staticFlag false
J2OBJC_STATIC_FIELD_CONSTANT(CSSJavaCharStream, staticFlag, jboolean)

FOUNDATION_EXPORT jint CSSJavaCharStream_hexvalWithChar_(jchar c);

FOUNDATION_EXPORT void CSSJavaCharStream_initPackagePrivateWithJavaIoReader_withInt_withInt_withInt_(CSSJavaCharStream *self, JavaIoReader *dstream, jint startline, jint startcolumn, jint buffersize);

FOUNDATION_EXPORT CSSJavaCharStream *new_CSSJavaCharStream_initPackagePrivateWithJavaIoReader_withInt_withInt_withInt_(JavaIoReader *dstream, jint startline, jint startcolumn, jint buffersize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CSSJavaCharStream *create_CSSJavaCharStream_initPackagePrivateWithJavaIoReader_withInt_withInt_withInt_(JavaIoReader *dstream, jint startline, jint startcolumn, jint buffersize);

FOUNDATION_EXPORT void CSSJavaCharStream_initPackagePrivateWithJavaIoReader_withInt_withInt_(CSSJavaCharStream *self, JavaIoReader *dstream, jint startline, jint startcolumn);

FOUNDATION_EXPORT CSSJavaCharStream *new_CSSJavaCharStream_initPackagePrivateWithJavaIoReader_withInt_withInt_(JavaIoReader *dstream, jint startline, jint startcolumn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CSSJavaCharStream *create_CSSJavaCharStream_initPackagePrivateWithJavaIoReader_withInt_withInt_(JavaIoReader *dstream, jint startline, jint startcolumn);

FOUNDATION_EXPORT void CSSJavaCharStream_initPackagePrivateWithJavaIoReader_(CSSJavaCharStream *self, JavaIoReader *dstream);

FOUNDATION_EXPORT CSSJavaCharStream *new_CSSJavaCharStream_initPackagePrivateWithJavaIoReader_(JavaIoReader *dstream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CSSJavaCharStream *create_CSSJavaCharStream_initPackagePrivateWithJavaIoReader_(JavaIoReader *dstream);

FOUNDATION_EXPORT void CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withNSString_withInt_withInt_withInt_(CSSJavaCharStream *self, JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn, jint buffersize);

FOUNDATION_EXPORT CSSJavaCharStream *new_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withNSString_withInt_withInt_withInt_(JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn, jint buffersize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CSSJavaCharStream *create_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withNSString_withInt_withInt_withInt_(JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn, jint buffersize);

FOUNDATION_EXPORT void CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_withInt_(CSSJavaCharStream *self, JavaIoInputStream *dstream, jint startline, jint startcolumn, jint buffersize);

FOUNDATION_EXPORT CSSJavaCharStream *new_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_withInt_(JavaIoInputStream *dstream, jint startline, jint startcolumn, jint buffersize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CSSJavaCharStream *create_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_withInt_(JavaIoInputStream *dstream, jint startline, jint startcolumn, jint buffersize);

FOUNDATION_EXPORT void CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withNSString_withInt_withInt_(CSSJavaCharStream *self, JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn);

FOUNDATION_EXPORT CSSJavaCharStream *new_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withNSString_withInt_withInt_(JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CSSJavaCharStream *create_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withNSString_withInt_withInt_(JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn);

FOUNDATION_EXPORT void CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_(CSSJavaCharStream *self, JavaIoInputStream *dstream, jint startline, jint startcolumn);

FOUNDATION_EXPORT CSSJavaCharStream *new_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_(JavaIoInputStream *dstream, jint startline, jint startcolumn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CSSJavaCharStream *create_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_(JavaIoInputStream *dstream, jint startline, jint startcolumn);

FOUNDATION_EXPORT void CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withNSString_(CSSJavaCharStream *self, JavaIoInputStream *dstream, NSString *encoding);

FOUNDATION_EXPORT CSSJavaCharStream *new_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withNSString_(JavaIoInputStream *dstream, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CSSJavaCharStream *create_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_withNSString_(JavaIoInputStream *dstream, NSString *encoding);

FOUNDATION_EXPORT void CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_(CSSJavaCharStream *self, JavaIoInputStream *dstream);

FOUNDATION_EXPORT CSSJavaCharStream *new_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_(JavaIoInputStream *dstream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CSSJavaCharStream *create_CSSJavaCharStream_initPackagePrivateWithJavaIoInputStream_(JavaIoInputStream *dstream);

J2OBJC_TYPE_LITERAL_HEADER(CSSJavaCharStream)

@compatibility_alias ComAsheraCssJavaCharStream CSSJavaCharStream;

#endif

#pragma pop_macro("INCLUDE_ALL_JavaCharStream")
