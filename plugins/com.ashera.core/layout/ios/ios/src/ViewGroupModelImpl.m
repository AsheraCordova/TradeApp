//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\ViewGroupModelImpl.java
//

#include "HasWidgets.h"
#include "IFragment.h"
#include "ILifeCycleDecorator.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IWidget.h"
#include "J2ObjC_source.h"
#include "PluginInvoker.h"
#include "ViewGroupModelImpl.h"
#include "ViewImpl.h"
#include "WidgetAttribute.h"
#include "WidgetFactory.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"


#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ASViewGroupModelImpl ()

- (instancetype)init;

+ (void)removeModelAtIndexWithASIWidget:(id<ASIWidget>)w
                                 withId:(id)objValue;

+ (void)addModelByIndexWithASIWidget:(id<ASIWidget>)w
                              withId:(id)objValue;

+ (void)addModelWithASIWidget:(id<ASIWidget>)w
                       withId:(id)objValue;

+ (void)removeModelByIdWithASIWidget:(id<ASIWidget>)w
                              withId:(id)objValue;

+ (void)setModelForWithASIWidget:(id<ASIWidget>)w
                          withId:(id)objValue;

+ (void)setModelIdPathWithASIWidget:(id<ASIWidget>)w
                       withNSString:(NSString *)strValue
                             withId:(id)objValue;

+ (id)getModelIdPathWithASIWidget:(id<ASIWidget>)w;

+ (void)addAllModelWithASIWidget:(id<ASIWidget>)w
                          withId:(id)objValue;

@end

__attribute__((unused)) static void ASViewGroupModelImpl_init(ASViewGroupModelImpl *self);

__attribute__((unused)) static ASViewGroupModelImpl *new_ASViewGroupModelImpl_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ASViewGroupModelImpl *create_ASViewGroupModelImpl_init(void);

__attribute__((unused)) static void ASViewGroupModelImpl_removeModelAtIndexWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_addModelByIndexWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_addModelWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_removeModelByIdWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_setModelForWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_setModelIdPathWithASIWidget_withNSString_withId_(id<ASIWidget> w, NSString *strValue, id objValue);

__attribute__((unused)) static id ASViewGroupModelImpl_getModelIdPathWithASIWidget_(id<ASIWidget> w);

__attribute__((unused)) static void ASViewGroupModelImpl_addAllModelWithASIWidget_withId_(id<ASIWidget> w, id objValue);

@interface ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal () {
 @public
  id<ASIWidget> widget_;
}

@end

J2OBJC_FIELD_SETTER(ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal, widget_, id<ASIWidget>)

@interface ASViewGroupModelImpl_ViewGroupModelBean () {
 @public
  ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *commandBuilder_ViewGroupModelBean_;
}

- (ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *)getBuilder;

@end

J2OBJC_FIELD_SETTER(ASViewGroupModelImpl_ViewGroupModelBean, commandBuilder_ViewGroupModelBean_, ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *)

__attribute__((unused)) static ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(ASViewGroupModelImpl_ViewGroupModelBean *self);

@implementation ASViewGroupModelImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASViewGroupModelImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)register__WithNSString:(NSString *)localName {
  ASViewGroupModelImpl_register__WithNSString_(localName);
}

+ (void)setAttributeWithASIWidget:(id<ASIWidget>)w
            withASWidgetAttribute:(ASWidgetAttribute *)key
                     withNSString:(NSString *)strValue
                           withId:(id)objValue
        withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ASViewGroupModelImpl_setAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, key, strValue, objValue, decorator);
}

+ (void)setChildAttributeWithASIWidget:(id<ASIWidget>)w
                 withASWidgetAttribute:(ASWidgetAttribute *)key
                                withId:(id)objValue
                                withId:(id)layoutParams {
  ASViewGroupModelImpl_setChildAttributeWithASIWidget_withASWidgetAttribute_withId_withId_(w, key, objValue, layoutParams);
}

+ (id)getAttributeWithASIWidget:(id<ASIWidget>)w
          withASWidgetAttribute:(ASWidgetAttribute *)key
      withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  return ASViewGroupModelImpl_getAttributeWithASIWidget_withASWidgetAttribute_withASILifeCycleDecorator_(w, key, decorator);
}

+ (id)getChildAttributeWithASIWidget:(id<ASIWidget>)w
               withASWidgetAttribute:(ASWidgetAttribute *)key {
  return ASViewGroupModelImpl_getChildAttributeWithASIWidget_withASWidgetAttribute_(w, key);
}

+ (void)removeModelAtIndexWithASIWidget:(id<ASIWidget>)w
                                 withId:(id)objValue {
  ASViewGroupModelImpl_removeModelAtIndexWithASIWidget_withId_(w, objValue);
}

+ (void)addModelByIndexWithASIWidget:(id<ASIWidget>)w
                              withId:(id)objValue {
  ASViewGroupModelImpl_addModelByIndexWithASIWidget_withId_(w, objValue);
}

+ (void)addModelWithASIWidget:(id<ASIWidget>)w
                       withId:(id)objValue {
  ASViewGroupModelImpl_addModelWithASIWidget_withId_(w, objValue);
}

+ (void)removeModelByIdWithASIWidget:(id<ASIWidget>)w
                              withId:(id)objValue {
  ASViewGroupModelImpl_removeModelByIdWithASIWidget_withId_(w, objValue);
}

+ (void)setModelForWithASIWidget:(id<ASIWidget>)w
                          withId:(id)objValue {
  ASViewGroupModelImpl_setModelForWithASIWidget_withId_(w, objValue);
}

+ (void)setModelIdPathWithASIWidget:(id<ASIWidget>)w
                       withNSString:(NSString *)strValue
                             withId:(id)objValue {
  ASViewGroupModelImpl_setModelIdPathWithASIWidget_withNSString_withId_(w, strValue, objValue);
}

+ (id)getModelIdPathWithASIWidget:(id<ASIWidget>)w {
  return ASViewGroupModelImpl_getModelIdPathWithASIWidget_(w);
}

+ (void)addAllModelWithASIWidget:(id<ASIWidget>)w
                          withId:(id)objValue {
  ASViewGroupModelImpl_addAllModelWithASIWidget_withId_(w, objValue);
}

+ (jboolean)isAttributeSupportedWithASWidgetAttribute:(ASWidgetAttribute *)key {
  return ASViewGroupModelImpl_isAttributeSupportedWithASWidgetAttribute_(key);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 12, 11, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 13, 11, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 14, 11, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 15, 11, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 16, 17, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0xa, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 20, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 21, 22, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(register__WithNSString:);
  methods[2].selector = @selector(setAttributeWithASIWidget:withASWidgetAttribute:withNSString:withId:withASILifeCycleDecorator:);
  methods[3].selector = @selector(setChildAttributeWithASIWidget:withASWidgetAttribute:withId:withId:);
  methods[4].selector = @selector(getAttributeWithASIWidget:withASWidgetAttribute:withASILifeCycleDecorator:);
  methods[5].selector = @selector(getChildAttributeWithASIWidget:withASWidgetAttribute:);
  methods[6].selector = @selector(removeModelAtIndexWithASIWidget:withId:);
  methods[7].selector = @selector(addModelByIndexWithASIWidget:withId:);
  methods[8].selector = @selector(addModelWithASIWidget:withId:);
  methods[9].selector = @selector(removeModelByIdWithASIWidget:withId:);
  methods[10].selector = @selector(setModelForWithASIWidget:withId:);
  methods[11].selector = @selector(setModelIdPathWithASIWidget:withNSString:withId:);
  methods[12].selector = @selector(getModelIdPathWithASIWidget:);
  methods[13].selector = @selector(addAllModelWithASIWidget:withId:);
  methods[14].selector = @selector(isAttributeSupportedWithASWidgetAttribute:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "register", "LNSString;", "setAttribute", "LASIWidget;LASWidgetAttribute;LNSString;LNSObject;LASILifeCycleDecorator;", "setChildAttribute", "LASIWidget;LASWidgetAttribute;LNSObject;LNSObject;", "getAttribute", "LASIWidget;LASWidgetAttribute;LASILifeCycleDecorator;", "getChildAttribute", "LASIWidget;LASWidgetAttribute;", "removeModelAtIndex", "LASIWidget;LNSObject;", "addModelByIndex", "addModel", "removeModelById", "setModelFor", "setModelIdPath", "LASIWidget;LNSString;LNSObject;", "getModelIdPath", "LASIWidget;", "addAllModel", "isAttributeSupported", "LASWidgetAttribute;", "LASViewGroupModelImpl_ViewGroupModelCommandBuilder;LASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal;LASViewGroupModelImpl_ViewGroupModelBean;" };
  static const J2ObjcClassInfo _ASViewGroupModelImpl = { "ViewGroupModelImpl", "com.ashera.layout", ptrTable, methods, NULL, 7, 0x1, 15, 0, -1, 23, -1, -1, -1 };
  return &_ASViewGroupModelImpl;
}

@end

void ASViewGroupModelImpl_init(ASViewGroupModelImpl *self) {
  NSObject_init(self);
}

ASViewGroupModelImpl *new_ASViewGroupModelImpl_init() {
  J2OBJC_NEW_IMPL(ASViewGroupModelImpl, init)
}

ASViewGroupModelImpl *create_ASViewGroupModelImpl_init() {
  J2OBJC_CREATE_IMPL(ASViewGroupModelImpl, init)
}

void ASViewGroupModelImpl_register__WithNSString_(NSString *localName) {
  ASViewGroupModelImpl_initialize();
  ASViewImpl_register__WithNSString_(localName);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"addModel"])) withTypeWithNSString:@"object"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"addAllModel"])) withTypeWithNSString:@"object"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"addModelByIndex"])) withTypeWithNSString:@"object"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"removeModelAtIndex"])) withTypeWithNSString:@"int"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"removeModelById"])) withTypeWithNSString:@"string"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"modelFor"])) withTypeWithNSString:@"string"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"modelIdPath"])) withTypeWithNSString:@"string"]);
}

void ASViewGroupModelImpl_setAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(id<ASIWidget> w, ASWidgetAttribute *key, NSString *strValue, id objValue, id<ASILifeCycleDecorator> decorator) {
  ASViewGroupModelImpl_initialize();
  ASViewImpl_setAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, key, strValue, objValue, decorator);
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"addModel", @"addAllModel", @"addModelByIndex", @"removeModelAtIndex", @"removeModelById", @"modelFor", @"modelIdPath" }, 7)) {
    case 0:
    {
      ASViewGroupModelImpl_addModelWithASIWidget_withId_(w, objValue);
    }
    break;
    case 1:
    {
      ASViewGroupModelImpl_addAllModelWithASIWidget_withId_(w, objValue);
    }
    break;
    case 2:
    {
      ASViewGroupModelImpl_addModelByIndexWithASIWidget_withId_(w, objValue);
    }
    break;
    case 3:
    {
      ASViewGroupModelImpl_removeModelAtIndexWithASIWidget_withId_(w, objValue);
    }
    break;
    case 4:
    {
      ASViewGroupModelImpl_removeModelByIdWithASIWidget_withId_(w, objValue);
    }
    break;
    case 5:
    {
      ASViewGroupModelImpl_setModelForWithASIWidget_withId_(w, objValue);
    }
    break;
    case 6:
    {
      ASViewGroupModelImpl_setModelIdPathWithASIWidget_withNSString_withId_(w, strValue, objValue);
    }
    break;
    default:
    break;
  }
}

void ASViewGroupModelImpl_setChildAttributeWithASIWidget_withASWidgetAttribute_withId_withId_(id<ASIWidget> w, ASWidgetAttribute *key, id objValue, id layoutParams) {
  ASViewGroupModelImpl_initialize();
}

id ASViewGroupModelImpl_getAttributeWithASIWidget_withASWidgetAttribute_withASILifeCycleDecorator_(id<ASIWidget> w, ASWidgetAttribute *key, id<ASILifeCycleDecorator> decorator) {
  ASViewGroupModelImpl_initialize();
  id attributeValue = ASViewImpl_getAttributeWithASIWidget_withASWidgetAttribute_withASILifeCycleDecorator_(w, key, decorator);
  if (attributeValue != nil) {
    return attributeValue;
  }
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"modelIdPath" }, 1)) {
    case 0:
    {
      return ASViewGroupModelImpl_getModelIdPathWithASIWidget_(w);
    }
  }
  return nil;
}

id ASViewGroupModelImpl_getChildAttributeWithASIWidget_withASWidgetAttribute_(id<ASIWidget> w, ASWidgetAttribute *key) {
  ASViewGroupModelImpl_initialize();
  return nil;
}

void ASViewGroupModelImpl_removeModelAtIndexWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) removeModelAtIndexWithInt:[((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue]];
}

void ASViewGroupModelImpl_addModelByIndexWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  id<JavaUtilMap> model = ASPluginInvoker_getMapWithId_(objValue);
  jint index = [((JavaLangInteger *) nil_chk(ASPluginInvoker_getIntWithId_([((id<JavaUtilMap>) nil_chk(model)) getWithId:@"index"]))) intValue];
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) addModelWithId:[model getWithId:@"data"] withInt:index];
}

void ASViewGroupModelImpl_addModelWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) addModelWithId:objValue];
}

void ASViewGroupModelImpl_removeModelByIdWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) removeModelByIdWithNSString:ASPluginInvoker_getStringWithId_(objValue)];
}

void ASViewGroupModelImpl_setModelForWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) setModelForWithNSString:(NSString *) cast_chk(objValue, [NSString class])];
}

void ASViewGroupModelImpl_setModelIdPathWithASIWidget_withNSString_withId_(id<ASIWidget> w, NSString *strValue, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASIWidget>) nil_chk(w)) setModelIdPathWithNSString:(NSString *) cast_chk(objValue, [NSString class])];
}

id ASViewGroupModelImpl_getModelIdPathWithASIWidget_(id<ASIWidget> w) {
  ASViewGroupModelImpl_initialize();
  return [((id<ASIWidget>) nil_chk(w)) getModelIdPath];
}

void ASViewGroupModelImpl_addAllModelWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) addAllModelWithId:objValue];
}

jboolean ASViewGroupModelImpl_isAttributeSupportedWithASWidgetAttribute_(ASWidgetAttribute *key) {
  ASViewGroupModelImpl_initialize();
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"addModel", @"addAllModel", @"addModelByIndex", @"removeModelAtIndex", @"removeModelById", @"modelFor", @"modelIdPath" }, 7)) {
    case 0:
    {
      return true;
    }
    case 1:
    {
      return true;
    }
    case 2:
    {
      return true;
    }
    case 3:
    {
      return true;
    }
    case 4:
    {
      return true;
    }
    case 5:
    {
      return true;
    }
    case 6:
    {
      return true;
    }
    default:
    break;
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASViewGroupModelImpl)

@implementation ASViewGroupModelImpl_ViewGroupModelCommandBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASViewGroupModelImpl_ViewGroupModelCommandBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)addModelWithId:(id)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"addModel"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (id)addAllModelWithId:(id)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"addAllModel"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (id)addModelByIndexWithId:(id)value
                     withId:(id)index {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"addModelByIndex"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  id<JavaUtilMap> wrapper = new_JavaUtilHashMap_init();
  (void) [wrapper putWithId:@"index" withId:index];
  (void) [wrapper putWithId:@"data" withId:value];
  (void) [attrs putWithId:@"value" withId:wrapper];
  return self;
}

- (id)removeModelAtIndexWithInt:(jint)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"removeModelAtIndex"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangInteger_valueOfWithInt_(value)];
  return self;
}

- (id)removeModelByIdWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"removeModelById"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (id)setModelForWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"modelFor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (id)tryGetModelIdPath {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"modelIdPath"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getModelIdPath {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"modelIdPath"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (id)setModelIdPathWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"modelIdPath"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "LNSObject;", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "LNSObject;", 0x1, 13, 11, -1, 12, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 14, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 15, 11, -1, 12, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addModelWithId:);
  methods[2].selector = @selector(addAllModelWithId:);
  methods[3].selector = @selector(addModelByIndexWithId:withId:);
  methods[4].selector = @selector(removeModelAtIndexWithInt:);
  methods[5].selector = @selector(removeModelByIdWithNSString:);
  methods[6].selector = @selector(setModelForWithNSString:);
  methods[7].selector = @selector(tryGetModelIdPath);
  methods[8].selector = @selector(getModelIdPath);
  methods[9].selector = @selector(setModelIdPathWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "addModel", "LNSObject;", "(Ljava/lang/Object;)TT;", "addAllModel", "addModelByIndex", "LNSObject;LNSObject;", "(Ljava/lang/Object;Ljava/lang/Object;)TT;", "removeModelAtIndex", "I", "(I)TT;", "removeModelById", "LNSString;", "(Ljava/lang/String;)TT;", "setModelFor", "()TT;", "setModelIdPath", "LASViewGroupModelImpl;", "<T:Ljava/lang/Object;>Lcom/ashera/layout/ViewImpl$ViewCommandBuilder<TT;>;" };
  static const J2ObjcClassInfo _ASViewGroupModelImpl_ViewGroupModelCommandBuilder = { "ViewGroupModelCommandBuilder", "com.ashera.layout", ptrTable, methods, NULL, 7, 0x409, 10, 0, 16, -1, -1, 17, -1 };
  return &_ASViewGroupModelImpl_ViewGroupModelCommandBuilder;
}

@end

void ASViewGroupModelImpl_ViewGroupModelCommandBuilder_init(ASViewGroupModelImpl_ViewGroupModelCommandBuilder *self) {
  ASViewImpl_ViewCommandBuilder_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASViewGroupModelImpl_ViewGroupModelCommandBuilder)

@implementation ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget {
  ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal_initWithASIWidget_(self, widget);
  return self;
}

- (ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *)executeWithBoolean:(jboolean)setter {
  if (setter) {
    [((id<ASIWidget>) nil_chk(widget_)) executeCommandWithJavaUtilMap:command_ withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
    [((id<ASIFragment>) nil_chk([((id<ASIWidget>) nil_chk(widget_)) getFragment])) remeasure];
  }
  [((id<ASIWidget>) nil_chk(widget_)) executeCommandWithJavaUtilMap:command_ withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal;", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASIWidget:);
  methods[1].selector = @selector(executeWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "widget_", "LASIWidget;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASIWidget;", "execute", "Z", "LASViewGroupModelImpl;", "Lcom/ashera/layout/ViewGroupModelImpl$ViewGroupModelCommandBuilder<Lcom/ashera/layout/ViewGroupModelImpl$ViewGroupModelCommandBuilderInternal;>;" };
  static const J2ObjcClassInfo _ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal = { "ViewGroupModelCommandBuilderInternal", "com.ashera.layout", ptrTable, methods, fields, 7, 0x8, 2, 1, 3, -1, -1, 4, -1 };
  return &_ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal;
}

@end

void ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal_initWithASIWidget_(ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *self, id<ASIWidget> widget) {
  ASViewGroupModelImpl_ViewGroupModelCommandBuilder_init(self);
  self->widget_ = widget;
}

ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *new_ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal_initWithASIWidget_(id<ASIWidget> widget) {
  J2OBJC_NEW_IMPL(ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal, initWithASIWidget_, widget)
}

ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *create_ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal_initWithASIWidget_(id<ASIWidget> widget) {
  J2OBJC_CREATE_IMPL(ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal, initWithASIWidget_, widget)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal)

@implementation ASViewGroupModelImpl_ViewGroupModelBean

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget {
  ASViewGroupModelImpl_ViewGroupModelBean_initWithASIWidget_(self, widget);
  return self;
}

- (ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *)getBuilder {
  return ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(self);
}

- (void)addModelWithId:(id)value {
  (void) [((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk(ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(self))) reset])) addModelWithId:value])) executeWithBoolean:true];
}

- (void)addAllModelWithId:(id)value {
  (void) [((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk(ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(self))) reset])) addAllModelWithId:value])) executeWithBoolean:true];
}

- (void)addModelByIndexWithId:(id)value
                       withId:(id)index {
  (void) [((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk(ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(self))) reset])) addModelByIndexWithId:value withId:index])) executeWithBoolean:true];
}

- (void)removeModelAtIndexWithInt:(jint)value {
  (void) [((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk(ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(self))) reset])) removeModelAtIndexWithInt:value])) executeWithBoolean:true];
}

- (void)removeModelByIdWithNSString:(NSString *)value {
  (void) [((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk(ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(self))) reset])) removeModelByIdWithNSString:value])) executeWithBoolean:true];
}

- (void)setModelForWithNSString:(NSString *)value {
  (void) [((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk(ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(self))) reset])) setModelForWithNSString:value])) executeWithBoolean:true];
}

- (id)getModelIdPath {
  return [((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk(ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(self))) reset])) tryGetModelIdPath])) executeWithBoolean:false])) getModelIdPath];
}

- (void)setModelIdPathWithNSString:(NSString *)value {
  (void) [((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk([((ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *) nil_chk(ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(self))) reset])) setModelIdPathWithNSString:value])) executeWithBoolean:true];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASIWidget:);
  methods[1].selector = @selector(getBuilder);
  methods[2].selector = @selector(addModelWithId:);
  methods[3].selector = @selector(addAllModelWithId:);
  methods[4].selector = @selector(addModelByIndexWithId:withId:);
  methods[5].selector = @selector(removeModelAtIndexWithInt:);
  methods[6].selector = @selector(removeModelByIdWithNSString:);
  methods[7].selector = @selector(setModelForWithNSString:);
  methods[8].selector = @selector(getModelIdPath);
  methods[9].selector = @selector(setModelIdPathWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "commandBuilder_ViewGroupModelBean_", "LASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal;", .constantValue.asLong = 0, 0x2, 12, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASIWidget;", "addModel", "LNSObject;", "addAllModel", "addModelByIndex", "LNSObject;LNSObject;", "removeModelAtIndex", "I", "removeModelById", "LNSString;", "setModelFor", "setModelIdPath", "commandBuilder", "LASViewGroupModelImpl;" };
  static const J2ObjcClassInfo _ASViewGroupModelImpl_ViewGroupModelBean = { "ViewGroupModelBean", "com.ashera.layout", ptrTable, methods, fields, 7, 0x9, 10, 1, 13, -1, -1, -1, -1 };
  return &_ASViewGroupModelImpl_ViewGroupModelBean;
}

@end

void ASViewGroupModelImpl_ViewGroupModelBean_initWithASIWidget_(ASViewGroupModelImpl_ViewGroupModelBean *self, id<ASIWidget> widget) {
  ASViewImpl_ViewBean_initWithASIWidget_(self, widget);
  self->commandBuilder_ViewGroupModelBean_ = new_ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal_initWithASIWidget_(widget);
}

ASViewGroupModelImpl_ViewGroupModelBean *new_ASViewGroupModelImpl_ViewGroupModelBean_initWithASIWidget_(id<ASIWidget> widget) {
  J2OBJC_NEW_IMPL(ASViewGroupModelImpl_ViewGroupModelBean, initWithASIWidget_, widget)
}

ASViewGroupModelImpl_ViewGroupModelBean *create_ASViewGroupModelImpl_ViewGroupModelBean_initWithASIWidget_(id<ASIWidget> widget) {
  J2OBJC_CREATE_IMPL(ASViewGroupModelImpl_ViewGroupModelBean, initWithASIWidget_, widget)
}

ASViewGroupModelImpl_ViewGroupModelCommandBuilderInternal *ASViewGroupModelImpl_ViewGroupModelBean_getBuilder(ASViewGroupModelImpl_ViewGroupModelBean *self) {
  return self->commandBuilder_ViewGroupModelBean_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASViewGroupModelImpl_ViewGroupModelBean)
