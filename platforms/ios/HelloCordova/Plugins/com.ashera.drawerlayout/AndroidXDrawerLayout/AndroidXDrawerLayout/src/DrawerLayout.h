//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXDrawerLayout\src\main\java\androidx\drawerlayout\widget\DrawerLayout.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DrawerLayout")
#ifdef RESTRICT_DrawerLayout
#define INCLUDE_ALL_DrawerLayout 0
#else
#define INCLUDE_ALL_DrawerLayout 1
#endif
#undef RESTRICT_DrawerLayout

#if !defined (ADXDrawerLayout_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout))
#define ADXDrawerLayout_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup 1
#include "ViewGroup.h"

@class ADView;
@protocol ADXDrawerLayout_DrawerListener;

@interface ADXDrawerLayout : ADViewGroup

#pragma mark Public

- (instancetype)init;

- (void)addDrawerListenerWithADXDrawerLayout_DrawerListener:(id<ADXDrawerLayout_DrawerListener>)listener;

- (void)closeDrawerWithInt:(jint)gravity;

- (void)closeDrawerWithInt:(jint)gravity
               withBoolean:(jboolean)animate;

- (void)closeDrawerWithADView:(ADView *)drawerView;

- (void)closeDrawerWithADView:(ADView *)drawerView
                  withBoolean:(jboolean)animate;

- (jint)getDrawerLockModeWithInt:(jint)edgeGravity;

- (jint)getDrawerLockModeWithADView:(ADView *)drawerView;

- (jboolean)isDrawerOpenWithInt:(jint)drawerGravity;

- (jboolean)isDrawerOpenWithADView:(ADView *)drawer;

- (jboolean)isOpeningWithADView:(ADView *)drawerView;

- (jboolean)isViewContentViewWithADView:(ADView *)view;

- (void)moveDrawerViewToOffsetWithADView:(ADView *)drawerView
                               withFloat:(jfloat)slideOffset;

- (void)onViewPositionChangedWithADView:(ADView *)changedView
                                withInt:(jint)left
                                withInt:(jint)top
                                withInt:(jint)dx
                                withInt:(jint)dy;

- (void)openDrawerWithInt:(jint)gravity;

- (void)openDrawerWithInt:(jint)gravity
              withBoolean:(jboolean)animate;

- (void)openDrawerWithADView:(ADView *)drawerView;

- (void)openDrawerWithADView:(ADView *)drawerView
                 withBoolean:(jboolean)animate;

- (void)removeDrawerListenerWithADXDrawerLayout_DrawerListener:(id<ADXDrawerLayout_DrawerListener>)listener;

- (jboolean)requiresToBeOnScreenWithADView:(ADView *)view;

- (void)setDrawerListenerWithADXDrawerLayout_DrawerListener:(id<ADXDrawerLayout_DrawerListener>)listener;

- (void)setDrawerLockModeWithInt:(jint)lockMode;

- (void)setDrawerLockModeWithInt:(jint)lockMode
                         withInt:(jint)edgeGravity;

- (void)setDrawerLockModeWithInt:(jint)lockMode
                      withADView:(ADView *)drawerView;

- (void)smoothSlideViewToWithADView:(ADView *)drawerView
                            withInt:(jint)x
                            withInt:(jint)y;

- (void)updateDrawerViewStateWithInt:(jint)activeState
                          withADView:(ADView *)activeDrawer;

#pragma mark Protected

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b;

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

#pragma mark Package-Private

- (jboolean)checkDrawerViewAbsoluteGravityWithADView:(ADView *)drawerView
                                             withInt:(jint)checkFor;

- (void)dispatchOnDrawerClosedWithADView:(ADView *)drawerView;

- (void)dispatchOnDrawerOpenedWithADView:(ADView *)drawerView;

- (void)dispatchOnDrawerSlideWithADView:(ADView *)drawerView
                              withFloat:(jfloat)slideOffset;

- (ADView *)findDrawerWithGravityWithInt:(jint)gravity;

- (jint)getDrawerViewAbsoluteGravityWithADView:(ADView *)drawerView;

- (jfloat)getDrawerViewOffsetWithADView:(ADView *)drawerView;

+ (NSString *)gravityToStringWithInt:(jint)gravity;

- (jboolean)isContentViewWithADView:(ADView *)child;

- (jboolean)isDrawerViewWithADView:(ADView *)child;

- (void)moveDrawerToOffsetWithADView:(ADView *)drawerView
                           withFloat:(jfloat)slideOffset;

- (void)setDrawerViewOffsetWithADView:(ADView *)drawerView
                            withFloat:(jfloat)slideOffset;

- (void)setFlagStateOpenedWithADView:(ADView *)drawerView;

- (void)updateDrawerStateWithInt:(jint)activeState
                      withADView:(ADView *)activeDrawer;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout)

inline jint ADXDrawerLayout_get_STATE_IDLE(void);
#define ADXDrawerLayout_STATE_IDLE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, STATE_IDLE, jint)

inline jint ADXDrawerLayout_get_STATE_DRAGGING(void);
#define ADXDrawerLayout_STATE_DRAGGING 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, STATE_DRAGGING, jint)

inline jint ADXDrawerLayout_get_STATE_SETTLING(void);
#define ADXDrawerLayout_STATE_SETTLING 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, STATE_SETTLING, jint)

inline jint ADXDrawerLayout_get_LOCK_MODE_UNLOCKED(void);
#define ADXDrawerLayout_LOCK_MODE_UNLOCKED 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, LOCK_MODE_UNLOCKED, jint)

inline jint ADXDrawerLayout_get_LOCK_MODE_LOCKED_CLOSED(void);
#define ADXDrawerLayout_LOCK_MODE_LOCKED_CLOSED 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, LOCK_MODE_LOCKED_CLOSED, jint)

inline jint ADXDrawerLayout_get_LOCK_MODE_LOCKED_OPEN(void);
#define ADXDrawerLayout_LOCK_MODE_LOCKED_OPEN 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, LOCK_MODE_LOCKED_OPEN, jint)

inline jint ADXDrawerLayout_get_LOCK_MODE_UNDEFINED(void);
#define ADXDrawerLayout_LOCK_MODE_UNDEFINED 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, LOCK_MODE_UNDEFINED, jint)

inline jboolean ADXDrawerLayout_get_CAN_HIDE_DESCENDANTS(void);
#define ADXDrawerLayout_CAN_HIDE_DESCENDANTS true
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout, CAN_HIDE_DESCENDANTS, jboolean)

FOUNDATION_EXPORT NSString *ADXDrawerLayout_gravityToStringWithInt_(jint gravity);

FOUNDATION_EXPORT void ADXDrawerLayout_init(ADXDrawerLayout *self);

FOUNDATION_EXPORT ADXDrawerLayout *new_ADXDrawerLayout_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout *create_ADXDrawerLayout_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout)

@compatibility_alias AndroidxDrawerlayoutWidgetDrawerLayout ADXDrawerLayout;

#endif

#if !defined (ADXDrawerLayout_DrawerListener_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout_DrawerListener))
#define ADXDrawerLayout_DrawerListener_

@class ADView;

@protocol ADXDrawerLayout_DrawerListener < JavaObject >

- (void)onDrawerSlideWithADView:(ADView *)drawerView
                      withFloat:(jfloat)slideOffset;

- (void)onDrawerOpenedWithADView:(ADView *)drawerView;

- (void)onDrawerClosedWithADView:(ADView *)drawerView;

- (void)onDrawerStateChangedWithInt:(jint)newState;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout_DrawerListener)

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout_DrawerListener)

#endif

#if !defined (ADXDrawerLayout_LayoutParams_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout_LayoutParams))
#define ADXDrawerLayout_LayoutParams_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup_MarginLayoutParams 1
#include "ViewGroup.h"

@class ADViewGroup_LayoutParams;

@interface ADXDrawerLayout_LayoutParams : ADViewGroup_MarginLayoutParams {
 @public
  jint gravity_;
  jfloat onScreen_;
  jboolean isPeeking_;
  jint openState_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height;

- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height
                    withInt:(jint)gravity;

- (instancetype)initWithADXDrawerLayout_LayoutParams:(ADXDrawerLayout_LayoutParams *)source;

- (instancetype)initWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)source;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithADViewGroup_MarginLayoutParams:(ADViewGroup_MarginLayoutParams *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout_LayoutParams)

FOUNDATION_EXPORT void ADXDrawerLayout_LayoutParams_initWithInt_withInt_(ADXDrawerLayout_LayoutParams *self, jint width, jint height);

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *new_ADXDrawerLayout_LayoutParams_initWithInt_withInt_(jint width, jint height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *create_ADXDrawerLayout_LayoutParams_initWithInt_withInt_(jint width, jint height);

FOUNDATION_EXPORT void ADXDrawerLayout_LayoutParams_initWithInt_withInt_withInt_(ADXDrawerLayout_LayoutParams *self, jint width, jint height, jint gravity);

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *new_ADXDrawerLayout_LayoutParams_initWithInt_withInt_withInt_(jint width, jint height, jint gravity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *create_ADXDrawerLayout_LayoutParams_initWithInt_withInt_withInt_(jint width, jint height, jint gravity);

FOUNDATION_EXPORT void ADXDrawerLayout_LayoutParams_initWithADXDrawerLayout_LayoutParams_(ADXDrawerLayout_LayoutParams *self, ADXDrawerLayout_LayoutParams *source);

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *new_ADXDrawerLayout_LayoutParams_initWithADXDrawerLayout_LayoutParams_(ADXDrawerLayout_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *create_ADXDrawerLayout_LayoutParams_initWithADXDrawerLayout_LayoutParams_(ADXDrawerLayout_LayoutParams *source);

FOUNDATION_EXPORT void ADXDrawerLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADXDrawerLayout_LayoutParams *self, ADViewGroup_LayoutParams *source);

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *new_ADXDrawerLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_LayoutParams *create_ADXDrawerLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *source);

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout_LayoutParams)

#endif

#if !defined (ADXDrawerLayout_ViewDragHelper_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout_ViewDragHelper))
#define ADXDrawerLayout_ViewDragHelper_

@class ADContext;
@class ADView;
@class ADXDrawerLayout;

@interface ADXDrawerLayout_ViewDragHelper : NSObject

#pragma mark Public

- (instancetype)initWithADXDrawerLayout:(ADXDrawerLayout *)outer$
                          withADContext:(ADContext *)context;

- (void)cancel;

- (jint)getDefaultEdgeSize;

- (jint)getViewDragState;

- (void)setEdgeSizeWithInt:(jint)size;

- (void)smoothSlideViewToWithADView:(ADView *)drawerView
                            withInt:(jint)x
                            withInt:(jint)y;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout_ViewDragHelper)

inline jint ADXDrawerLayout_ViewDragHelper_get_STATE_IDLE(void);
#define ADXDrawerLayout_ViewDragHelper_STATE_IDLE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout_ViewDragHelper, STATE_IDLE, jint)

inline jint ADXDrawerLayout_ViewDragHelper_get_STATE_DRAGGING(void);
#define ADXDrawerLayout_ViewDragHelper_STATE_DRAGGING 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout_ViewDragHelper, STATE_DRAGGING, jint)

inline jint ADXDrawerLayout_ViewDragHelper_get_STATE_SETTLING(void);
#define ADXDrawerLayout_ViewDragHelper_STATE_SETTLING 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXDrawerLayout_ViewDragHelper, STATE_SETTLING, jint)

FOUNDATION_EXPORT void ADXDrawerLayout_ViewDragHelper_initWithADXDrawerLayout_withADContext_(ADXDrawerLayout_ViewDragHelper *self, ADXDrawerLayout *outer$, ADContext *context);

FOUNDATION_EXPORT ADXDrawerLayout_ViewDragHelper *new_ADXDrawerLayout_ViewDragHelper_initWithADXDrawerLayout_withADContext_(ADXDrawerLayout *outer$, ADContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_ViewDragHelper *create_ADXDrawerLayout_ViewDragHelper_initWithADXDrawerLayout_withADContext_(ADXDrawerLayout *outer$, ADContext *context);

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout_ViewDragHelper)

#endif

#if !defined (ADXDrawerLayout_WindowInsetsCompat_) && (INCLUDE_ALL_DrawerLayout || defined(INCLUDE_ADXDrawerLayout_WindowInsetsCompat))
#define ADXDrawerLayout_WindowInsetsCompat_

@class ADInsets;
@class ADXDrawerLayout;

@interface ADXDrawerLayout_WindowInsetsCompat : NSObject

#pragma mark Public

- (ADInsets *)getSystemGestureInsets;

- (jint)getSystemWindowInsetBottom;

- (jint)getSystemWindowInsetLeft;

- (jint)getSystemWindowInsetRight;

- (jint)getSystemWindowInsetTop;

- (ADXDrawerLayout_WindowInsetsCompat *)replaceSystemWindowInsetsWithInt:(jint)systemWindowInsetLeft
                                                                 withInt:(jint)systemWindowInsetTop
                                                                 withInt:(jint)systemWindowInsetRight
                                                                 withInt:(jint)systemWindowInsetBottom;

#pragma mark Package-Private

- (instancetype)initWithADXDrawerLayout:(ADXDrawerLayout *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDrawerLayout_WindowInsetsCompat)

FOUNDATION_EXPORT void ADXDrawerLayout_WindowInsetsCompat_initWithADXDrawerLayout_(ADXDrawerLayout_WindowInsetsCompat *self, ADXDrawerLayout *outer$);

FOUNDATION_EXPORT ADXDrawerLayout_WindowInsetsCompat *new_ADXDrawerLayout_WindowInsetsCompat_initWithADXDrawerLayout_(ADXDrawerLayout *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDrawerLayout_WindowInsetsCompat *create_ADXDrawerLayout_WindowInsetsCompat_initWithADXDrawerLayout_(ADXDrawerLayout *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADXDrawerLayout_WindowInsetsCompat)

#endif

#pragma pop_macro("INCLUDE_ALL_DrawerLayout")
