//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\LayoutNativeVars.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_LayoutNativeVars")
#ifdef RESTRICT_LayoutNativeVars
#define INCLUDE_ALL_LayoutNativeVars 0
#else
#define INCLUDE_ALL_LayoutNativeVars 1
#endif
#undef RESTRICT_LayoutNativeVars

#if !defined (ASLayoutNativeVars_) && (INCLUDE_ALL_LayoutNativeVars || defined(INCLUDE_ASLayoutNativeVars))
#define ASLayoutNativeVars_

@interface ASLayoutNativeVars : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ASLayoutNativeVars)

inline jint ASLayoutNativeVars_get_NSLineBreakByMarquee(void);
inline jint ASLayoutNativeVars_set_NSLineBreakByMarquee(jint value);
inline jint *ASLayoutNativeVars_getRef_NSLineBreakByMarquee(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_NSLineBreakByMarquee;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, NSLineBreakByMarquee, jint)

inline jint ASLayoutNativeVars_get_UIFontDescriptorTraitItalic(void);
inline jint ASLayoutNativeVars_set_UIFontDescriptorTraitItalic(jint value);
inline jint *ASLayoutNativeVars_getRef_UIFontDescriptorTraitItalic(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIFontDescriptorTraitItalic;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIFontDescriptorTraitItalic, jint)

inline jint ASLayoutNativeVars_get_UIFontDescriptorTraitBold(void);
inline jint ASLayoutNativeVars_set_UIFontDescriptorTraitBold(jint value);
inline jint *ASLayoutNativeVars_getRef_UIFontDescriptorTraitBold(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIFontDescriptorTraitBold;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIFontDescriptorTraitBold, jint)

inline jint ASLayoutNativeVars_get_NSLineBreakByTruncatingTail(void);
inline jint ASLayoutNativeVars_set_NSLineBreakByTruncatingTail(jint value);
inline jint *ASLayoutNativeVars_getRef_NSLineBreakByTruncatingTail(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_NSLineBreakByTruncatingTail;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, NSLineBreakByTruncatingTail, jint)

inline jint ASLayoutNativeVars_get_NSLineBreakByTruncatingMiddle(void);
inline jint ASLayoutNativeVars_set_NSLineBreakByTruncatingMiddle(jint value);
inline jint *ASLayoutNativeVars_getRef_NSLineBreakByTruncatingMiddle(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_NSLineBreakByTruncatingMiddle;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, NSLineBreakByTruncatingMiddle, jint)

inline jint ASLayoutNativeVars_get_NSLineBreakByClipping(void);
inline jint ASLayoutNativeVars_set_NSLineBreakByClipping(jint value);
inline jint *ASLayoutNativeVars_getRef_NSLineBreakByClipping(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_NSLineBreakByClipping;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, NSLineBreakByClipping, jint)

inline jint ASLayoutNativeVars_get_NSLineBreakByTruncatingHead(void);
inline jint ASLayoutNativeVars_set_NSLineBreakByTruncatingHead(jint value);
inline jint *ASLayoutNativeVars_getRef_NSLineBreakByTruncatingHead(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_NSLineBreakByTruncatingHead;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, NSLineBreakByTruncatingHead, jint)

inline jint ASLayoutNativeVars_get_NSTextAlignmentJustified(void);
inline jint ASLayoutNativeVars_set_NSTextAlignmentJustified(jint value);
inline jint *ASLayoutNativeVars_getRef_NSTextAlignmentJustified(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_NSTextAlignmentJustified;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, NSTextAlignmentJustified, jint)

inline jint ASLayoutNativeVars_get_NSTextAlignmentLeft(void);
inline jint ASLayoutNativeVars_set_NSTextAlignmentLeft(jint value);
inline jint *ASLayoutNativeVars_getRef_NSTextAlignmentLeft(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_NSTextAlignmentLeft;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, NSTextAlignmentLeft, jint)

inline jint ASLayoutNativeVars_get_kCGBlendModeNotSupported(void);
inline jint ASLayoutNativeVars_set_kCGBlendModeNotSupported(jint value);
inline jint *ASLayoutNativeVars_getRef_kCGBlendModeNotSupported(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_kCGBlendModeNotSupported;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, kCGBlendModeNotSupported, jint)

inline jint ASLayoutNativeVars_get_kCGBlendModeMultiply(void);
inline jint ASLayoutNativeVars_set_kCGBlendModeMultiply(jint value);
inline jint *ASLayoutNativeVars_getRef_kCGBlendModeMultiply(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_kCGBlendModeMultiply;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, kCGBlendModeMultiply, jint)

inline jint ASLayoutNativeVars_get_kCGBlendModeSourceAtop(void);
inline jint ASLayoutNativeVars_set_kCGBlendModeSourceAtop(jint value);
inline jint *ASLayoutNativeVars_getRef_kCGBlendModeSourceAtop(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_kCGBlendModeSourceAtop;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, kCGBlendModeSourceAtop, jint)

inline jint ASLayoutNativeVars_get_kCGBlendModeSourceIn(void);
inline jint ASLayoutNativeVars_set_kCGBlendModeSourceIn(jint value);
inline jint *ASLayoutNativeVars_getRef_kCGBlendModeSourceIn(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_kCGBlendModeSourceIn;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, kCGBlendModeSourceIn, jint)

inline jint ASLayoutNativeVars_get_kCGBlendModeNormal(void);
inline jint ASLayoutNativeVars_set_kCGBlendModeNormal(jint value);
inline jint *ASLayoutNativeVars_getRef_kCGBlendModeNormal(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_kCGBlendModeNormal;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, kCGBlendModeNormal, jint)

inline jint ASLayoutNativeVars_get_kCGBlendModeOverlay(void);
inline jint ASLayoutNativeVars_set_kCGBlendModeOverlay(jint value);
inline jint *ASLayoutNativeVars_getRef_kCGBlendModeOverlay(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_kCGBlendModeOverlay;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, kCGBlendModeOverlay, jint)

inline jint ASLayoutNativeVars_get_kCGBlendModeScreen(void);
inline jint ASLayoutNativeVars_set_kCGBlendModeScreen(jint value);
inline jint *ASLayoutNativeVars_getRef_kCGBlendModeScreen(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_kCGBlendModeScreen;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, kCGBlendModeScreen, jint)

inline jint ASLayoutNativeVars_get_UIDataDetectorTypeLink(void);
inline jint ASLayoutNativeVars_set_UIDataDetectorTypeLink(jint value);
inline jint *ASLayoutNativeVars_getRef_UIDataDetectorTypeLink(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIDataDetectorTypeLink;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIDataDetectorTypeLink, jint)

inline jint ASLayoutNativeVars_get_UIDataDetectorTypeAll(void);
inline jint ASLayoutNativeVars_set_UIDataDetectorTypeAll(jint value);
inline jint *ASLayoutNativeVars_getRef_UIDataDetectorTypeAll(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIDataDetectorTypeAll;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIDataDetectorTypeAll, jint)

inline jint ASLayoutNativeVars_get_UIDataDetectorTypeAddress(void);
inline jint ASLayoutNativeVars_set_UIDataDetectorTypeAddress(jint value);
inline jint *ASLayoutNativeVars_getRef_UIDataDetectorTypeAddress(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIDataDetectorTypeAddress;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIDataDetectorTypeAddress, jint)

inline jint ASLayoutNativeVars_get_UIDataDetectorTypeNone(void);
inline jint ASLayoutNativeVars_set_UIDataDetectorTypeNone(jint value);
inline jint *ASLayoutNativeVars_getRef_UIDataDetectorTypeNone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIDataDetectorTypeNone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIDataDetectorTypeNone, jint)

inline jint ASLayoutNativeVars_get_UIDataDetectorTypePhoneNumber(void);
inline jint ASLayoutNativeVars_set_UIDataDetectorTypePhoneNumber(jint value);
inline jint *ASLayoutNativeVars_getRef_UIDataDetectorTypePhoneNumber(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIDataDetectorTypePhoneNumber;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIDataDetectorTypePhoneNumber, jint)

inline jint ASLayoutNativeVars_get_UIViewContentModeCenter(void);
inline jint ASLayoutNativeVars_set_UIViewContentModeCenter(jint value);
inline jint *ASLayoutNativeVars_getRef_UIViewContentModeCenter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIViewContentModeCenter;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIViewContentModeCenter, jint)

inline jint ASLayoutNativeVars_get_UIViewContentModeScaleAspectFill(void);
inline jint ASLayoutNativeVars_set_UIViewContentModeScaleAspectFill(jint value);
inline jint *ASLayoutNativeVars_getRef_UIViewContentModeScaleAspectFill(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIViewContentModeScaleAspectFill;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIViewContentModeScaleAspectFill, jint)

inline jint ASLayoutNativeVars_get_UIViewContentModeScaleAspectFit(void);
inline jint ASLayoutNativeVars_set_UIViewContentModeScaleAspectFit(jint value);
inline jint *ASLayoutNativeVars_getRef_UIViewContentModeScaleAspectFit(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIViewContentModeScaleAspectFit;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIViewContentModeScaleAspectFit, jint)

inline jint ASLayoutNativeVars_get_UIViewContentModeScaleToFill(void);
inline jint ASLayoutNativeVars_set_UIViewContentModeScaleToFill(jint value);
inline jint *ASLayoutNativeVars_getRef_UIViewContentModeScaleToFill(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIViewContentModeScaleToFill;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIViewContentModeScaleToFill, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitAdjustable(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitAdjustable(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitAdjustable(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitAdjustable;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitAdjustable, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitAllowsDirectInteraction(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitAllowsDirectInteraction(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitAllowsDirectInteraction(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitAllowsDirectInteraction;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitAllowsDirectInteraction, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitButton(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitButton(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitButton(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitButton;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitButton, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitCausesPageTurn(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitCausesPageTurn(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitCausesPageTurn(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitCausesPageTurn;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitCausesPageTurn, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitHeader(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitHeader(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitHeader(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitHeader;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitHeader, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitImage(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitImage(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitImage(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitImage;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitImage, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitKeyboardKey(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitKeyboardKey(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitKeyboardKey(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitKeyboardKey;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitKeyboardKey, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitLink(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitLink(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitLink(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitLink;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitLink, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitNone(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitNone(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitNone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitNone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitNone, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitNotEnabled(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitNotEnabled(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitNotEnabled(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitNotEnabled;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitNotEnabled, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitPlaysSound(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitPlaysSound(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitPlaysSound(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitPlaysSound;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitPlaysSound, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitSearchField(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitSearchField(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitSearchField(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitSearchField;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitSearchField, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitSelected(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitSelected(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitSelected(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitSelected;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitSelected, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitStartsMediaSession(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitStartsMediaSession(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitStartsMediaSession(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitStartsMediaSession;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitStartsMediaSession, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitStaticText(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitStaticText(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitStaticText(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitStaticText;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitStaticText, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitSummaryElement(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitSummaryElement(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitSummaryElement(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitSummaryElement;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitSummaryElement, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitTabBar(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitTabBar(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitTabBar(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitTabBar;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitTabBar, jint)

inline jint ASLayoutNativeVars_get_UIAccessibilityTraitUpdatesFrequently(void);
inline jint ASLayoutNativeVars_set_UIAccessibilityTraitUpdatesFrequently(jint value);
inline jint *ASLayoutNativeVars_getRef_UIAccessibilityTraitUpdatesFrequently(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIAccessibilityTraitUpdatesFrequently;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIAccessibilityTraitUpdatesFrequently, jint)

inline jint ASLayoutNativeVars_get_UITextAutocapitalizationTypeNone(void);
inline jint ASLayoutNativeVars_set_UITextAutocapitalizationTypeNone(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextAutocapitalizationTypeNone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextAutocapitalizationTypeNone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextAutocapitalizationTypeNone, jint)

inline jint ASLayoutNativeVars_get_UITextAutocapitalizationTypeWords(void);
inline jint ASLayoutNativeVars_set_UITextAutocapitalizationTypeWords(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextAutocapitalizationTypeWords(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextAutocapitalizationTypeWords;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextAutocapitalizationTypeWords, jint)

inline jint ASLayoutNativeVars_get_UITextAutocapitalizationTypeSentences(void);
inline jint ASLayoutNativeVars_set_UITextAutocapitalizationTypeSentences(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextAutocapitalizationTypeSentences(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextAutocapitalizationTypeSentences;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextAutocapitalizationTypeSentences, jint)

inline jint ASLayoutNativeVars_get_UITextAutocapitalizationTypeAllCharacters(void);
inline jint ASLayoutNativeVars_set_UITextAutocapitalizationTypeAllCharacters(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextAutocapitalizationTypeAllCharacters(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextAutocapitalizationTypeAllCharacters;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextAutocapitalizationTypeAllCharacters, jint)

inline jint ASLayoutNativeVars_get_UITextAutocorrectionTypeYes(void);
inline jint ASLayoutNativeVars_set_UITextAutocorrectionTypeYes(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextAutocorrectionTypeYes(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextAutocorrectionTypeYes;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextAutocorrectionTypeYes, jint)

inline jint ASLayoutNativeVars_get_UITextAutocorrectionTypeNo(void);
inline jint ASLayoutNativeVars_set_UITextAutocorrectionTypeNo(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextAutocorrectionTypeNo(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextAutocorrectionTypeNo;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextAutocorrectionTypeNo, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeDate(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeDate(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeDate(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeDate;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeDate, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeDatetime(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeDatetime(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeDatetime(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeDatetime;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeDatetime, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeNone(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeNone(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeNone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeNone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeNone, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeNumber(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeNumber(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeNumber(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeNumber;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeNumber, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeNumberDecimal(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeNumberDecimal(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeNumberDecimal(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeNumberDecimal;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeNumberDecimal, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeNumberPassword(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeNumberPassword(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeNumberPassword(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeNumberPassword;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeNumberPassword, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeNumberSigned(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeNumberSigned(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeNumberSigned(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeNumberSigned;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeNumberSigned, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypePhone(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypePhone(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypePhone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypePhone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypePhone, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeText(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeText(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeText(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeText;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeText, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextAutoComplete(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextAutoComplete(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextAutoComplete(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextAutoComplete;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextAutoComplete, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextAutoCorrect(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextAutoCorrect(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextAutoCorrect(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextAutoCorrect;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextAutoCorrect, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextCapCharacters(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextCapCharacters(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextCapCharacters(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextCapCharacters;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextCapCharacters, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextCapSentences(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextCapSentences(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextCapSentences(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextCapSentences;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextCapSentences, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextCapWords(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextCapWords(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextCapWords(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextCapWords;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextCapWords, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextEmailAddress(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextEmailAddress(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextEmailAddress(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextEmailAddress;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextEmailAddress, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextEmailSubject(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextEmailSubject(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextEmailSubject(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextEmailSubject;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextEmailSubject, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextFilter(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextFilter(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextFilter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextFilter;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextFilter, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextImeMultiLine(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextImeMultiLine(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextImeMultiLine(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextImeMultiLine;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextImeMultiLine, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextLongMessage(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextLongMessage(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextLongMessage(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextLongMessage;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextLongMessage, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextMultiLine(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextMultiLine(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextMultiLine(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextMultiLine;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextMultiLine, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextNoSuggestions(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextNoSuggestions(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextNoSuggestions(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextNoSuggestions;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextNoSuggestions, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextPassword(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextPassword(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextPassword(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextPassword;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextPassword, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextPersonName(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextPersonName(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextPersonName(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextPersonName;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextPersonName, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextPhonetic(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextPhonetic(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextPhonetic(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextPhonetic;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextPhonetic, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextPostalAddress(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextPostalAddress(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextPostalAddress(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextPostalAddress;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextPostalAddress, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextShortMessage(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextShortMessage(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextShortMessage(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextShortMessage;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextShortMessage, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextUri(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextUri(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextUri(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextUri;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextUri, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextVisiblePassword(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextVisiblePassword(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextVisiblePassword(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextVisiblePassword;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextVisiblePassword, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextWebEditText(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextWebEditText(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextWebEditText(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextWebEditText;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextWebEditText, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextWebEmailAddress(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextWebEmailAddress(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextWebEmailAddress(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextWebEmailAddress;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextWebEmailAddress, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTextWebPassword(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTextWebPassword(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTextWebPassword(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTextWebPassword;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTextWebPassword, jint)

inline jint ASLayoutNativeVars_get_UIKeyboardTypeTime(void);
inline jint ASLayoutNativeVars_set_UIKeyboardTypeTime(jint value);
inline jint *ASLayoutNativeVars_getRef_UIKeyboardTypeTime(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIKeyboardTypeTime;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIKeyboardTypeTime, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeActionDone(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeActionDone(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeActionDone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeActionDone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeActionDone, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeActionGo(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeActionGo(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeActionGo(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeActionGo;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeActionGo, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeActionNext(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeActionNext(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeActionNext(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeActionNext;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeActionNext, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeActionNone(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeActionNone(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeActionNone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeActionNone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeActionNone, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeActionPrevious(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeActionPrevious(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeActionPrevious(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeActionPrevious;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeActionPrevious, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeActionSearch(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeActionSearch(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeActionSearch(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeActionSearch;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeActionSearch, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeActionSend(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeActionSend(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeActionSend(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeActionSend;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeActionSend, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeActionUnspecified(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeActionUnspecified(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeActionUnspecified(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeActionUnspecified;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeActionUnspecified, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeFlagForceAscii(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeFlagForceAscii(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeFlagForceAscii(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeFlagForceAscii;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeFlagForceAscii, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeFlagNavigateNext(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeFlagNavigateNext(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeFlagNavigateNext(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeFlagNavigateNext;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeFlagNavigateNext, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeFlagNavigatePrevious(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeFlagNavigatePrevious(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeFlagNavigatePrevious(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeFlagNavigatePrevious;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeFlagNavigatePrevious, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeFlagNoAccessoryAction(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeFlagNoAccessoryAction(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeFlagNoAccessoryAction(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeFlagNoAccessoryAction;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeFlagNoAccessoryAction, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeFlagNoEnterAction(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeFlagNoEnterAction(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeFlagNoEnterAction(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeFlagNoEnterAction;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeFlagNoEnterAction, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeFlagNoExtractUi(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeFlagNoExtractUi(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeFlagNoExtractUi(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeFlagNoExtractUi;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeFlagNoExtractUi, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeFlagNoFullscreen(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeFlagNoFullscreen(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeFlagNoFullscreen(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeFlagNoFullscreen;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeFlagNoFullscreen, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeFlagNoPersonalizedLearning(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeFlagNoPersonalizedLearning(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeFlagNoPersonalizedLearning(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeFlagNoPersonalizedLearning;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeFlagNoPersonalizedLearning, jint)

inline jint ASLayoutNativeVars_get_UIReturnKeyTypeNormal(void);
inline jint ASLayoutNativeVars_set_UIReturnKeyTypeNormal(jint value);
inline jint *ASLayoutNativeVars_getRef_UIReturnKeyTypeNormal(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UIReturnKeyTypeNormal;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UIReturnKeyTypeNormal, jint)

inline jint ASLayoutNativeVars_get_UITextBorderStyleNone(void);
inline jint ASLayoutNativeVars_set_UITextBorderStyleNone(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextBorderStyleNone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextBorderStyleNone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextBorderStyleNone, jint)

inline jint ASLayoutNativeVars_get_UITextBorderStyleLine(void);
inline jint ASLayoutNativeVars_set_UITextBorderStyleLine(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextBorderStyleLine(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextBorderStyleLine;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextBorderStyleLine, jint)

inline jint ASLayoutNativeVars_get_UITextBorderStyleBezel(void);
inline jint ASLayoutNativeVars_set_UITextBorderStyleBezel(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextBorderStyleBezel(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextBorderStyleBezel;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextBorderStyleBezel, jint)

inline jint ASLayoutNativeVars_get_UITextBorderStyleRoundedRect(void);
inline jint ASLayoutNativeVars_set_UITextBorderStyleRoundedRect(jint value);
inline jint *ASLayoutNativeVars_getRef_UITextBorderStyleRoundedRect(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITextBorderStyleRoundedRect;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITextBorderStyleRoundedRect, jint)

inline jint ASLayoutNativeVars_get_UITableViewCellSeparatorStyleSingleLine(void);
inline jint ASLayoutNativeVars_set_UITableViewCellSeparatorStyleSingleLine(jint value);
inline jint *ASLayoutNativeVars_getRef_UITableViewCellSeparatorStyleSingleLine(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITableViewCellSeparatorStyleSingleLine;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITableViewCellSeparatorStyleSingleLine, jint)

inline jint ASLayoutNativeVars_get_UITableViewCellSeparatorStyleNone(void);
inline jint ASLayoutNativeVars_set_UITableViewCellSeparatorStyleNone(jint value);
inline jint *ASLayoutNativeVars_getRef_UITableViewCellSeparatorStyleNone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITableViewCellSeparatorStyleNone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITableViewCellSeparatorStyleNone, jint)

inline jint ASLayoutNativeVars_get_UITableViewCellSelectionStyleNone(void);
inline jint ASLayoutNativeVars_set_UITableViewCellSelectionStyleNone(jint value);
inline jint *ASLayoutNativeVars_getRef_UITableViewCellSelectionStyleNone(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITableViewCellSelectionStyleNone;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITableViewCellSelectionStyleNone, jint)

inline jint ASLayoutNativeVars_get_UITableViewCellSelectionStyleGray(void);
inline jint ASLayoutNativeVars_set_UITableViewCellSelectionStyleGray(jint value);
inline jint *ASLayoutNativeVars_getRef_UITableViewCellSelectionStyleGray(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITableViewCellSelectionStyleGray;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITableViewCellSelectionStyleGray, jint)

inline jint ASLayoutNativeVars_get_UITableViewCellSelectionStyleBlue(void);
inline jint ASLayoutNativeVars_set_UITableViewCellSelectionStyleBlue(jint value);
inline jint *ASLayoutNativeVars_getRef_UITableViewCellSelectionStyleBlue(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITableViewCellSelectionStyleBlue;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITableViewCellSelectionStyleBlue, jint)

inline jint ASLayoutNativeVars_get_UITableViewCellSelectionStyleDefault(void);
inline jint ASLayoutNativeVars_set_UITableViewCellSelectionStyleDefault(jint value);
inline jint *ASLayoutNativeVars_getRef_UITableViewCellSelectionStyleDefault(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ASLayoutNativeVars_UITableViewCellSelectionStyleDefault;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASLayoutNativeVars, UITableViewCellSelectionStyleDefault, jint)

FOUNDATION_EXPORT void ASLayoutNativeVars_init(ASLayoutNativeVars *self);

FOUNDATION_EXPORT ASLayoutNativeVars *new_ASLayoutNativeVars_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASLayoutNativeVars *create_ASLayoutNativeVars_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASLayoutNativeVars)

@compatibility_alias ComAsheraLayoutLayoutNativeVars ASLayoutNativeVars;

#endif

#pragma pop_macro("INCLUDE_ALL_LayoutNativeVars")
