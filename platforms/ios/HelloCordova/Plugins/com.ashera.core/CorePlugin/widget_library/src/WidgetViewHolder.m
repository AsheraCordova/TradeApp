//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\WidgetViewHolder.java
//

#include "IWidget.h"
#include "J2ObjC_source.h"
#include "ModelExpressionParser.h"
#include "WidgetAttribute.h"
#include "WidgetViewHolder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"


@implementation ASWidgetViewHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASWidgetViewHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(widget_);
  RELEASE_(attributes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "widget_", "LASIWidget;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "attributes_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/List<Lcom/ashera/widget/WidgetViewHolder$AttributeViewHolder;>;", "LASWidgetViewHolder_AttributeViewHolder;" };
  static const J2ObjcClassInfo _ASWidgetViewHolder = { "WidgetViewHolder", "com.ashera.widget", ptrTable, methods, fields, 7, 0x1, 1, 2, -1, 1, -1, -1, -1 };
  return &_ASWidgetViewHolder;
}

@end

void ASWidgetViewHolder_init(ASWidgetViewHolder *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->attributes_, new_JavaUtilArrayList_init());
}

ASWidgetViewHolder *new_ASWidgetViewHolder_init() {
  J2OBJC_NEW_IMPL(ASWidgetViewHolder, init)
}

ASWidgetViewHolder *create_ASWidgetViewHolder_init() {
  J2OBJC_CREATE_IMPL(ASWidgetViewHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASWidgetViewHolder)

@implementation ASWidgetViewHolder_AttributeViewHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASWidgetViewHolder_AttributeViewHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(childWidget_);
  RELEASE_(modelPojoToUiHolder_);
  RELEASE_(widgetAttribute_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "childWidget_", "LASIWidget;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "modelPojoToUiHolder_", "LASModelExpressionParser_ModelPojoToUiHolder;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "widgetAttribute_", "LASWidgetAttribute;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASWidgetViewHolder;" };
  static const J2ObjcClassInfo _ASWidgetViewHolder_AttributeViewHolder = { "AttributeViewHolder", "com.ashera.widget", ptrTable, methods, fields, 7, 0x9, 1, 3, 0, -1, -1, -1, -1 };
  return &_ASWidgetViewHolder_AttributeViewHolder;
}

@end

void ASWidgetViewHolder_AttributeViewHolder_init(ASWidgetViewHolder_AttributeViewHolder *self) {
  NSObject_init(self);
}

ASWidgetViewHolder_AttributeViewHolder *new_ASWidgetViewHolder_AttributeViewHolder_init() {
  J2OBJC_NEW_IMPL(ASWidgetViewHolder_AttributeViewHolder, init)
}

ASWidgetViewHolder_AttributeViewHolder *create_ASWidgetViewHolder_AttributeViewHolder_init() {
  J2OBJC_CREATE_IMPL(ASWidgetViewHolder_AttributeViewHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASWidgetViewHolder_AttributeViewHolder)
