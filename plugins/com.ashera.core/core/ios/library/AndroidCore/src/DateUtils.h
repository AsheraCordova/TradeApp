//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\text\format\DateUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DateUtils")
#ifdef RESTRICT_DateUtils
#define INCLUDE_ALL_DateUtils 0
#else
#define INCLUDE_ALL_DateUtils 1
#endif
#undef RESTRICT_DateUtils

#if !defined (ADDateUtils_) && (INCLUDE_ALL_DateUtils || defined(INCLUDE_ADDateUtils))
#define ADDateUtils_

@class JavaLangStringBuilder;

@interface ADDateUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (NSString *)formatElapsedTimeWithLong:(jlong)elapsedSeconds;

/*!
 @brief Formats an elapsed time in a format like "MM:SS" or "H:MM:SS" (using a form
  suited to the current locale), similar to that used on the call-in-progress
  screen.
 @param recycle<code>StringBuilder</code>  to recycle, or null to use a temporary one.
 @param elapsedSeconds the elapsed time in seconds.
 */
+ (NSString *)formatElapsedTimeWithJavaLangStringBuilder:(JavaLangStringBuilder *)recycle
                                                withLong:(jlong)elapsedSeconds;

@end

J2OBJC_EMPTY_STATIC_INIT(ADDateUtils)

inline jlong ADDateUtils_get_SECOND_IN_MILLIS(void);
#define ADDateUtils_SECOND_IN_MILLIS 1000LL
J2OBJC_STATIC_FIELD_CONSTANT(ADDateUtils, SECOND_IN_MILLIS, jlong)

FOUNDATION_EXPORT void ADDateUtils_init(ADDateUtils *self);

FOUNDATION_EXPORT ADDateUtils *new_ADDateUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADDateUtils *create_ADDateUtils_init(void);

FOUNDATION_EXPORT NSString *ADDateUtils_formatElapsedTimeWithLong_(jlong elapsedSeconds);

FOUNDATION_EXPORT NSString *ADDateUtils_formatElapsedTimeWithJavaLangStringBuilder_withLong_(JavaLangStringBuilder *recycle, jlong elapsedSeconds);

J2OBJC_TYPE_LITERAL_HEADER(ADDateUtils)

@compatibility_alias RAndroidTextFormatDateUtils ADDateUtils;

#endif

#pragma pop_macro("INCLUDE_ALL_DateUtils")
