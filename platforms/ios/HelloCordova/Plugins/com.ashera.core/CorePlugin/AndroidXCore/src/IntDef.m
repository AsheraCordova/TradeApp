//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidX-core\src\main\java\androidx\annotation\IntDef.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "IntDef.h"
#include "J2ObjC_source.h"


@implementation ADXIntDef

@synthesize value = value_;
@synthesize flag = flag_;

+ (IOSLongArray *)valueDefault {
  return [IOSLongArray arrayWithLength:0];
}

+ (jboolean)flagDefault {
  return false;
}

- (IOSClass *)annotationType {
  return ADXIntDef_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@androidx.annotation.IntDef(value=%@, flag=%d)", value_, flag_];
}

- (jboolean)isEqual:(id)obj {
  return JreAnnotationEquals(self, obj);
}

- (NSUInteger)hash {
  return JreAnnotationHashCode(self);
}

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(value);
  methods[1].selector = @selector(flag);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "[J", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "flag_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _ADXIntDef = { "IntDef", "androidx.annotation", NULL, methods, fields, 7, 0x2609, 2, 2, -1, -1, -1, -1, -1 };
  return &_ADXIntDef;
}

@end

id<ADXIntDef> create_ADXIntDef(jboolean flag, IOSLongArray *value) {
  ADXIntDef *self = AUTORELEASE([[ADXIntDef alloc] init]);
  self->flag_ = flag;
  self->value_ = RETAIN_(value);
  return self;
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXIntDef)
