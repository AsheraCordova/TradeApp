//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\database\DataSetObservable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DataSetObservable")
#ifdef RESTRICT_DataSetObservable
#define INCLUDE_ALL_DataSetObservable 0
#else
#define INCLUDE_ALL_DataSetObservable 1
#endif
#undef RESTRICT_DataSetObservable

#if !defined (ADDataSetObservable_) && (INCLUDE_ALL_DataSetObservable || defined(INCLUDE_ADDataSetObservable))
#define ADDataSetObservable_

#define RESTRICT_Observable 1
#define INCLUDE_ADObservable 1
#include "Observable.h"

/*!
 @brief A specialization of <code>Observable</code> for <code>DataSetObserver</code>
  that provides methods for sending notifications to a list of 
 <code>DataSetObserver</code> objects.
 */
@interface ADDataSetObservable : ADObservable

#pragma mark Public

- (instancetype)init;

/*!
 @brief Invokes <code>DataSetObserver.onChanged</code> on each observer.
 Called when the contents of the data set have changed.  The recipient
  will obtain the new contents the next time it queries the data set.
 */
- (void)notifyChanged;

/*!
 @brief Invokes <code>DataSetObserver.onInvalidated</code> on each observer.
 Called when the data set is no longer valid and cannot be queried again,
  such as when the data set has been closed.
 */
- (void)notifyInvalidated;

@end

J2OBJC_EMPTY_STATIC_INIT(ADDataSetObservable)

FOUNDATION_EXPORT void ADDataSetObservable_init(ADDataSetObservable *self);

FOUNDATION_EXPORT ADDataSetObservable *new_ADDataSetObservable_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADDataSetObservable *create_ADDataSetObservable_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADDataSetObservable)

@compatibility_alias RAndroidDatabaseDataSetObservable ADDataSetObservable;

#endif

#pragma pop_macro("INCLUDE_ALL_DataSetObservable")
