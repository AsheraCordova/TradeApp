//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\database\Observable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Observable")
#ifdef RESTRICT_Observable
#define INCLUDE_ALL_Observable 0
#else
#define INCLUDE_ALL_Observable 1
#endif
#undef RESTRICT_Observable

#if !defined (ADObservable_) && (INCLUDE_ALL_Observable || defined(INCLUDE_ADObservable))
#define ADObservable_

@class JavaUtilArrayList;

/*!
 @brief Provides methods for registering or unregistering arbitrary observers in an <code>ArrayList</code>.
 This abstract class is intended to be subclassed and specialized to maintain
  a registry of observers of specific types and dispatch notifications to them.
 @param T The observer type.
 */
@interface ADObservable : NSObject {
 @public
  /*!
   @brief The list of observers.An observer can be in the list at most
  once and will never be null.
   */
  JavaUtilArrayList *mObservers_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief Adds an observer to the list.The observer cannot be null and it must not already
  be registered.
 @param observer the observer to register
 @throw IllegalArgumentExceptionthe observer is null
 @throw IllegalStateExceptionthe observer is already registered
 */
- (void)registerObserverWithId:(id)observer;

/*!
 @brief Remove all registered observers.
 */
- (void)unregisterAll;

/*!
 @brief Removes a previously registered observer.The observer must not be null and it
  must already have been registered.
 @param observer the observer to unregister
 @throw IllegalArgumentExceptionthe observer is null
 @throw IllegalStateExceptionthe observer is not yet registered
 */
- (void)unregisterObserverWithId:(id)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(ADObservable)

J2OBJC_FIELD_SETTER(ADObservable, mObservers_, JavaUtilArrayList *)

FOUNDATION_EXPORT void ADObservable_init(ADObservable *self);

J2OBJC_TYPE_LITERAL_HEADER(ADObservable)

@compatibility_alias RAndroidDatabaseObservable ADObservable;

#endif

#pragma pop_macro("INCLUDE_ALL_Observable")
