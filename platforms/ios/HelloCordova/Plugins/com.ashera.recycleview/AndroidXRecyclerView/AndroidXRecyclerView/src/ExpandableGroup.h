//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\com\xwray\groupie\ExpandableGroup.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ExpandableGroup")
#ifdef RESTRICT_ExpandableGroup
#define INCLUDE_ALL_ExpandableGroup 0
#else
#define INCLUDE_ALL_ExpandableGroup 1
#endif
#undef RESTRICT_ExpandableGroup

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADXExpandableGroup_) && (INCLUDE_ALL_ExpandableGroup || defined(INCLUDE_ADXExpandableGroup))
#define ADXExpandableGroup_

#define RESTRICT_NestedGroup 1
#define INCLUDE_ADXNestedGroup 1
#include "NestedGroup.h"

@protocol ADXExpandableItem;
@protocol ADXRVGroup;
@protocol JavaUtilCollection;

/*!
 @brief An ExpandableGroup is one "base" content item with a list of children (any of which
  may themselves be a group.)
 */
@interface ADXExpandableGroup : ADXNestedGroup

#pragma mark Public

- (instancetype)initWithADXRVGroup:(id<ADXRVGroup, ADXExpandableItem>)expandableItem;

- (instancetype)initWithADXRVGroup:(id<ADXRVGroup, ADXExpandableItem>)expandableItem
                       withBoolean:(jboolean)isExpanded;

- (void)addWithInt:(jint)position
    withADXRVGroup:(id<ADXRVGroup>)group;

- (void)addWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (void)addAllWithInt:(jint)position
withJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (jint)getChildCount;

- (id<ADXRVGroup>)getGroupWithInt:(jint)position;

- (jint)getGroupCount;

- (jint)getPositionWithADXRVGroup:(id<ADXRVGroup>)group;

- (jboolean)isExpanded;

- (void)onChangedWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)onDataSetInvalidated;

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position;

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position
                             withId:(id)payload;

- (void)onItemInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                             withInt:(jint)position;

- (void)onItemMovedWithADXRVGroup:(id<ADXRVGroup>)group
                          withInt:(jint)fromPosition
                          withInt:(jint)toPosition;

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount;

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount
                                  withId:(id)payload;

- (void)onItemRangeInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount;

- (void)onItemRangeRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount;

- (void)onItemRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position;

- (void)onToggleExpanded;

- (void)removeWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (void)replaceAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (void)setExpandedWithBoolean:(jboolean)isExpanded;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXExpandableGroup)

FOUNDATION_EXPORT void ADXExpandableGroup_initWithADXRVGroup_(ADXExpandableGroup *self, id<ADXRVGroup, ADXExpandableItem> expandableItem);

FOUNDATION_EXPORT ADXExpandableGroup *new_ADXExpandableGroup_initWithADXRVGroup_(id<ADXRVGroup, ADXExpandableItem> expandableItem) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXExpandableGroup *create_ADXExpandableGroup_initWithADXRVGroup_(id<ADXRVGroup, ADXExpandableItem> expandableItem);

FOUNDATION_EXPORT void ADXExpandableGroup_initWithADXRVGroup_withBoolean_(ADXExpandableGroup *self, id<ADXRVGroup, ADXExpandableItem> expandableItem, jboolean isExpanded);

FOUNDATION_EXPORT ADXExpandableGroup *new_ADXExpandableGroup_initWithADXRVGroup_withBoolean_(id<ADXRVGroup, ADXExpandableItem> expandableItem, jboolean isExpanded) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXExpandableGroup *create_ADXExpandableGroup_initWithADXRVGroup_withBoolean_(id<ADXRVGroup, ADXExpandableItem> expandableItem, jboolean isExpanded);

J2OBJC_TYPE_LITERAL_HEADER(ADXExpandableGroup)

@compatibility_alias ComXwrayGroupieExpandableGroup ADXExpandableGroup;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ExpandableGroup")
