//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\parser\CLString.java
//

#include "CLElement.h"
#include "CLString.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"


@implementation ADXCLString

- (instancetype)initWithCharArray:(IOSCharArray *)content {
  ADXCLString_initWithCharArray_(self, content);
  return self;
}

+ (ADXCLElement *)allocateWithCharArray:(IOSCharArray *)content {
  return ADXCLString_allocateWithCharArray_(content);
}

- (NSString *)toJSON {
  return JreStrcat("C$C", '\'', [self content], '\'');
}

- (NSString *)toFormattedJSONWithInt:(jint)indent
                             withInt:(jint)forceIndent {
  JavaLangStringBuilder *json = create_JavaLangStringBuilder_init();
  [self addIndentWithJavaLangStringBuilder:json withInt:indent];
  [json appendWithNSString:@"'"];
  [json appendWithNSString:[self content]];
  [json appendWithNSString:@"'"];
  return [json description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LADXCLElement;", 0x9, 1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCharArray:);
  methods[1].selector = @selector(allocateWithCharArray:);
  methods[2].selector = @selector(toJSON);
  methods[3].selector = @selector(toFormattedJSONWithInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[C", "allocate", "toFormattedJSON", "II" };
  static const J2ObjcClassInfo _ADXCLString = { "CLString", "androidx.constraintlayout.core.parser", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_ADXCLString;
}

@end

void ADXCLString_initWithCharArray_(ADXCLString *self, IOSCharArray *content) {
  ADXCLElement_initWithCharArray_(self, content);
}

ADXCLString *new_ADXCLString_initWithCharArray_(IOSCharArray *content) {
  J2OBJC_NEW_IMPL(ADXCLString, initWithCharArray_, content)
}

ADXCLString *create_ADXCLString_initWithCharArray_(IOSCharArray *content) {
  J2OBJC_CREATE_IMPL(ADXCLString, initWithCharArray_, content)
}

ADXCLElement *ADXCLString_allocateWithCharArray_(IOSCharArray *content) {
  ADXCLString_initialize();
  return create_ADXCLString_initWithCharArray_(content);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXCLString)
