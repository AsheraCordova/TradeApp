//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidToolBar\src\main\java\androidx\appcompat\widget\RtlSpacingHelper.java
//

#include "J2ObjC_source.h"
#include "RtlSpacingHelper.h"


@interface ADXRtlSpacingHelper () {
 @public
  jint mLeft_;
  jint mRight_;
  jint mStart_;
  jint mEnd_;
  jint mExplicitLeft_;
  jint mExplicitRight_;
  jboolean mIsRtl_;
  jboolean mIsRelative_;
}

@end

@implementation ADXRtlSpacingHelper

- (instancetype)initPackagePrivate {
  ADXRtlSpacingHelper_initPackagePrivate(self);
  return self;
}

- (jint)getLeft {
  return mLeft_;
}

- (jint)getRight {
  return mRight_;
}

- (jint)getStart {
  return mIsRtl_ ? mRight_ : mLeft_;
}

- (jint)getEnd {
  return mIsRtl_ ? mLeft_ : mRight_;
}

- (void)setRelativeWithInt:(jint)start
                   withInt:(jint)end {
  mStart_ = start;
  mEnd_ = end;
  mIsRelative_ = true;
  if (mIsRtl_) {
    if (end != ADXRtlSpacingHelper_UNDEFINED) mLeft_ = end;
    if (start != ADXRtlSpacingHelper_UNDEFINED) mRight_ = start;
  }
  else {
    if (start != ADXRtlSpacingHelper_UNDEFINED) mLeft_ = start;
    if (end != ADXRtlSpacingHelper_UNDEFINED) mRight_ = end;
  }
}

- (void)setAbsoluteWithInt:(jint)left
                   withInt:(jint)right {
  mIsRelative_ = false;
  if (left != ADXRtlSpacingHelper_UNDEFINED) mLeft_ = mExplicitLeft_ = left;
  if (right != ADXRtlSpacingHelper_UNDEFINED) mRight_ = mExplicitRight_ = right;
}

- (void)setDirectionWithBoolean:(jboolean)isRtl {
  if (isRtl == mIsRtl_) {
    return;
  }
  mIsRtl_ = isRtl;
  if (mIsRelative_) {
    if (isRtl) {
      mLeft_ = mEnd_ != ADXRtlSpacingHelper_UNDEFINED ? mEnd_ : mExplicitLeft_;
      mRight_ = mStart_ != ADXRtlSpacingHelper_UNDEFINED ? mStart_ : mExplicitRight_;
    }
    else {
      mLeft_ = mStart_ != ADXRtlSpacingHelper_UNDEFINED ? mStart_ : mExplicitLeft_;
      mRight_ = mEnd_ != ADXRtlSpacingHelper_UNDEFINED ? mEnd_ : mExplicitRight_;
    }
  }
  else {
    mLeft_ = mExplicitLeft_;
    mRight_ = mExplicitRight_;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(getLeft);
  methods[2].selector = @selector(getRight);
  methods[3].selector = @selector(getStart);
  methods[4].selector = @selector(getEnd);
  methods[5].selector = @selector(setRelativeWithInt:withInt:);
  methods[6].selector = @selector(setAbsoluteWithInt:withInt:);
  methods[7].selector = @selector(setDirectionWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "UNDEFINED", "I", .constantValue.asInt = ADXRtlSpacingHelper_UNDEFINED, 0x19, -1, -1, -1, -1 },
    { "mLeft_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mRight_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mStart_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mEnd_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mExplicitLeft_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mExplicitRight_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mIsRtl_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mIsRelative_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setRelative", "II", "setAbsolute", "setDirection", "Z" };
  static const J2ObjcClassInfo _ADXRtlSpacingHelper = { "RtlSpacingHelper", "androidx.appcompat.widget", ptrTable, methods, fields, 7, 0x0, 8, 9, -1, -1, -1, -1, -1 };
  return &_ADXRtlSpacingHelper;
}

@end

void ADXRtlSpacingHelper_initPackagePrivate(ADXRtlSpacingHelper *self) {
  NSObject_init(self);
  self->mLeft_ = 0;
  self->mRight_ = 0;
  self->mStart_ = ADXRtlSpacingHelper_UNDEFINED;
  self->mEnd_ = ADXRtlSpacingHelper_UNDEFINED;
  self->mExplicitLeft_ = 0;
  self->mExplicitRight_ = 0;
  self->mIsRtl_ = false;
  self->mIsRelative_ = false;
}

ADXRtlSpacingHelper *new_ADXRtlSpacingHelper_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ADXRtlSpacingHelper, initPackagePrivate)
}

ADXRtlSpacingHelper *create_ADXRtlSpacingHelper_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ADXRtlSpacingHelper, initPackagePrivate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXRtlSpacingHelper)
