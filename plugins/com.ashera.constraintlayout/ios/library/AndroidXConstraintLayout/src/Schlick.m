//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\motion\utils\Schlick.java
//

#include "Easing.h"
#include "J2ObjC_source.h"
#include "Schlick.h"
#include "java/lang/Double.h"


@interface ADXSchlick ()

- (jdouble)funcWithDouble:(jdouble)x;

- (jdouble)dfuncWithDouble:(jdouble)x;

@end

inline jboolean ADXSchlick_get_DEBUG(void);
#define ADXSchlick_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(ADXSchlick, DEBUG, jboolean)

__attribute__((unused)) static jdouble ADXSchlick_funcWithDouble_(ADXSchlick *self, jdouble x);

__attribute__((unused)) static jdouble ADXSchlick_dfuncWithDouble_(ADXSchlick *self, jdouble x);

@implementation ADXSchlick

- (instancetype)initWithNSString:(NSString *)configString {
  ADXSchlick_initWithNSString_(self, configString);
  return self;
}

- (jdouble)funcWithDouble:(jdouble)x {
  return ADXSchlick_funcWithDouble_(self, x);
}

- (jdouble)dfuncWithDouble:(jdouble)x {
  return ADXSchlick_dfuncWithDouble_(self, x);
}

- (jdouble)getDiffWithDouble:(jdouble)x {
  return ADXSchlick_dfuncWithDouble_(self, x);
}

- (jdouble)getWithDouble:(jdouble)x {
  return ADXSchlick_funcWithDouble_(self, x);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "D", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x2, 3, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 5, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(funcWithDouble:);
  methods[2].selector = @selector(dfuncWithDouble:);
  methods[3].selector = @selector(getDiffWithDouble:);
  methods[4].selector = @selector(getWithDouble:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEBUG", "Z", .constantValue.asBOOL = ADXSchlick_DEBUG, 0x1a, -1, -1, -1, -1 },
    { "mS_", "D", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mT_", "D", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "eps_", "D", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "func", "D", "dfunc", "getDiff", "get" };
  static const J2ObjcClassInfo _ADXSchlick = { "Schlick", "androidx.constraintlayout.core.motion.utils", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, -1, -1, -1, -1 };
  return &_ADXSchlick;
}

@end

void ADXSchlick_initWithNSString_(ADXSchlick *self, NSString *configString) {
  ADXEasing_init(self);
  JreStrongAssign(&self->str_, configString);
  jint start = [((NSString *) nil_chk(configString)) java_indexOf:'('];
  jint off1 = [configString java_indexOf:',' fromIndex:start];
  self->mS_ = JavaLangDouble_parseDoubleWithNSString_([((NSString *) nil_chk([configString java_substring:start + 1 endIndex:off1])) java_trim]);
  jint off2 = [configString java_indexOf:',' fromIndex:off1 + 1];
  self->mT_ = JavaLangDouble_parseDoubleWithNSString_([((NSString *) nil_chk([configString java_substring:off1 + 1 endIndex:off2])) java_trim]);
}

ADXSchlick *new_ADXSchlick_initWithNSString_(NSString *configString) {
  J2OBJC_NEW_IMPL(ADXSchlick, initWithNSString_, configString)
}

ADXSchlick *create_ADXSchlick_initWithNSString_(NSString *configString) {
  J2OBJC_CREATE_IMPL(ADXSchlick, initWithNSString_, configString)
}

jdouble ADXSchlick_funcWithDouble_(ADXSchlick *self, jdouble x) {
  if (x < self->mT_) {
    return self->mT_ * x / (x + self->mS_ * (self->mT_ - x));
  }
  return ((1 - self->mT_) * (x - 1)) / (1 - x - self->mS_ * (self->mT_ - x));
}

jdouble ADXSchlick_dfuncWithDouble_(ADXSchlick *self, jdouble x) {
  if (x < self->mT_) {
    return (self->mS_ * self->mT_ * self->mT_) / ((self->mS_ * (self->mT_ - x) + x) * (self->mS_ * (self->mT_ - x) + x));
  }
  return (self->mS_ * (self->mT_ - 1) * (self->mT_ - 1)) / ((-self->mS_ * (self->mT_ - x) - x + 1) * (-self->mS_ * (self->mT_ - x) - x + 1));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXSchlick)
