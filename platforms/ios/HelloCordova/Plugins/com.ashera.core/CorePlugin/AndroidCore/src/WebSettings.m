//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\webkit\WebSettings.java
//

#include "J2ObjC_source.h"
#include "WebSettings.h"


@implementation ADWebSettings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADWebSettings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setJavaScriptEnabledWithBoolean:(jboolean)b {
}

- (void)setJavaScriptCanOpenWindowsAutomaticallyWithBoolean:(jboolean)b {
}

- (void)setLayoutAlgorithmWithInt:(jint)normal {
}

- (void)setSaveFormDataWithBoolean:(jboolean)b {
}

- (void)setSavePasswordWithBoolean:(jboolean)b {
}

- (void)setAllowUniversalAccessFromFileURLsWithBoolean:(jboolean)b {
}

- (void)setMediaPlaybackRequiresUserGestureWithBoolean:(jboolean)b {
}

- (void)setDatabaseEnabledWithBoolean:(jboolean)b {
}

- (void)setDatabasePathWithNSString:(NSString *)databasePath {
}

- (void)setGeolocationDatabasePathWithNSString:(NSString *)databasePath {
}

- (void)setDomStorageEnabledWithBoolean:(jboolean)b {
}

- (void)setGeolocationEnabledWithBoolean:(jboolean)b {
}

- (void)setAppCacheMaxSizeWithInt:(jint)i {
}

- (void)setAppCachePathWithNSString:(NSString *)databasePath {
}

- (void)setAppCacheEnabledWithBoolean:(jboolean)b {
}

- (void)setUseWideViewPortWithBoolean:(jboolean)b {
}

- (void)setLoadWithOverviewModeWithBoolean:(jboolean)b {
}

- (NSString *)getUserAgentString {
  return nil;
}

- (void)setUserAgentStringWithNSString:(NSString *)overrideUserAgent {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setJavaScriptEnabledWithBoolean:);
  methods[2].selector = @selector(setJavaScriptCanOpenWindowsAutomaticallyWithBoolean:);
  methods[3].selector = @selector(setLayoutAlgorithmWithInt:);
  methods[4].selector = @selector(setSaveFormDataWithBoolean:);
  methods[5].selector = @selector(setSavePasswordWithBoolean:);
  methods[6].selector = @selector(setAllowUniversalAccessFromFileURLsWithBoolean:);
  methods[7].selector = @selector(setMediaPlaybackRequiresUserGestureWithBoolean:);
  methods[8].selector = @selector(setDatabaseEnabledWithBoolean:);
  methods[9].selector = @selector(setDatabasePathWithNSString:);
  methods[10].selector = @selector(setGeolocationDatabasePathWithNSString:);
  methods[11].selector = @selector(setDomStorageEnabledWithBoolean:);
  methods[12].selector = @selector(setGeolocationEnabledWithBoolean:);
  methods[13].selector = @selector(setAppCacheMaxSizeWithInt:);
  methods[14].selector = @selector(setAppCachePathWithNSString:);
  methods[15].selector = @selector(setAppCacheEnabledWithBoolean:);
  methods[16].selector = @selector(setUseWideViewPortWithBoolean:);
  methods[17].selector = @selector(setLoadWithOverviewModeWithBoolean:);
  methods[18].selector = @selector(getUserAgentString);
  methods[19].selector = @selector(setUserAgentStringWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setJavaScriptEnabled", "Z", "setJavaScriptCanOpenWindowsAutomatically", "setLayoutAlgorithm", "I", "setSaveFormData", "setSavePassword", "setAllowUniversalAccessFromFileURLs", "setMediaPlaybackRequiresUserGesture", "setDatabaseEnabled", "setDatabasePath", "LNSString;", "setGeolocationDatabasePath", "setDomStorageEnabled", "setGeolocationEnabled", "setAppCacheMaxSize", "setAppCachePath", "setAppCacheEnabled", "setUseWideViewPort", "setLoadWithOverviewMode", "setUserAgentString", "LADWebSettings_LayoutAlgorithm;" };
  static const J2ObjcClassInfo _ADWebSettings = { "WebSettings", "r.android.webkit", ptrTable, methods, NULL, 7, 0x1, 20, 0, -1, 21, -1, -1, -1 };
  return &_ADWebSettings;
}

@end

void ADWebSettings_init(ADWebSettings *self) {
  NSObject_init(self);
}

ADWebSettings *new_ADWebSettings_init() {
  J2OBJC_NEW_IMPL(ADWebSettings, init)
}

ADWebSettings *create_ADWebSettings_init() {
  J2OBJC_CREATE_IMPL(ADWebSettings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADWebSettings)

@implementation ADWebSettings_LayoutAlgorithm

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADWebSettings_LayoutAlgorithm_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NORMAL", "I", .constantValue.asInt = ADWebSettings_LayoutAlgorithm_NORMAL, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADWebSettings;" };
  static const J2ObjcClassInfo _ADWebSettings_LayoutAlgorithm = { "LayoutAlgorithm", "r.android.webkit", ptrTable, methods, fields, 7, 0x9, 1, 1, 0, -1, -1, -1, -1 };
  return &_ADWebSettings_LayoutAlgorithm;
}

@end

void ADWebSettings_LayoutAlgorithm_init(ADWebSettings_LayoutAlgorithm *self) {
  NSObject_init(self);
}

ADWebSettings_LayoutAlgorithm *new_ADWebSettings_LayoutAlgorithm_init() {
  J2OBJC_NEW_IMPL(ADWebSettings_LayoutAlgorithm, init)
}

ADWebSettings_LayoutAlgorithm *create_ADWebSettings_LayoutAlgorithm_init() {
  J2OBJC_CREATE_IMPL(ADWebSettings_LayoutAlgorithm, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADWebSettings_LayoutAlgorithm)
