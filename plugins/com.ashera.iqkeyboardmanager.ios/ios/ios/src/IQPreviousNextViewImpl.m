//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSIQkeyboardManagerPlugin\src\main\java\com\ashera\iqkeyboardmanager\IQPreviousNextViewImpl.java
//

#include "BaseHasWidgets.h"
#include "FrameLayout.h"
#include "IAttributable.h"
#include "IFragment.h"
#include "ILifeCycleDecorator.h"
#include "IOSObjectArray.h"
#include "IQPreviousNextViewImpl.h"
#include "IWidget.h"
#include "IWidgetLifeCycleListener.h"
#include "IdGenerator.h"
#include "J2ObjC_source.h"
#include "MeasureEvent.h"
#include "OnLayoutEvent.h"
#include "View.h"
#include "ViewGroup.h"
#include "ViewGroupImpl.h"
#include "ViewImpl.h"
#include "WidgetAttribute.h"
#include "WidgetFactory.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

#include <UIKit/UIKit.h>
#include "ASUIView.h"
#include "HasLifeCycleDecorators.h"

#include "ASIQPreviousNextView.h"


#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ASIQPreviousNextViewImpl () {
 @public
  id uiView_;
  ADFrameLayout *frameLayout_;
  ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *builder_;
  ASIQPreviousNextViewImpl_IQPreviousNextViewBean *bean_;
  ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *paramsBuilder_;
  ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean *paramsBean_;
}

- (void)setWidgetOnNativeClass;

- (void)createLayoutParamsWithADView:(ADView *)view;

- (ADFrameLayout_LayoutParams *)getLayoutParamsWithADView:(ADView *)view;

@end

J2OBJC_FIELD_SETTER(ASIQPreviousNextViewImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASIQPreviousNextViewImpl, frameLayout_, ADFrameLayout *)
J2OBJC_FIELD_SETTER(ASIQPreviousNextViewImpl, builder_, ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *)
J2OBJC_FIELD_SETTER(ASIQPreviousNextViewImpl, bean_, ASIQPreviousNextViewImpl_IQPreviousNextViewBean *)
J2OBJC_FIELD_SETTER(ASIQPreviousNextViewImpl, paramsBuilder_, ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *)
J2OBJC_FIELD_SETTER(ASIQPreviousNextViewImpl, paramsBean_, ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean *)

__attribute__((unused)) static void ASIQPreviousNextViewImpl_setWidgetOnNativeClass(ASIQPreviousNextViewImpl *self);

__attribute__((unused)) static void ASIQPreviousNextViewImpl_createLayoutParamsWithADView_(ASIQPreviousNextViewImpl *self, ADView *view);

__attribute__((unused)) static ADFrameLayout_LayoutParams *ASIQPreviousNextViewImpl_getLayoutParamsWithADView_(ASIQPreviousNextViewImpl *self, ADView *view);

@interface ASIQPreviousNextViewImpl_IQPreviousNextViewExt () {
 @public
  __unsafe_unretained ASIQPreviousNextViewImpl *this$0_;
  ASMeasureEvent *measureFinished_;
  ASOnLayoutEvent *onLayoutEvent_;
  jint mMaxWidth_;
  jint mMaxHeight_;
}

@end

J2OBJC_FIELD_SETTER(ASIQPreviousNextViewImpl_IQPreviousNextViewExt, measureFinished_, ASMeasureEvent *)
J2OBJC_FIELD_SETTER(ASIQPreviousNextViewImpl_IQPreviousNextViewExt, onLayoutEvent_, ASOnLayoutEvent *)

@interface ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder () {
 @public
  ASIQPreviousNextViewImpl *this$0_;
}

@end

@interface ASIQPreviousNextViewImpl_IQPreviousNextViewBean () {
 @public
  ASIQPreviousNextViewImpl *this$0_;
}

@end

@interface ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean () {
 @public
  ASIQPreviousNextViewImpl *this$0_;
}

@end

NSString *ASIQPreviousNextViewImpl_LOCAL_NAME = @"IQPreviousNextView";
NSString *ASIQPreviousNextViewImpl_GROUP_NAME = @"IQPreviousNextView";

@implementation ASIQPreviousNextViewImpl

@synthesize uiView = uiView_;

- (void)loadAttributesWithNSString:(NSString *)localName {
  ASViewGroupImpl_register__WithNSString_(localName);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"measureAllChildren"])) withTypeWithNSString:@"boolean"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_gravity"])) withTypeWithNSString:@"gravity"])) forChild]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASIQPreviousNextViewImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)localname {
  ASIQPreviousNextViewImpl_initWithNSString_(self, localname);
  return self;
}

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname {
  ASIQPreviousNextViewImpl_initWithNSString_withNSString_(self, groupName, localname);
  return self;
}

- (id<ASIWidget>)newInstance {
  return new_ASIQPreviousNextViewImpl_init();
}

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params {
  [super createWithASIFragment:fragment withJavaUtilMap:params];
  frameLayout_ = new_ASIQPreviousNextViewImpl_IQPreviousNextViewExt_initWithASIQPreviousNextViewImpl_(self);
  [self nativeCreateWithJavaUtilMap:params];
  ASViewGroupImpl_registerCommandConveterWithASIWidget_(self);
  ASIQPreviousNextViewImpl_setWidgetOnNativeClass(self);
}

- (void)setWidgetOnNativeClass {
  ASIQPreviousNextViewImpl_setWidgetOnNativeClass(self);
}

- (id)asWidget {
  return frameLayout_;
}

- (jboolean)removeWithASIWidget:(id<ASIWidget>)w {
  jboolean remove = [super removeWithASIWidget:w];
  [((ADFrameLayout *) nil_chk(frameLayout_)) removeViewWithADView:(ADView *) cast_chk([((id<ASIWidget>) nil_chk(w)) asWidget], [ADView class])];
  ASViewGroupImpl_nativeRemoveViewWithASIWidget_(w);
  return remove;
}

- (jboolean)removeWithInt:(jint)index {
  id<ASIWidget> widget = [((id<JavaUtilList>) nil_chk(widgets_)) getWithInt:index];
  jboolean remove = [super removeWithInt:index];
  if (index + 1 <= [((ADFrameLayout *) nil_chk(frameLayout_)) getChildCount]) {
    [((ADFrameLayout *) nil_chk(frameLayout_)) removeViewAtWithInt:index];
    ASViewGroupImpl_nativeRemoveViewWithASIWidget_(widget);
  }
  return remove;
}

- (void)addWithASIWidget:(id<ASIWidget>)w
                 withInt:(jint)index {
  if (index != -2) {
    ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w)) asWidget], [ADView class]);
    ASIQPreviousNextViewImpl_createLayoutParamsWithADView_(self, view);
    if (index == -1) {
      [((ADFrameLayout *) nil_chk(frameLayout_)) addViewWithADView:view];
    }
    else {
      [((ADFrameLayout *) nil_chk(frameLayout_)) addViewWithADView:view withInt:index];
    }
  }
  ASViewGroupImpl_nativeAddViewWithId_withId_([self asNativeWidget], [((id<ASIWidget>) nil_chk(w)) asNativeWidget]);
  [super addWithASIWidget:w withInt:index];
}

- (void)createLayoutParamsWithADView:(ADView *)view {
  ASIQPreviousNextViewImpl_createLayoutParamsWithADView_(self, view);
}

- (ADFrameLayout_LayoutParams *)getLayoutParamsWithADView:(ADView *)view {
  return ASIQPreviousNextViewImpl_getLayoutParamsWithADView_(self, view);
}

- (void)setChildAttributeWithASIWidget:(id<ASIWidget>)w
                 withASWidgetAttribute:(ASWidgetAttribute *)key
                          withNSString:(NSString *)strValue
                                withId:(id)objValue {
  ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w)) asWidget], [ADView class]);
  ADFrameLayout_LayoutParams *layoutParams = ASIQPreviousNextViewImpl_getLayoutParamsWithADView_(self, view);
  ASViewGroupImpl_setChildAttributeWithASIWidget_withASWidgetAttribute_withId_withId_(w, key, objValue, layoutParams);
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"layout_width", @"layout_height", @"layout_gravity" }, 3)) {
    case 0:
    ((ADFrameLayout_LayoutParams *) nil_chk(layoutParams))->width_ = [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue];
    break;
    case 1:
    ((ADFrameLayout_LayoutParams *) nil_chk(layoutParams))->height_ = [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue];
    break;
    case 2:
    {
      ((ADFrameLayout_LayoutParams *) nil_chk(layoutParams))->gravity_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    default:
    break;
  }
  [((ADView *) nil_chk(view)) setLayoutParamsWithADViewGroup_LayoutParams:layoutParams];
}

- (id)getChildAttributeWithASIWidget:(id<ASIWidget>)w
               withASWidgetAttribute:(ASWidgetAttribute *)key {
  id attributeValue = ASViewGroupImpl_getChildAttributeWithASIWidget_withASWidgetAttribute_(w, key);
  if (attributeValue != nil) {
    return attributeValue;
  }
  ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w)) asWidget], [ADView class]);
  ADFrameLayout_LayoutParams *layoutParams = ASIQPreviousNextViewImpl_getLayoutParamsWithADView_(self, view);
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"layout_width", @"layout_height", @"layout_gravity" }, 3)) {
    case 0:
    return JavaLangInteger_valueOfWithInt_(((ADFrameLayout_LayoutParams *) nil_chk(layoutParams))->width_);
    case 1:
    return JavaLangInteger_valueOfWithInt_(((ADFrameLayout_LayoutParams *) nil_chk(layoutParams))->height_);
    case 2:
    {
      return JavaLangInteger_valueOfWithInt_(((ADFrameLayout_LayoutParams *) nil_chk(layoutParams))->gravity_);
    }
  }
  return nil;
}

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height {
  [((ASIQPreviousNextViewImpl_IQPreviousNextViewExt *) nil_chk(((ASIQPreviousNextViewImpl_IQPreviousNextViewExt *) cast_chk(frameLayout_, [ASIQPreviousNextViewImpl_IQPreviousNextViewExt class])))) updateMeasuredDimensionWithInt:width withInt:height];
}

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ASViewGroupImpl_setAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(self, key, strValue, objValue, decorator);
  id nativeWidget = [self asNativeWidget];
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"measureAllChildren" }, 1)) {
    case 0:
    {
      [((ADFrameLayout *) nil_chk(frameLayout_)) setMeasureAllChildrenWithBoolean:[((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk(objValue, [JavaLangBoolean class]))) booleanValue]];
    }
    break;
    default:
    break;
  }
}

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  id attributeValue = ASViewGroupImpl_getAttributeWithASIWidget_withASWidgetAttribute_withASILifeCycleDecorator_(self, key, decorator);
  if (attributeValue != nil) {
    return attributeValue;
  }
  id nativeWidget = [self asNativeWidget];
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"measureAllChildren" }, 1)) {
    case 0:
    {
      {
        return JavaLangBoolean_valueOfWithBoolean_([((ADFrameLayout *) nil_chk(frameLayout_)) getMeasureAllChildren]);
      }
    }
  }
  return nil;
}

- (id)asNativeWidget {
  return uiView_;
}

- (jboolean)checkIosVersionWithNSString:(NSString *)v {
  return ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending);
}

- (void)requestLayout {
  if ([self isInitialised]) {
    ASViewImpl_requestLayoutWithASIWidget_withId_(self, [self asNativeWidget]);
  }
}

- (void)invalidate {
  if ([self isInitialised]) {
    ASViewImpl_invalidateWithASIWidget_withId_(self, [self asNativeWidget]);
  }
}

- (void)setIdWithNSString:(NSString *)id_ {
  if (id_ != nil && ![id_ isEqual:@""]) {
    [super setIdWithNSString:id_];
    [((ADFrameLayout *) nil_chk(frameLayout_)) setIdWithInt:ASIdGenerator_getIdWithNSString_(id_)];
  }
}

- (id)getPluginWithNSString:(NSString *)plugin {
  return [((id<ASIAttributable>) nil_chk(ASWidgetFactory_getAttributableWithNSString_(plugin))) newInstanceWithASIWidget:self];
}

- (ASIQPreviousNextViewImpl_IQPreviousNextViewBean *)getBean {
  if (bean_ == nil) {
    bean_ = new_ASIQPreviousNextViewImpl_IQPreviousNextViewBean_initWithASIQPreviousNextViewImpl_(self);
  }
  return bean_;
}

- (ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *)getBuilder {
  if (builder_ == nil) {
    builder_ = new_ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder_initWithASIQPreviousNextViewImpl_(self);
  }
  return builder_;
}

- (ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean *)getParamsBean {
  if (paramsBean_ == nil) {
    paramsBean_ = new_ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean_initWithASIQPreviousNextViewImpl_(self);
  }
  return paramsBean_;
}

- (ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *)getParamsBuilder {
  if (paramsBuilder_ == nil) {
    paramsBuilder_ = new_ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder_initWithASIQPreviousNextViewImpl_(self);
  }
  return paramsBuilder_;
}

- (void)nativeCreateWithJavaUtilMap:(id<JavaUtilMap>)params {
  ASIQPreviousNextView* uiView = [ASIQPreviousNextView new];
  uiView.backgroundColor = [UIColor clearColor];
  uiView_ = uiView;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LASIWidget;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x102, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LADFrameLayout_LayoutParams;", 0x2, 13, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x101, 24, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 26, 1, -1, -1, -1, -1 },
    { NULL, "LASIQPreviousNextViewImpl_IQPreviousNextViewBean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x101, 27, 28, -1, 29, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(loadAttributesWithNSString:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(initWithNSString:withNSString:);
  methods[4].selector = @selector(newInstance);
  methods[5].selector = @selector(createWithASIFragment:withJavaUtilMap:);
  methods[6].selector = @selector(setWidgetOnNativeClass);
  methods[7].selector = @selector(asWidget);
  methods[8].selector = @selector(removeWithASIWidget:);
  methods[9].selector = @selector(removeWithInt:);
  methods[10].selector = @selector(addWithASIWidget:withInt:);
  methods[11].selector = @selector(createLayoutParamsWithADView:);
  methods[12].selector = @selector(getLayoutParamsWithADView:);
  methods[13].selector = @selector(setChildAttributeWithASIWidget:withASWidgetAttribute:withNSString:withId:);
  methods[14].selector = @selector(getChildAttributeWithASIWidget:withASWidgetAttribute:);
  methods[15].selector = @selector(updateMeasuredDimensionWithInt:withInt:);
  methods[16].selector = @selector(setAttributeWithASWidgetAttribute:withNSString:withId:withASILifeCycleDecorator:);
  methods[17].selector = @selector(getAttributeWithASWidgetAttribute:withASILifeCycleDecorator:);
  methods[18].selector = @selector(asNativeWidget);
  methods[19].selector = @selector(checkIosVersionWithNSString:);
  methods[20].selector = @selector(requestLayout);
  methods[21].selector = @selector(invalidate);
  methods[22].selector = @selector(setIdWithNSString:);
  methods[23].selector = @selector(getPluginWithNSString:);
  methods[24].selector = @selector(getBean);
  methods[25].selector = @selector(getBuilder);
  methods[26].selector = @selector(getParamsBean);
  methods[27].selector = @selector(getParamsBuilder);
  methods[28].selector = @selector(nativeCreateWithJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "uiView_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "LOCAL_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 30, -1, -1 },
    { "GROUP_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 31, -1, -1 },
    { "frameLayout_", "LADFrameLayout;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "builder_", "LASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bean_", "LASIQPreviousNextViewImpl_IQPreviousNextViewBean;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "paramsBuilder_", "LASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "paramsBean_", "LASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "loadAttributes", "LNSString;", "LNSString;LNSString;", "create", "LASIFragment;LJavaUtilMap;", "(Lcom/ashera/core/IFragment;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V", "remove", "LASIWidget;", "I", "add", "LASIWidget;I", "createLayoutParams", "LADView;", "getLayoutParams", "setChildAttribute", "LASIWidget;LASWidgetAttribute;LNSString;LNSObject;", "getChildAttribute", "LASIWidget;LASWidgetAttribute;", "updateMeasuredDimension", "II", "setAttribute", "LASWidgetAttribute;LNSString;LNSObject;LASILifeCycleDecorator;", "getAttribute", "LASWidgetAttribute;LASILifeCycleDecorator;", "checkIosVersion", "setId", "getPlugin", "nativeCreate", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V", &ASIQPreviousNextViewImpl_LOCAL_NAME, &ASIQPreviousNextViewImpl_GROUP_NAME, "LASIQPreviousNextViewImpl_IQPreviousNextViewExt;LASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder;LASIQPreviousNextViewImpl_IQPreviousNextViewBean;LASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean;LASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder;" };
  static const J2ObjcClassInfo _ASIQPreviousNextViewImpl = { "IQPreviousNextViewImpl", "com.ashera.iqkeyboardmanager", ptrTable, methods, fields, 7, 0x1, 29, 8, -1, 32, -1, -1, -1 };
  return &_ASIQPreviousNextViewImpl;
}

@end

void ASIQPreviousNextViewImpl_init(ASIQPreviousNextViewImpl *self) {
  ASBaseHasWidgets_initWithNSString_withNSString_(self, ASIQPreviousNextViewImpl_GROUP_NAME, ASIQPreviousNextViewImpl_LOCAL_NAME);
}

ASIQPreviousNextViewImpl *new_ASIQPreviousNextViewImpl_init() {
  J2OBJC_NEW_IMPL(ASIQPreviousNextViewImpl, init)
}

ASIQPreviousNextViewImpl *create_ASIQPreviousNextViewImpl_init() {
  J2OBJC_CREATE_IMPL(ASIQPreviousNextViewImpl, init)
}

void ASIQPreviousNextViewImpl_initWithNSString_(ASIQPreviousNextViewImpl *self, NSString *localname) {
  ASBaseHasWidgets_initWithNSString_withNSString_(self, ASIQPreviousNextViewImpl_GROUP_NAME, localname);
}

ASIQPreviousNextViewImpl *new_ASIQPreviousNextViewImpl_initWithNSString_(NSString *localname) {
  J2OBJC_NEW_IMPL(ASIQPreviousNextViewImpl, initWithNSString_, localname)
}

ASIQPreviousNextViewImpl *create_ASIQPreviousNextViewImpl_initWithNSString_(NSString *localname) {
  J2OBJC_CREATE_IMPL(ASIQPreviousNextViewImpl, initWithNSString_, localname)
}

void ASIQPreviousNextViewImpl_initWithNSString_withNSString_(ASIQPreviousNextViewImpl *self, NSString *groupName, NSString *localname) {
  ASBaseHasWidgets_initWithNSString_withNSString_(self, groupName, localname);
}

ASIQPreviousNextViewImpl *new_ASIQPreviousNextViewImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) {
  J2OBJC_NEW_IMPL(ASIQPreviousNextViewImpl, initWithNSString_withNSString_, groupName, localname)
}

ASIQPreviousNextViewImpl *create_ASIQPreviousNextViewImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) {
  J2OBJC_CREATE_IMPL(ASIQPreviousNextViewImpl, initWithNSString_withNSString_, groupName, localname)
}

void ASIQPreviousNextViewImpl_setWidgetOnNativeClass(ASIQPreviousNextViewImpl *self) {
  ((ASUIView*) [self asNativeWidget]).widget = self;
}

void ASIQPreviousNextViewImpl_createLayoutParamsWithADView_(ASIQPreviousNextViewImpl *self, ADView *view) {
  ADFrameLayout_LayoutParams *layoutParams = (ADFrameLayout_LayoutParams *) cast_chk([((ADView *) nil_chk(view)) getLayoutParams], [ADFrameLayout_LayoutParams class]);
  layoutParams = (ADFrameLayout_LayoutParams *) cast_chk([view getLayoutParams], [ADFrameLayout_LayoutParams class]);
  if (layoutParams == nil) {
    layoutParams = new_ADFrameLayout_LayoutParams_initWithInt_withInt_(-2, -2);
    [view setLayoutParamsWithADViewGroup_LayoutParams:layoutParams];
  }
  else {
    layoutParams->height_ = -2;
    layoutParams->width_ = -2;
  }
}

ADFrameLayout_LayoutParams *ASIQPreviousNextViewImpl_getLayoutParamsWithADView_(ASIQPreviousNextViewImpl *self, ADView *view) {
  return (ADFrameLayout_LayoutParams *) cast_chk([((ADView *) nil_chk(view)) getLayoutParams], [ADFrameLayout_LayoutParams class]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASIQPreviousNextViewImpl)

@implementation ASIQPreviousNextViewImpl_IQPreviousNextViewExt

- (void)setMaxWidthWithInt:(jint)width {
  mMaxWidth_ = width;
}

- (void)setMaxHeightWithInt:(jint)height {
  mMaxHeight_ = height;
}

- (jint)getMaxWidth {
  return mMaxWidth_;
}

- (jint)getMaxHeight {
  return mMaxHeight_;
}

- (instancetype)initWithASIQPreviousNextViewImpl:(ASIQPreviousNextViewImpl *)outer$ {
  ASIQPreviousNextViewImpl_IQPreviousNextViewExt_initWithASIQPreviousNextViewImpl_(self, outer$);
  return self;
}

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec {
  if (mMaxWidth_ > 0) {
    widthMeasureSpec = ADView_MeasureSpec_makeMeasureSpecWithInt_withInt_(mMaxWidth_, ADView_MeasureSpec_AT_MOST);
  }
  if (mMaxHeight_ > 0) {
    heightMeasureSpec = ADView_MeasureSpec_makeMeasureSpecWithInt_withInt_(mMaxHeight_, ADView_MeasureSpec_AT_MOST);
  }
  [super onMeasureWithInt:widthMeasureSpec withInt:heightMeasureSpec];
  id<ASIWidgetLifeCycleListener> listener = [this$0_ getListener];
  if (listener != nil) {
    [((ASMeasureEvent *) nil_chk(measureFinished_)) setWidthWithInt:[self getMeasuredWidth]];
    [((ASMeasureEvent *) nil_chk(measureFinished_)) setHeightWithInt:[self getMeasuredHeight]];
    [listener eventOccurredWithASIWidgetLifeCycleListener_EventId:JreLoadEnum(ASIWidgetLifeCycleListener_EventId, measureFinished) withASWidgetEvent:measureFinished_];
  }
}

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b {
  [super onLayoutWithBoolean:changed withInt:l withInt:t withInt:r withInt:b];
  ASViewImpl_setDrawableBoundsWithASIWidget_withInt_withInt_withInt_withInt_(this$0_, l, t, r, b);
  ASViewImpl_nativeMakeFrameWithId_withInt_withInt_withInt_withInt_([this$0_ asNativeWidget], l, t, r, b);
  [this$0_ replayBufferedEvents];
  ASViewImpl_redrawDrawablesWithASIWidget_(this$0_);
  id<ASIWidgetLifeCycleListener> listener = [this$0_ getListener];
  if (listener != nil) {
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setBWithInt:b];
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setLWithInt:l];
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setRWithInt:r];
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setTWithInt:t];
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setChangedWithBoolean:changed];
    [listener eventOccurredWithASIWidgetLifeCycleListener_EventId:JreLoadEnum(ASIWidgetLifeCycleListener_EventId, onLayout) withASWidgetEvent:onLayoutEvent_];
  }
  if ([this$0_ isInvalidateOnFrameChange] && [this$0_ isInitialised]) {
    [this$0_ invalidate];
  }
}

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas {
}

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height {
  [self setMeasuredDimensionWithInt:width withInt:height];
}

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id<JavaUtilList>)getMethods {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)initialized {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)drawableStateChanged {
  [super drawableStateChanged];
  ASViewImpl_drawableStateChangedWithASIWidget_(this$0_);
}

- (void)offsetTopAndBottomWithInt:(jint)offset {
  [super offsetTopAndBottomWithInt:offset];
  ASViewImpl_nativeMakeFrameWithId_withInt_withInt_withInt_withInt_([this$0_ asNativeWidget], [self getLeft], [self getTop], [self getRight], [self getBottom]);
}

- (void)offsetLeftAndRightWithInt:(jint)offset {
  [super offsetLeftAndRightWithInt:offset];
  ASViewImpl_nativeMakeFrameWithId_withInt_withInt_withInt_withInt_([this$0_ asNativeWidget], [self getLeft], [self getTop], [self getRight], [self getBottom]);
}

- (void)setVisibilityWithInt:(jint)visibility {
  [super setVisibilityWithInt:visibility];
  ASViewImpl_nativeSetVisibilityWithId_withBoolean_([this$0_ asNativeWidget], visibility != ADView_VISIBLE);
}

- (void)__javaClone:(ASIQPreviousNextViewImpl_IQPreviousNextViewExt *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 5, -1, -1, -1, -1 },
    { NULL, "LASILifeCycleDecorator;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 15, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setMaxWidthWithInt:);
  methods[1].selector = @selector(setMaxHeightWithInt:);
  methods[2].selector = @selector(getMaxWidth);
  methods[3].selector = @selector(getMaxHeight);
  methods[4].selector = @selector(initWithASIQPreviousNextViewImpl:);
  methods[5].selector = @selector(onMeasureWithInt:withInt:);
  methods[6].selector = @selector(onLayoutWithBoolean:withInt:withInt:withInt:withInt:);
  methods[7].selector = @selector(executeWithNSString:withNSObjectArray:);
  methods[8].selector = @selector(updateMeasuredDimensionWithInt:withInt:);
  methods[9].selector = @selector(newInstanceWithASIWidget:);
  methods[10].selector = @selector(setAttributeWithASWidgetAttribute:withNSString:withId:);
  methods[11].selector = @selector(getMethods);
  methods[12].selector = @selector(initialized);
  methods[13].selector = @selector(getAttributeWithASWidgetAttribute:);
  methods[14].selector = @selector(drawableStateChanged);
  methods[15].selector = @selector(offsetTopAndBottomWithInt:);
  methods[16].selector = @selector(offsetLeftAndRightWithInt:);
  methods[17].selector = @selector(setVisibilityWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASIQPreviousNextViewImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "measureFinished_", "LASMeasureEvent;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "onLayoutEvent_", "LASOnLayoutEvent;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mMaxWidth_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mMaxHeight_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setMaxWidth", "I", "setMaxHeight", "LASIQPreviousNextViewImpl;", "onMeasure", "II", "onLayout", "ZIIII", "execute", "LNSString;[LNSObject;", "updateMeasuredDimension", "newInstance", "LASIWidget;", "setAttribute", "LASWidgetAttribute;LNSString;LNSObject;", "()Ljava/util/List<Ljava/lang/String;>;", "getAttribute", "LASWidgetAttribute;", "offsetTopAndBottom", "offsetLeftAndRight", "setVisibility" };
  static const J2ObjcClassInfo _ASIQPreviousNextViewImpl_IQPreviousNextViewExt = { "IQPreviousNextViewExt", "com.ashera.iqkeyboardmanager", ptrTable, methods, fields, 7, 0x1, 18, 5, 3, -1, -1, -1, -1 };
  return &_ASIQPreviousNextViewImpl_IQPreviousNextViewExt;
}

@end

void ASIQPreviousNextViewImpl_IQPreviousNextViewExt_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl_IQPreviousNextViewExt *self, ASIQPreviousNextViewImpl *outer$) {
  self->this$0_ = outer$;
  ADFrameLayout_init(self);
  self->measureFinished_ = new_ASMeasureEvent_init();
  self->onLayoutEvent_ = new_ASOnLayoutEvent_init();
  self->mMaxWidth_ = -1;
  self->mMaxHeight_ = -1;
}

ASIQPreviousNextViewImpl_IQPreviousNextViewExt *new_ASIQPreviousNextViewImpl_IQPreviousNextViewExt_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_NEW_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewExt, initWithASIQPreviousNextViewImpl_, outer$)
}

ASIQPreviousNextViewImpl_IQPreviousNextViewExt *create_ASIQPreviousNextViewImpl_IQPreviousNextViewExt_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewExt, initWithASIQPreviousNextViewImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASIQPreviousNextViewImpl_IQPreviousNextViewExt)

@implementation ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder

- (instancetype)initWithASIQPreviousNextViewImpl:(ASIQPreviousNextViewImpl *)outer$ {
  ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder_initWithASIQPreviousNextViewImpl_(self, outer$);
  return self;
}

- (ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *)executeWithBoolean:(jboolean)setter {
  if (setter) {
    [this$0_ executeCommandWithJavaUtilMap:command_ withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
    [((id<ASIFragment>) nil_chk([this$0_ getFragment])) remeasure];
  }
  [this$0_ executeCommandWithJavaUtilMap:command_ withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return self;
}

- (ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *)tryGetMeasureAllChildren {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"measureAllChildren"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)isMeasureAllChildren {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"measureAllChildren"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *)setMeasureAllChildrenWithBoolean:(jboolean)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"measureAllChildren"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangBoolean_valueOfWithBoolean_(value)];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder;", 0x1, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASIQPreviousNextViewImpl:);
  methods[1].selector = @selector(executeWithBoolean:);
  methods[2].selector = @selector(tryGetMeasureAllChildren);
  methods[3].selector = @selector(isMeasureAllChildren);
  methods[4].selector = @selector(setMeasureAllChildrenWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASIQPreviousNextViewImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASIQPreviousNextViewImpl;", "execute", "Z", "setMeasureAllChildren", "Lcom/ashera/layout/ViewGroupImpl$ViewGroupCommandBuilder<Lcom/ashera/iqkeyboardmanager/IQPreviousNextViewImpl$IQPreviousNextViewCommandBuilder;>;" };
  static const J2ObjcClassInfo _ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder = { "IQPreviousNextViewCommandBuilder", "com.ashera.iqkeyboardmanager", ptrTable, methods, fields, 7, 0x1, 5, 1, 0, -1, -1, 4, -1 };
  return &_ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder;
}

@end

void ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *self, ASIQPreviousNextViewImpl *outer$) {
  self->this$0_ = outer$;
  ASViewGroupImpl_ViewGroupCommandBuilder_init(self);
}

ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *new_ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_NEW_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder, initWithASIQPreviousNextViewImpl_, outer$)
}

ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *create_ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder, initWithASIQPreviousNextViewImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder)

@implementation ASIQPreviousNextViewImpl_IQPreviousNextViewBean

- (instancetype)initWithASIQPreviousNextViewImpl:(ASIQPreviousNextViewImpl *)outer$ {
  ASIQPreviousNextViewImpl_IQPreviousNextViewBean_initWithASIQPreviousNextViewImpl_(self, outer$);
  return self;
}

- (id)isMeasureAllChildren {
  return [((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *) nil_chk([((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *) nil_chk([((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *) nil_chk([((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetMeasureAllChildren])) executeWithBoolean:false])) isMeasureAllChildren];
}

- (void)setMeasureAllChildrenWithBoolean:(jboolean)value {
  (void) [((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *) nil_chk([((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *) nil_chk([((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setMeasureAllChildrenWithBoolean:value])) executeWithBoolean:true];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASIQPreviousNextViewImpl:);
  methods[1].selector = @selector(isMeasureAllChildren);
  methods[2].selector = @selector(setMeasureAllChildrenWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASIQPreviousNextViewImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASIQPreviousNextViewImpl;", "setMeasureAllChildren", "Z" };
  static const J2ObjcClassInfo _ASIQPreviousNextViewImpl_IQPreviousNextViewBean = { "IQPreviousNextViewBean", "com.ashera.iqkeyboardmanager", ptrTable, methods, fields, 7, 0x1, 3, 1, 0, -1, -1, -1, -1 };
  return &_ASIQPreviousNextViewImpl_IQPreviousNextViewBean;
}

@end

void ASIQPreviousNextViewImpl_IQPreviousNextViewBean_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl_IQPreviousNextViewBean *self, ASIQPreviousNextViewImpl *outer$) {
  self->this$0_ = outer$;
  ASViewGroupImpl_ViewGroupBean_initWithASIWidget_(self, outer$);
}

ASIQPreviousNextViewImpl_IQPreviousNextViewBean *new_ASIQPreviousNextViewImpl_IQPreviousNextViewBean_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_NEW_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewBean, initWithASIQPreviousNextViewImpl_, outer$)
}

ASIQPreviousNextViewImpl_IQPreviousNextViewBean *create_ASIQPreviousNextViewImpl_IQPreviousNextViewBean_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewBean, initWithASIQPreviousNextViewImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASIQPreviousNextViewImpl_IQPreviousNextViewBean)

@implementation ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean

- (instancetype)initWithASIQPreviousNextViewImpl:(ASIQPreviousNextViewImpl *)outer$ {
  ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean_initWithASIQPreviousNextViewImpl_(self, outer$);
  return self;
}

- (id)getLayoutGravityWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *) nil_chk([((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *) nil_chk([((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutGravity])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutGravity];
}

- (void)setLayoutGravityWithASIWidget:(id<ASIWidget>)w
                         withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *) nil_chk([((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *) nil_chk([((ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutGravityWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASIQPreviousNextViewImpl:);
  methods[1].selector = @selector(getLayoutGravityWithASIWidget:);
  methods[2].selector = @selector(setLayoutGravityWithASIWidget:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASIQPreviousNextViewImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASIQPreviousNextViewImpl;", "getLayoutGravity", "LASIWidget;", "setLayoutGravity", "LASIWidget;LNSString;" };
  static const J2ObjcClassInfo _ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean = { "IQPreviousNextViewParamsBean", "com.ashera.iqkeyboardmanager", ptrTable, methods, fields, 7, 0x1, 3, 1, 0, -1, -1, -1, -1 };
  return &_ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean;
}

@end

void ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean *self, ASIQPreviousNextViewImpl *outer$) {
  self->this$0_ = outer$;
  ASViewGroupImpl_ViewGroupParamsBean_init(self);
}

ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean *new_ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_NEW_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean, initWithASIQPreviousNextViewImpl_, outer$)
}

ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean *create_ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean, initWithASIQPreviousNextViewImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASIQPreviousNextViewImpl_IQPreviousNextViewParamsBean)

@implementation ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder

- (instancetype)initWithASIQPreviousNextViewImpl:(ASIQPreviousNextViewImpl *)outer$ {
  ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder_initWithASIQPreviousNextViewImpl_(self, outer$);
  return self;
}

- (ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *)tryGetLayoutGravity {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_gravity"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutGravity {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_gravity"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *)setLayoutGravityWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_gravity"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASIQPreviousNextViewImpl:);
  methods[1].selector = @selector(tryGetLayoutGravity);
  methods[2].selector = @selector(getLayoutGravity);
  methods[3].selector = @selector(setLayoutGravityWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LASIQPreviousNextViewImpl;", "setLayoutGravity", "LNSString;", "Lcom/ashera/layout/ViewGroupImpl$ViewGroupCommandParamsBuilder<Lcom/ashera/iqkeyboardmanager/IQPreviousNextViewImpl$IQPreviousNextViewCommandParamsBuilder;>;" };
  static const J2ObjcClassInfo _ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder = { "IQPreviousNextViewCommandParamsBuilder", "com.ashera.iqkeyboardmanager", ptrTable, methods, NULL, 7, 0x1, 4, 0, 0, -1, -1, 3, -1 };
  return &_ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder;
}

@end

void ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *self, ASIQPreviousNextViewImpl *outer$) {
  ASViewGroupImpl_ViewGroupCommandParamsBuilder_init(self);
}

ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *new_ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_NEW_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder, initWithASIQPreviousNextViewImpl_, outer$)
}

ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder *create_ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder_initWithASIQPreviousNextViewImpl_(ASIQPreviousNextViewImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder, initWithASIQPreviousNextViewImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASIQPreviousNextViewImpl_IQPreviousNextViewCommandParamsBuilder)
