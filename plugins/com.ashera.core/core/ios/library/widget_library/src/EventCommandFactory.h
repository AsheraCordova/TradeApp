//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\EventCommandFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EventCommandFactory")
#ifdef RESTRICT_EventCommandFactory
#define INCLUDE_ALL_EventCommandFactory 0
#else
#define INCLUDE_ALL_EventCommandFactory 1
#endif
#undef RESTRICT_EventCommandFactory

#if !defined (ASEventCommandFactory_) && (INCLUDE_ALL_EventCommandFactory || defined(INCLUDE_ASEventCommandFactory))
#define ASEventCommandFactory_

@protocol ASEventCommand;

@interface ASEventCommandFactory : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<ASEventCommand>)getCommandWithNSString:(NSString *)name;

+ (jboolean)hasCommandWithNSString:(NSString *)name;

+ (void)registerCommandWithNSString:(NSString *)name
                 withASEventCommand:(id<ASEventCommand>)eventCommand;

@end

J2OBJC_STATIC_INIT(ASEventCommandFactory)

FOUNDATION_EXPORT void ASEventCommandFactory_init(ASEventCommandFactory *self);

FOUNDATION_EXPORT ASEventCommandFactory *new_ASEventCommandFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASEventCommandFactory *create_ASEventCommandFactory_init(void);

FOUNDATION_EXPORT void ASEventCommandFactory_registerCommandWithNSString_withASEventCommand_(NSString *name, id<ASEventCommand> eventCommand);

FOUNDATION_EXPORT id<ASEventCommand> ASEventCommandFactory_getCommandWithNSString_(NSString *name);

FOUNDATION_EXPORT jboolean ASEventCommandFactory_hasCommandWithNSString_(NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(ASEventCommandFactory)

@compatibility_alias ComAsheraWidgetEventCommandFactory ASEventCommandFactory;

#endif

#pragma pop_macro("INCLUDE_ALL_EventCommandFactory")
