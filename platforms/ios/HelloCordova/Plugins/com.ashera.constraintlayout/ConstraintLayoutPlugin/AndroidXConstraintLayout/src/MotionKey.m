//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\motion\key\MotionKey.java
//

#include "CustomVariable.h"
#include "J2ObjC_source.h"
#include "MotionKey.h"
#include "TypedValues.h"
#include "java/lang/Boolean.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"


#pragma clang diagnostic ignored "-Wprotocol"

jint ADXMotionKey_UNSET = -1;
NSString *ADXMotionKey_ALPHA = @"alpha";
NSString *ADXMotionKey_ELEVATION = @"elevation";
NSString *ADXMotionKey_ROTATION = @"rotationZ";
NSString *ADXMotionKey_ROTATION_X = @"rotationX";
NSString *ADXMotionKey_TRANSITION_PATH_ROTATE = @"transitionPathRotate";
NSString *ADXMotionKey_SCALE_X = @"scaleX";
NSString *ADXMotionKey_SCALE_Y = @"scaleY";
NSString *ADXMotionKey_TRANSLATION_X = @"translationX";
NSString *ADXMotionKey_TRANSLATION_Y = @"translationY";
NSString *ADXMotionKey_CUSTOM = @"CUSTOM";
NSString *ADXMotionKey_VISIBILITY = @"visibility";

@implementation ADXMotionKey

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXMotionKey_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)getAttributeNamesWithJavaUtilHashSet:(JavaUtilHashSet *)attributes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)matchesWithNSString:(NSString *)constraintTag {
  if (mTargetString_ == nil || constraintTag == nil) return false;
  return [constraintTag java_matches:mTargetString_];
}

- (void)addValuesWithJavaUtilHashMap:(JavaUtilHashMap *)splines {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jfloat)toFloatWithId:(id)value {
  return ([value isKindOfClass:[JavaLangFloat class]]) ? [((JavaLangFloat *) nil_chk((JavaLangFloat *) cast_chk(value, [JavaLangFloat class]))) floatValue] : JavaLangFloat_parseFloatWithNSString_([nil_chk(value) description]);
}

- (jint)toIntWithId:(id)value {
  return ([value isKindOfClass:[JavaLangInteger class]]) ? [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(value, [JavaLangInteger class]))) intValue] : JavaLangInteger_parseIntWithNSString_([nil_chk(value) description]);
}

- (jboolean)toBooleanWithId:(id)value {
  return ([value isKindOfClass:[JavaLangBoolean class]]) ? [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk(value, [JavaLangBoolean class]))) booleanValue] : JavaLangBoolean_parseBooleanWithNSString_([nil_chk(value) description]);
}

- (void)setInterpolationWithJavaUtilHashMap:(JavaUtilHashMap *)interpolation {
}

- (ADXMotionKey *)copy__WithADXMotionKey:(ADXMotionKey *)src {
  mFramePosition_ = ((ADXMotionKey *) nil_chk(src))->mFramePosition_;
  mTargetId_ = src->mTargetId_;
  JreStrongAssign(&mTargetString_, src->mTargetString_);
  mType_ = src->mType_;
  return self;
}

- (ADXMotionKey *)java_clone {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ADXMotionKey *)setViewIdWithInt:(jint)id_ {
  mTargetId_ = id_;
  return self;
}

- (void)setFramePositionWithInt:(jint)pos {
  mFramePosition_ = pos;
}

- (jint)getFramePosition {
  return mFramePosition_;
}

- (jboolean)setValueWithInt:(jint)type
                    withInt:(jint)value {
  switch (type) {
    case ADXTypedValues_TYPE_FRAME_POSITION:
    mFramePosition_ = value;
    return true;
  }
  return false;
}

- (jboolean)setValueWithInt:(jint)type
                  withFloat:(jfloat)value {
  return false;
}

- (jboolean)setValueWithInt:(jint)type
               withNSString:(NSString *)value {
  switch (type) {
    case ADXTypedValues_TYPE_TARGET:
    JreStrongAssign(&mTargetString_, value);
    return true;
  }
  return false;
}

- (jboolean)setValueWithInt:(jint)type
                withBoolean:(jboolean)value {
  return false;
}

- (void)setCustomAttributeWithNSString:(NSString *)name
                               withInt:(jint)type
                             withFloat:(jfloat)value {
  [((JavaUtilHashMap *) nil_chk(mCustom_)) putWithId:name withId:create_ADXCustomVariable_initWithNSString_withInt_withFloat_(name, type, value)];
}

- (void)setCustomAttributeWithNSString:(NSString *)name
                               withInt:(jint)type
                               withInt:(jint)value {
  [((JavaUtilHashMap *) nil_chk(mCustom_)) putWithId:name withId:create_ADXCustomVariable_initWithNSString_withInt_withInt_(name, type, value)];
}

- (void)setCustomAttributeWithNSString:(NSString *)name
                               withInt:(jint)type
                           withBoolean:(jboolean)value {
  [((JavaUtilHashMap *) nil_chk(mCustom_)) putWithId:name withId:create_ADXCustomVariable_initWithNSString_withInt_withBoolean_(name, type, value)];
}

- (void)setCustomAttributeWithNSString:(NSString *)name
                               withInt:(jint)type
                          withNSString:(NSString *)value {
  [((JavaUtilHashMap *) nil_chk(mCustom_)) putWithId:name withId:create_ADXCustomVariable_initWithNSString_withInt_withNSString_(name, type, value)];
}

- (void)dealloc {
  RELEASE_(mTargetString_);
  RELEASE_(mCustom_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, -1, 7, -1, -1 },
    { NULL, "F", 0x0, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 10, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 11, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 6, -1, 13, -1, -1 },
    { NULL, "LADXMotionKey;", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LADXMotionKey;", 0x401, 16, -1, -1, -1, -1, -1 },
    { NULL, "LADXMotionKey;", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 18, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 22, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 23, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 29, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAttributeNamesWithJavaUtilHashSet:);
  methods[2].selector = @selector(matchesWithNSString:);
  methods[3].selector = @selector(addValuesWithJavaUtilHashMap:);
  methods[4].selector = @selector(toFloatWithId:);
  methods[5].selector = @selector(toIntWithId:);
  methods[6].selector = @selector(toBooleanWithId:);
  methods[7].selector = @selector(setInterpolationWithJavaUtilHashMap:);
  methods[8].selector = @selector(copy__WithADXMotionKey:);
  methods[9].selector = @selector(java_clone);
  methods[10].selector = @selector(setViewIdWithInt:);
  methods[11].selector = @selector(setFramePositionWithInt:);
  methods[12].selector = @selector(getFramePosition);
  methods[13].selector = @selector(setValueWithInt:withInt:);
  methods[14].selector = @selector(setValueWithInt:withFloat:);
  methods[15].selector = @selector(setValueWithInt:withNSString:);
  methods[16].selector = @selector(setValueWithInt:withBoolean:);
  methods[17].selector = @selector(setCustomAttributeWithNSString:withInt:withFloat:);
  methods[18].selector = @selector(setCustomAttributeWithNSString:withInt:withInt:);
  methods[19].selector = @selector(setCustomAttributeWithNSString:withInt:withBoolean:);
  methods[20].selector = @selector(setCustomAttributeWithNSString:withInt:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "UNSET", "I", .constantValue.asLong = 0, 0x9, -1, 30, -1, -1 },
    { "mFramePosition_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "mTargetId_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mTargetString_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mType_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "mCustom_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1, -1, -1, 31, -1 },
    { "ALPHA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 32, -1, -1 },
    { "ELEVATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 33, -1, -1 },
    { "ROTATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 34, -1, -1 },
    { "ROTATION_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 35, -1, -1 },
    { "TRANSITION_PATH_ROTATE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "SCALE_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 37, -1, -1 },
    { "SCALE_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 38, -1, -1 },
    { "TRANSLATION_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 39, -1, -1 },
    { "TRANSLATION_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 40, -1, -1 },
    { "CUSTOM", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "VISIBILITY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
  };
  static const void *ptrTable[] = { "getAttributeNames", "LJavaUtilHashSet;", "(Ljava/util/HashSet<Ljava/lang/String;>;)V", "matches", "LNSString;", "addValues", "LJavaUtilHashMap;", "(Ljava/util/HashMap<Ljava/lang/String;Landroidx/constraintlayout/core/motion/utils/SplineSet;>;)V", "toFloat", "LNSObject;", "toInt", "toBoolean", "setInterpolation", "(Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;)V", "copy", "LADXMotionKey;", "clone", "setViewId", "I", "setFramePosition", "setValue", "II", "IF", "ILNSString;", "IZ", "setCustomAttribute", "LNSString;IF", "LNSString;II", "LNSString;IZ", "LNSString;ILNSString;", &ADXMotionKey_UNSET, "Ljava/util/HashMap<Ljava/lang/String;Landroidx/constraintlayout/core/motion/CustomVariable;>;", &ADXMotionKey_ALPHA, &ADXMotionKey_ELEVATION, &ADXMotionKey_ROTATION, &ADXMotionKey_ROTATION_X, &ADXMotionKey_TRANSITION_PATH_ROTATE, &ADXMotionKey_SCALE_X, &ADXMotionKey_SCALE_Y, &ADXMotionKey_TRANSLATION_X, &ADXMotionKey_TRANSLATION_Y, &ADXMotionKey_CUSTOM, &ADXMotionKey_VISIBILITY };
  static const J2ObjcClassInfo _ADXMotionKey = { "MotionKey", "androidx.constraintlayout.core.motion.key", ptrTable, methods, fields, 7, 0x401, 21, 17, -1, -1, -1, -1, -1 };
  return &_ADXMotionKey;
}

@end

void ADXMotionKey_init(ADXMotionKey *self) {
  NSObject_init(self);
  self->mFramePosition_ = ADXMotionKey_UNSET;
  self->mTargetId_ = ADXMotionKey_UNSET;
  JreStrongAssign(&self->mTargetString_, nil);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXMotionKey)
