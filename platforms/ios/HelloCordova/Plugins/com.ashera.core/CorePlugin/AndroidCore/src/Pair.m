//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\util\Pair.java
//

#include "J2ObjC_source.h"
#include "Objects.h"
#include "Pair.h"


@implementation ADPair

- (instancetype)initWithId:(id)first
                    withId:(id)second {
  ADPair_initWithId_withId_(self, first, second);
  return self;
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[ADPair class]])) {
    return false;
  }
  ADPair *p = (ADPair *) cast_chk(o, [ADPair class]);
  return ADObjects_equalWithId_withId_(((ADPair *) nil_chk(p))->first_, first_) && ADObjects_equalWithId_withId_(p->second_, second_);
}

- (NSUInteger)hash {
  return (first_ == nil ? 0 : ((jint) [first_ hash])) ^ (second_ == nil ? 0 : ((jint) [second_ hash]));
}

+ (ADPair *)createWithId:(id)a
                  withId:(id)b {
  return ADPair_createWithId_withId_(a, b);
}

- (void)dealloc {
  RELEASE_(first_);
  RELEASE_(second_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LADPair;", 0x9, 5, 0, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:withId:);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  methods[3].selector = @selector(createWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "first_", "LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, 7, -1 },
    { "second_", "LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LNSObject;", "(TF;TS;)V", "equals", "LNSObject;", "hashCode", "create", "<A:Ljava/lang/Object;B:Ljava/lang/Object;>(TA;TB;)Lr/android/util/Pair<TA;TB;>;", "TF;", "TS;", "<F:Ljava/lang/Object;S:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ADPair = { "Pair", "r.android.util", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, 9, -1 };
  return &_ADPair;
}

@end

void ADPair_initWithId_withId_(ADPair *self, id first, id second) {
  NSObject_init(self);
  JreStrongAssign(&self->first_, first);
  JreStrongAssign(&self->second_, second);
}

ADPair *new_ADPair_initWithId_withId_(id first, id second) {
  J2OBJC_NEW_IMPL(ADPair, initWithId_withId_, first, second)
}

ADPair *create_ADPair_initWithId_withId_(id first, id second) {
  J2OBJC_CREATE_IMPL(ADPair, initWithId_withId_, first, second)
}

ADPair *ADPair_createWithId_withId_(id a, id b) {
  ADPair_initialize();
  return create_ADPair_initWithId_withId_(a, b);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPair)
