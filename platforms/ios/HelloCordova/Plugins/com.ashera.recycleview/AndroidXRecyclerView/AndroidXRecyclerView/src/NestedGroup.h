//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\com\xwray\groupie\NestedGroup.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NestedGroup")
#ifdef RESTRICT_NestedGroup
#define INCLUDE_ALL_NestedGroup 0
#else
#define INCLUDE_ALL_NestedGroup 1
#endif
#undef RESTRICT_NestedGroup

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADXNestedGroup_) && (INCLUDE_ALL_NestedGroup || defined(INCLUDE_ADXNestedGroup))
#define ADXNestedGroup_

#define RESTRICT_RVGroup 1
#define INCLUDE_ADXRVGroup 1
#include "RVGroup.h"

#define RESTRICT_GroupDataObserver 1
#define INCLUDE_ADXGroupDataObserver 1
#include "GroupDataObserver.h"

@class ADXItem;
@protocol JavaUtilCollection;

/*!
 @brief A base implementation of the Group interface, which supports nesting of Groups to arbitrary depth.
 You can make a NestedGroup which contains only Items, one which contains Groups, or a mixture. 
 <p>
  It provides support for notifying the adapter about changes which happen in its child groups.
 */
@interface ADXNestedGroup : NSObject < ADXRVGroup, ADXGroupDataObserver >

#pragma mark Public

- (instancetype)init;

- (void)addWithInt:(jint)position
    withADXRVGroup:(id<ADXRVGroup>)group;

- (void)addWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (void)addAllWithInt:(jint)position
withJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (id<ADXRVGroup>)getGroupWithInt:(jint)position;

- (jint)getGroupCount;

- (ADXItem *)getItemWithInt:(jint)position;

- (jint)getItemCount;

- (jint)getPositionWithADXItem:(ADXItem *)item;

- (jint)getPositionWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)notifyChanged;

- (void)notifyDataSetInvalidated;

- (void)notifyItemChangedWithInt:(jint)position;

- (void)notifyItemChangedWithInt:(jint)position
                          withId:(id)payload;

- (void)notifyItemInsertedWithInt:(jint)position;

- (void)notifyItemMovedWithInt:(jint)fromPosition
                       withInt:(jint)toPosition;

- (void)notifyItemRangeChangedWithInt:(jint)positionStart
                              withInt:(jint)itemCount;

- (void)notifyItemRangeChangedWithInt:(jint)positionStart
                              withInt:(jint)itemCount
                               withId:(id)payload;

/*!
 @brief A group should use this to notify that there is a change in itself.
 @param positionStart
 @param itemCount
 */
- (void)notifyItemRangeInsertedWithInt:(jint)positionStart
                               withInt:(jint)itemCount;

- (void)notifyItemRangeRemovedWithInt:(jint)positionStart
                              withInt:(jint)itemCount;

- (void)notifyItemRemovedWithInt:(jint)position;

/*!
 @brief Every item in the group still exists but the data in each has changed (e.g.should rebind).
 @param group
 */
- (void)onChangedWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)onDataSetInvalidated;

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position;

- (void)onItemChangedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position
                             withId:(id)payload;

- (void)onItemInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                             withInt:(jint)position;

- (void)onItemMovedWithADXRVGroup:(id<ADXRVGroup>)group
                          withInt:(jint)fromPosition
                          withInt:(jint)toPosition;

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount;

- (void)onItemRangeChangedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount
                                  withId:(id)payload;

- (void)onItemRangeInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount;

- (void)onItemRangeRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount;

- (void)onItemRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position;

- (void)registerGroupDataObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)groupDataObserver;

- (void)removeWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (void)replaceAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (void)unregisterGroupDataObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)groupDataObserver;

#pragma mark Protected

- (jint)getItemCountBeforeGroupWithInt:(jint)groupIndex;

- (jint)getItemCountBeforeGroupWithADXRVGroup:(id<ADXRVGroup>)group;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNestedGroup)

FOUNDATION_EXPORT void ADXNestedGroup_init(ADXNestedGroup *self);

J2OBJC_TYPE_LITERAL_HEADER(ADXNestedGroup)

@compatibility_alias ComXwrayGroupieNestedGroup ADXNestedGroup;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NestedGroup")
