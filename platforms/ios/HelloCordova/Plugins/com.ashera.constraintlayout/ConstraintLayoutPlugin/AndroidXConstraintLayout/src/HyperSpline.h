//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\motion\utils\HyperSpline.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_HyperSpline")
#ifdef RESTRICT_HyperSpline
#define INCLUDE_ALL_HyperSpline 0
#else
#define INCLUDE_ALL_HyperSpline 1
#endif
#undef RESTRICT_HyperSpline

#if !defined (ADXHyperSpline_) && (INCLUDE_ALL_HyperSpline || defined(INCLUDE_ADXHyperSpline))
#define ADXHyperSpline_

@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSObjectArray;

/*!
 @brief Provides spline interpolation code.
 Currently not used but it is anticipated that we will be using it in the
  KeyMotion
 */
@interface ADXHyperSpline : NSObject {
 @public
  jint mPoints_;
  IOSObjectArray *mCurve_;
  jint mDimensionality_;
  IOSDoubleArray *mCurveLength_;
  jdouble mTotalLength_;
  IOSObjectArray *mCtl_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief Spline in N dimensions
 @param points [mPoints][dimensionality]
 */
- (instancetype)initWithDoubleArray2:(IOSObjectArray *)points;

- (jdouble)approxLengthWithADXHyperSpline_CubicArray:(IOSObjectArray *)curve;

- (void)getPosWithDouble:(jdouble)p
         withDoubleArray:(IOSDoubleArray *)x;

- (void)getPosWithDouble:(jdouble)p
          withFloatArray:(IOSFloatArray *)x;

- (jdouble)getPosWithDouble:(jdouble)p
                    withInt:(jint)splineNumber;

- (void)getVelocityWithDouble:(jdouble)p
              withDoubleArray:(IOSDoubleArray *)v;

- (void)setupWithDoubleArray2:(IOSObjectArray *)points;

#pragma mark Package-Private

+ (IOSObjectArray *)calcNaturalCubicWithInt:(jint)n
                            withDoubleArray:(IOSDoubleArray *)x;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXHyperSpline)

J2OBJC_FIELD_SETTER(ADXHyperSpline, mCurve_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ADXHyperSpline, mCurveLength_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(ADXHyperSpline, mCtl_, IOSObjectArray *)

FOUNDATION_EXPORT void ADXHyperSpline_initWithDoubleArray2_(ADXHyperSpline *self, IOSObjectArray *points);

FOUNDATION_EXPORT ADXHyperSpline *new_ADXHyperSpline_initWithDoubleArray2_(IOSObjectArray *points) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXHyperSpline *create_ADXHyperSpline_initWithDoubleArray2_(IOSObjectArray *points);

FOUNDATION_EXPORT void ADXHyperSpline_init(ADXHyperSpline *self);

FOUNDATION_EXPORT ADXHyperSpline *new_ADXHyperSpline_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXHyperSpline *create_ADXHyperSpline_init(void);

FOUNDATION_EXPORT IOSObjectArray *ADXHyperSpline_calcNaturalCubicWithInt_withDoubleArray_(jint n, IOSDoubleArray *x);

J2OBJC_TYPE_LITERAL_HEADER(ADXHyperSpline)

@compatibility_alias AndroidxConstraintlayoutCoreMotionUtilsHyperSpline ADXHyperSpline;

#endif

#if !defined (ADXHyperSpline_Cubic_) && (INCLUDE_ALL_HyperSpline || defined(INCLUDE_ADXHyperSpline_Cubic))
#define ADXHyperSpline_Cubic_

@interface ADXHyperSpline_Cubic : NSObject {
 @public
  jdouble mA_;
  jdouble mB_;
  jdouble mC_;
  jdouble mD_;
}

#pragma mark Public

- (instancetype)initWithDouble:(jdouble)a
                    withDouble:(jdouble)b
                    withDouble:(jdouble)c
                    withDouble:(jdouble)d;

- (jdouble)evalWithDouble:(jdouble)u;

- (jdouble)velWithDouble:(jdouble)v;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXHyperSpline_Cubic)

inline jdouble ADXHyperSpline_Cubic_get_THIRD(void);
#define ADXHyperSpline_Cubic_THIRD 0.3333333333333333
J2OBJC_STATIC_FIELD_CONSTANT(ADXHyperSpline_Cubic, THIRD, jdouble)

inline jdouble ADXHyperSpline_Cubic_get_HALF(void);
#define ADXHyperSpline_Cubic_HALF 0.5
J2OBJC_STATIC_FIELD_CONSTANT(ADXHyperSpline_Cubic, HALF, jdouble)

FOUNDATION_EXPORT void ADXHyperSpline_Cubic_initWithDouble_withDouble_withDouble_withDouble_(ADXHyperSpline_Cubic *self, jdouble a, jdouble b, jdouble c, jdouble d);

FOUNDATION_EXPORT ADXHyperSpline_Cubic *new_ADXHyperSpline_Cubic_initWithDouble_withDouble_withDouble_withDouble_(jdouble a, jdouble b, jdouble c, jdouble d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXHyperSpline_Cubic *create_ADXHyperSpline_Cubic_initWithDouble_withDouble_withDouble_withDouble_(jdouble a, jdouble b, jdouble c, jdouble d);

J2OBJC_TYPE_LITERAL_HEADER(ADXHyperSpline_Cubic)

#endif

#pragma pop_macro("INCLUDE_ALL_HyperSpline")
