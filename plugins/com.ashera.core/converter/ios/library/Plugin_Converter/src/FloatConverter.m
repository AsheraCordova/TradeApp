//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\Plugin_Converter\src\com\ashera\converter\FloatConverter.java
//

#include "FloatConverter.h"
#include "IFragment.h"
#include "J2ObjC_source.h"
#include "PluginInvoker.h"
#include "java/lang/Float.h"
#include "java/util/List.h"
#include "java/util/Map.h"


@implementation ASFloatConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASFloatConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangFloat *)convertFromWithId:(id)value
                     withJavaUtilMap:(id<JavaUtilMap>)dependentAttributesMap
                     withASIFragment:(id<ASIFragment>)fragment {
  if (value == nil) {
    return nil;
  }
  if ([value isKindOfClass:[JavaLangFloat class]]) {
    return ((JavaLangFloat *) value);
  }
  if ([value isKindOfClass:[NSString class]]) {
    return JavaLangFloat_valueOfWithNSString_((NSString *) value);
  }
  return ASPluginInvoker_getFloatWithId_(value);
}

- (JavaLangFloat *)convertToWithId:(JavaLangFloat *)value
                   withASIFragment:(id<ASIFragment>)fragment {
  return value;
}

- (id<JavaUtilList>)getDependentAttributes {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertFromWithId:withJavaUtilMap:withASIFragment:);
  methods[2].selector = @selector(convertToWithId:withASIFragment:);
  methods[3].selector = @selector(getDependentAttributes);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertFrom", "LNSObject;LJavaUtilMap;LASIFragment;", "(Ljava/lang/Object;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;Lcom/ashera/core/IFragment;)Ljava/lang/Float;", "convertTo", "LJavaLangFloat;LASIFragment;", "()Ljava/util/List<Ljava/lang/String;>;", "Ljava/lang/Object;Lcom/ashera/converter/IConverter<Ljava/lang/Float;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ASFloatConverter = { "FloatConverter", "com.ashera.converter", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, 6, -1 };
  return &_ASFloatConverter;
}

@end

void ASFloatConverter_init(ASFloatConverter *self) {
  NSObject_init(self);
}

ASFloatConverter *new_ASFloatConverter_init() {
  J2OBJC_NEW_IMPL(ASFloatConverter, init)
}

ASFloatConverter *create_ASFloatConverter_init() {
  J2OBJC_CREATE_IMPL(ASFloatConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASFloatConverter)
