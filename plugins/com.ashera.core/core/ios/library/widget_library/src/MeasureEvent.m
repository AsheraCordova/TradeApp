//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\MeasureEvent.java
//

#include "J2ObjC_source.h"
#include "MeasureEvent.h"
#include "WidgetEvent.h"


@interface ASMeasureEvent () {
 @public
  jint width_;
  jint height_;
}

@end

@implementation ASMeasureEvent

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASMeasureEvent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)getWidth {
  return width_;
}

- (void)setWidthWithInt:(jint)width {
  self->width_ = width;
}

- (jint)getHeight {
  return height_;
}

- (void)setHeightWithInt:(jint)height {
  self->height_ = height;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getWidth);
  methods[2].selector = @selector(setWidthWithInt:);
  methods[3].selector = @selector(getHeight);
  methods[4].selector = @selector(setHeightWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "width_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "height_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setWidth", "I", "setHeight" };
  static const J2ObjcClassInfo _ASMeasureEvent = { "MeasureEvent", "com.ashera.widget", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_ASMeasureEvent;
}

@end

void ASMeasureEvent_init(ASMeasureEvent *self) {
  ASWidgetEvent_init(self);
}

ASMeasureEvent *new_ASMeasureEvent_init() {
  J2OBJC_NEW_IMPL(ASMeasureEvent, init)
}

ASMeasureEvent *create_ASMeasureEvent_init() {
  J2OBJC_CREATE_IMPL(ASMeasureEvent, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASMeasureEvent)
