//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\R.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_R")
#ifdef RESTRICT_R
#define INCLUDE_ALL_R 0
#else
#define INCLUDE_ALL_R 1
#endif
#undef RESTRICT_R

#if !defined (ADR_) && (INCLUDE_ALL_R || defined(INCLUDE_ADR))
#define ADR_

@interface ADR : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADR)

FOUNDATION_EXPORT void ADR_init(ADR *self);

FOUNDATION_EXPORT ADR *new_ADR_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADR *create_ADR_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADR)

@compatibility_alias RAndroidR ADR;

#endif

#if !defined (ADR_id_) && (INCLUDE_ALL_R || defined(INCLUDE_ADR_id))
#define ADR_id_

@class ADR;

@interface ADR_id : NSObject

#pragma mark Public

- (instancetype)initWithADR:(ADR *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADR_id)

FOUNDATION_EXPORT void ADR_id_initWithADR_(ADR_id *self, ADR *outer$);

FOUNDATION_EXPORT ADR_id *new_ADR_id_initWithADR_(ADR *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADR_id *create_ADR_id_initWithADR_(ADR *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADR_id)

#endif

#if !defined (ADR_attr_) && (INCLUDE_ALL_R || defined(INCLUDE_ADR_attr))
#define ADR_attr_

@interface ADR_attr : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADR_attr)

inline jint ADR_attr_get_state_window_focused(void);
#define ADR_attr_state_window_focused 16842909
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_window_focused, jint)

inline jint ADR_attr_get_state_selected(void);
#define ADR_attr_state_selected 16842913
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_selected, jint)

inline jint ADR_attr_get_state_focused(void);
#define ADR_attr_state_focused 16844130
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_focused, jint)

inline jint ADR_attr_get_state_enabled(void);
#define ADR_attr_state_enabled 16842910
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_enabled, jint)

inline jint ADR_attr_get_state_pressed(void);
#define ADR_attr_state_pressed 16842919
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_pressed, jint)

inline jint ADR_attr_get_state_activated(void);
#define ADR_attr_state_activated 16843518
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_activated, jint)

inline jint ADR_attr_get_state_accelerated(void);
#define ADR_attr_state_accelerated 16843435
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_accelerated, jint)

inline jint ADR_attr_get_state_hovered(void);
#define ADR_attr_state_hovered 16843623
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_hovered, jint)

inline jint ADR_attr_get_state_drag_can_accept(void);
#define ADR_attr_state_drag_can_accept 16843624
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_drag_can_accept, jint)

inline jint ADR_attr_get_state_drag_hovered(void);
#define ADR_attr_state_drag_hovered 16843625
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_drag_hovered, jint)

inline jint ADR_attr_get_state_checked(void);
#define ADR_attr_state_checked 16842912
J2OBJC_STATIC_FIELD_CONSTANT(ADR_attr, state_checked, jint)

FOUNDATION_EXPORT void ADR_attr_init(ADR_attr *self);

FOUNDATION_EXPORT ADR_attr *new_ADR_attr_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADR_attr *create_ADR_attr_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADR_attr)

#endif

#if !defined (ADR_string_) && (INCLUDE_ALL_R || defined(INCLUDE_ADR_string))
#define ADR_string_

@interface ADR_string : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADR_string)

inline jint ADR_string_get_ok(void);
#define ADR_string_ok 0
J2OBJC_STATIC_FIELD_CONSTANT(ADR_string, ok, jint)

inline jint ADR_string_get_cancel(void);
inline jint ADR_string_set_cancel(jint value);
inline jint *ADR_string_getRef_cancel(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ADR_string_cancel;
J2OBJC_STATIC_FIELD_PRIMITIVE(ADR_string, cancel, jint)

inline jint ADR_string_get_negative_duration(void);
inline jint ADR_string_set_negative_duration(jint value);
inline jint *ADR_string_getRef_negative_duration(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ADR_string_negative_duration;
J2OBJC_STATIC_FIELD_PRIMITIVE(ADR_string, negative_duration, jint)

FOUNDATION_EXPORT void ADR_string_init(ADR_string *self);

FOUNDATION_EXPORT ADR_string *new_ADR_string_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADR_string *create_ADR_string_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADR_string)

#endif

#pragma pop_macro("INCLUDE_ALL_R")
