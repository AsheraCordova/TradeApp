//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\text\TextWatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TextWatcher")
#ifdef RESTRICT_TextWatcher
#define INCLUDE_ALL_TextWatcher 0
#else
#define INCLUDE_ALL_TextWatcher 1
#endif
#undef RESTRICT_TextWatcher

#if !defined (ADTextWatcher_) && (INCLUDE_ALL_TextWatcher || defined(INCLUDE_ADTextWatcher))
#define ADTextWatcher_

#define RESTRICT_NoCopySpan 1
#define INCLUDE_ADNoCopySpan 1
#include "NoCopySpan.h"

@protocol ADEditable;
@protocol JavaLangCharSequence;

/*!
 @brief When an object of this type is attached to an Editable, its methods will
  be called when the text is changed.
 */
@protocol ADTextWatcher < ADNoCopySpan, JavaObject >

/*!
 @brief This method is called to notify you that, within <code>s</code>,
  the <code>count</code> characters beginning at <code>start</code>
  are about to be replaced by new text with length <code>after</code>.
 It is an error to attempt to make changes to <code>s</code> from
  this callback.
 */
- (void)beforeTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                          withInt:(jint)start
                                          withInt:(jint)count
                                          withInt:(jint)after;

/*!
 @brief This method is called to notify you that, within <code>s</code>,
  the <code>count</code> characters beginning at <code>start</code>
  have just replaced old text that had length <code>before</code>.
 It is an error to attempt to make changes to <code>s</code> from
  this callback.
 */
- (void)onTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                      withInt:(jint)start
                                      withInt:(jint)before
                                      withInt:(jint)count;

/*!
 @brief This method is called to notify you that, somewhere within 
 <code>s</code>, the text has been changed.
 It is legitimate to make further changes to <code>s</code> from
  this callback, but be careful not to get yourself into an infinite
  loop, because any changes you make will cause this method to be
  called again recursively.
  (You are not told where the change took place because other
  afterTextChanged() methods may already have made other changes
  and invalidated the offsets.  But if you need to know here,
  you can use <code>Spannable.setSpan</code> in <code>onTextChanged</code>
  to mark your place and then look up from here where the span
  ended up.
 */
- (void)afterTextChangedWithADEditable:(id<ADEditable>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(ADTextWatcher)

J2OBJC_TYPE_LITERAL_HEADER(ADTextWatcher)

#define RAndroidTextTextWatcher ADTextWatcher

#endif

#pragma pop_macro("INCLUDE_ALL_TextWatcher")
