//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\model\IFlatMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IFlatMap")
#ifdef RESTRICT_IFlatMap
#define INCLUDE_ALL_IFlatMap 0
#else
#define INCLUDE_ALL_IFlatMap 1
#endif
#undef RESTRICT_IFlatMap

#if !defined (ASIFlatMap_) && (INCLUDE_ALL_IFlatMap || defined(INCLUDE_ASIFlatMap))
#define ASIFlatMap_

@protocol JavaUtilMap;

@protocol ASIFlatMap < JavaObject >

/*!
 @brief Get the hierarchical map encapsulated in this object.
 */
- (id<JavaUtilMap>)getHierarchicalMap;

/*!
 @brief Convert a hierarchical map into a plain map.Create a new instance of the plain map.
 @param documentMap
 */
- (id<JavaUtilMap>)getPlainMap;

/*!
 @brief Check if the path specified actually exists in the plain map.
 @param path
 */
- (jboolean)existsWithNSString:(NSString *)path;

/*!
 @brief Get an element of the hierarchical map by a plain map path.This method simplifies the access to the information
  of the hierarchical map.
 If the path does not map any element in the hierarchical map, then return null. Under
  any type of error, it is returned a null value.
 @param path
 */
- (id)getWithNSString:(NSString *)path;

/*!
 @brief Put a value in the hierarchical map by a plain map path.It is possible to put a List<Object> or Map<String,
  Object> values in the plain map; however, these values must be compatible with a PlainMap object (where every
  leave node is a String) and this is not validated by this method.
 Undefined behavior may happen if it is put a
  List or Map with an incompatible type.
 @param path
 @param value
 @throw PlainMapException
 */
- (void)putWithNSString:(NSString *)path
                 withId:(id)value;

/*!
 @brief Clear the plain map.
 */
- (void)clear;

/*!
 @brief Remove an element (or elements) under the path specified.If the path does not match any element,
  the action is ignored (without throwing any exception).
 @param path
 @throw PlainMapException
 */
- (void)removeWithNSString:(NSString *)path;

/*!
 @brief Add a root path to every element in the map.
 @param rootPath
 */
- (void)addRootPathWithNSString:(NSString *)rootPath;

/*!
 @brief Remove a root path reducing the hierarchy of the map.
 It clears the map and assign to the map the value at rootPath.
 @param rootPath
 @throw PlainMapException
 */
- (void)removeRootPathWithNSString:(NSString *)rootPath;

/*!
 @brief Get the parent element name.If there is any problem or there is not one and only one element, then return null.
 @throw PlainMapException
 */
- (NSString *)getParent;

/*!
 @brief Extract the parent element.The map is modified after the extraction of the root element and this root element
  name is returned.
 @throw PlainMapException
 */
- (NSString *)extractParent;

@end

J2OBJC_EMPTY_STATIC_INIT(ASIFlatMap)

J2OBJC_TYPE_LITERAL_HEADER(ASIFlatMap)

#define ComAsheraModelIFlatMap ASIFlatMap

#endif

#pragma pop_macro("INCLUDE_ALL_IFlatMap")
