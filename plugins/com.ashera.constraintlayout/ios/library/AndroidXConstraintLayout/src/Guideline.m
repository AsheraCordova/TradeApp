//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\widget\Guideline.java
//

#include "ConstraintLayout.h"
#include "Context.h"
#include "Guideline.h"
#include "J2ObjC_source.h"
#include "View.h"
#include "ViewGroup.h"

static void (*ADXGuideline_super$_setVisibilityWithInt_)(id, SEL, jint);


J2OBJC_INITIALIZED_DEFN(ADXGuideline)

@implementation ADXGuideline

- (void)setVisibilityWithInt:(jint)visibility {
}

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec {
  [self setMeasuredDimensionWithInt:0 withInt:0];
}

- (void)setGuidelineBeginWithInt:(jint)margin {
  ADXConstraintLayout_LayoutParams *params = (ADXConstraintLayout_LayoutParams *) cast_chk([self getLayoutParams], [ADXConstraintLayout_LayoutParams class]);
  ((ADXConstraintLayout_LayoutParams *) nil_chk(params))->guideBegin_ = margin;
  [self setLayoutParamsWithADViewGroup_LayoutParams:params];
}

- (void)setGuidelineEndWithInt:(jint)margin {
  ADXConstraintLayout_LayoutParams *params = (ADXConstraintLayout_LayoutParams *) cast_chk([self getLayoutParams], [ADXConstraintLayout_LayoutParams class]);
  ((ADXConstraintLayout_LayoutParams *) nil_chk(params))->guideEnd_ = margin;
  [self setLayoutParamsWithADViewGroup_LayoutParams:params];
}

- (void)setGuidelinePercentWithFloat:(jfloat)ratio {
  ADXConstraintLayout_LayoutParams *params = (ADXConstraintLayout_LayoutParams *) cast_chk([self getLayoutParams], [ADXConstraintLayout_LayoutParams class]);
  ((ADXConstraintLayout_LayoutParams *) nil_chk(params))->guidePercent_ = ratio;
  [self setLayoutParamsWithADViewGroup_LayoutParams:params];
}

- (instancetype)initWithADContext:(ADContext *)context {
  ADXGuideline_initWithADContext_(self, context);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXGuideline_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setVisibilityWithInt:);
  methods[1].selector = @selector(onMeasureWithInt:withInt:);
  methods[2].selector = @selector(setGuidelineBeginWithInt:);
  methods[3].selector = @selector(setGuidelineEndWithInt:);
  methods[4].selector = @selector(setGuidelinePercentWithFloat:);
  methods[5].selector = @selector(initWithADContext:);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setVisibility", "I", "onMeasure", "II", "setGuidelineBegin", "setGuidelineEnd", "setGuidelinePercent", "F", "LADContext;" };
  static const J2ObjcClassInfo _ADXGuideline = { "Guideline", "androidx.constraintlayout.widget", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, -1, -1, -1, -1 };
  return &_ADXGuideline;
}

+ (void)initialize {
  if (self == [ADXGuideline class]) {
    ADXGuideline_super$_setVisibilityWithInt_ = (void (*)(id, SEL, jint))[ADView instanceMethodForSelector:@selector(setVisibilityWithInt:)];
    J2OBJC_SET_INITIALIZED(ADXGuideline)
  }
}

@end

void ADXGuideline_initWithADContext_(ADXGuideline *self, ADContext *context) {
  ADView_init(self);
  ADXGuideline_super$_setVisibilityWithInt_(self, @selector(setVisibilityWithInt:), ADView_GONE);
}

ADXGuideline *new_ADXGuideline_initWithADContext_(ADContext *context) {
  J2OBJC_NEW_IMPL(ADXGuideline, initWithADContext_, context)
}

ADXGuideline *create_ADXGuideline_initWithADContext_(ADContext *context) {
  J2OBJC_CREATE_IMPL(ADXGuideline, initWithADContext_, context)
}

void ADXGuideline_init(ADXGuideline *self) {
  ADView_init(self);
  ADXGuideline_super$_setVisibilityWithInt_(self, @selector(setVisibilityWithInt:), ADView_GONE);
}

ADXGuideline *new_ADXGuideline_init() {
  J2OBJC_NEW_IMPL(ADXGuideline, init)
}

ADXGuideline *create_ADXGuideline_init() {
  J2OBJC_CREATE_IMPL(ADXGuideline, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXGuideline)
