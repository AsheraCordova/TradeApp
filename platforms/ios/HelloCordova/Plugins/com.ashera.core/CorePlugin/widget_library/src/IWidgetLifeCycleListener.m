//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\IWidgetLifeCycleListener.java
//

#include "IOSObjectArray.h"
#include "IWidgetLifeCycleListener.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"


@interface ASIWidgetLifeCycleListener : NSObject

@end

__attribute__((unused)) static void ASIWidgetLifeCycleListener_EventId_initWithNSString_withInt_(ASIWidgetLifeCycleListener_EventId *self, NSString *__name, jint __ordinal);

@implementation ASIWidgetLifeCycleListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(eventOccurredWithASIWidgetLifeCycleListener_EventId:withASWidgetEvent:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "eventOccurred", "LASIWidgetLifeCycleListener_EventId;LASWidgetEvent;", "LASIWidgetLifeCycleListener_EventId;" };
  static const J2ObjcClassInfo _ASIWidgetLifeCycleListener = { "IWidgetLifeCycleListener", "com.ashera.widget", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, 2, -1, -1, -1 };
  return &_ASIWidgetLifeCycleListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ASIWidgetLifeCycleListener)

J2OBJC_INITIALIZED_DEFN(ASIWidgetLifeCycleListener_EventId)

ASIWidgetLifeCycleListener_EventId *ASIWidgetLifeCycleListener_EventId_values_[2];

@implementation ASIWidgetLifeCycleListener_EventId

+ (IOSObjectArray *)values {
  return ASIWidgetLifeCycleListener_EventId_values();
}

+ (ASIWidgetLifeCycleListener_EventId *)valueOfWithNSString:(NSString *)name {
  return ASIWidgetLifeCycleListener_EventId_valueOfWithNSString_(name);
}

- (ASIWidgetLifeCycleListener_EventId_Enum)toNSEnum {
  return (ASIWidgetLifeCycleListener_EventId_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LASIWidgetLifeCycleListener_EventId;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASIWidgetLifeCycleListener_EventId;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "measureFinished", "LASIWidgetLifeCycleListener_EventId;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "onLayout", "LASIWidgetLifeCycleListener_EventId;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ASIWidgetLifeCycleListener_EventId, measureFinished), &JreEnum(ASIWidgetLifeCycleListener_EventId, onLayout), "LASIWidgetLifeCycleListener;", "Ljava/lang/Enum<Lcom/ashera/widget/IWidgetLifeCycleListener$EventId;>;" };
  static const J2ObjcClassInfo _ASIWidgetLifeCycleListener_EventId = { "EventId", "com.ashera.widget", ptrTable, methods, fields, 7, 0x4019, 2, 2, 4, -1, -1, 5, -1 };
  return &_ASIWidgetLifeCycleListener_EventId;
}

+ (void)initialize {
  if (self == [ASIWidgetLifeCycleListener_EventId class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 2 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 2; i++) {
      ((void)(ASIWidgetLifeCycleListener_EventId_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ASIWidgetLifeCycleListener_EventId_initWithNSString_withInt_(e, JreEnumConstantName(ASIWidgetLifeCycleListener_EventId_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ASIWidgetLifeCycleListener_EventId)
  }
}

@end

void ASIWidgetLifeCycleListener_EventId_initWithNSString_withInt_(ASIWidgetLifeCycleListener_EventId *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ASIWidgetLifeCycleListener_EventId_values() {
  ASIWidgetLifeCycleListener_EventId_initialize();
  return [IOSObjectArray arrayWithObjects:ASIWidgetLifeCycleListener_EventId_values_ count:2 type:ASIWidgetLifeCycleListener_EventId_class_()];
}

ASIWidgetLifeCycleListener_EventId *ASIWidgetLifeCycleListener_EventId_valueOfWithNSString_(NSString *name) {
  ASIWidgetLifeCycleListener_EventId_initialize();
  for (int i = 0; i < 2; i++) {
    ASIWidgetLifeCycleListener_EventId *e = ASIWidgetLifeCycleListener_EventId_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ASIWidgetLifeCycleListener_EventId *ASIWidgetLifeCycleListener_EventId_fromOrdinal(NSUInteger ordinal) {
  ASIWidgetLifeCycleListener_EventId_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ASIWidgetLifeCycleListener_EventId_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASIWidgetLifeCycleListener_EventId)
