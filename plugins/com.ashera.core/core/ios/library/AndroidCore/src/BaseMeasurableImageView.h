//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\com\ashera\view\BaseMeasurableImageView.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_BaseMeasurableImageView")
#ifdef RESTRICT_BaseMeasurableImageView
#define INCLUDE_ALL_BaseMeasurableImageView 0
#else
#define INCLUDE_ALL_BaseMeasurableImageView 1
#endif
#undef RESTRICT_BaseMeasurableImageView

#if !defined (ASBaseMeasurableImageView_) && (INCLUDE_ALL_BaseMeasurableImageView || defined(INCLUDE_ASBaseMeasurableImageView))
#define ASBaseMeasurableImageView_

#define RESTRICT_View 1
#define INCLUDE_ADView 1
#include "View.h"

@class ADDrawable;
@class ASRectM;
@protocol ASIWidget;

@interface ASBaseMeasurableImageView : ADView

#pragma mark Public

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget;

- (jboolean)getAdjustViewBounds;

- (jint)getBaseline;

/*!
 @brief Checks whether this view's baseline is considered the bottom of the view.
 @return True if the ImageView's baseline is considered the bottom of the view, false if otherwise.
 - seealso: #setBaselineAlignBottom(boolean)
 */
- (jboolean)getBaselineAlignBottom;

- (ASRectM *)getCropPaddingClipBounds;

- (jboolean)getCropToPadding;

- (ASRectM *)getImageBounds;

- (ASRectM *)getImageBoundsWithInt:(jint)measuredWidth
                           withInt:(jint)measuredHeight;

- (ADDrawable *)getImageDrawable;

- (jint)getMaxHeight;

- (jint)getMaxWidth;

- (NSString *)getScaleType;

- (jint)getScaleTypeInt;

- (id<ASIWidget>)getWidget;

- (jboolean)hasDrawables;

- (void)setAdjustViewBoundsWithBoolean:(jboolean)mAdjustViewBounds;

/*!
 @brief <p>Set the offset of the widget's text baseline from the widget's top
  boundary.
 This value is overridden by the <code>setBaselineAlignBottom(boolean)</code>
  property.</p>
 @param baseline The baseline to use, or -1 if none is to be provided.
 - seealso: #setBaseline(int)
 */
- (void)setBaselineWithInt:(jint)baseline;

/*!
 @brief Sets whether the baseline of this view to the bottom of the view.
 Setting this value overrides any calls to setBaseline.
 @param aligned If true, the image view will be baseline aligned by its bottom edge.
 */
- (void)setBaselineAlignBottomWithBoolean:(jboolean)aligned;

- (void)setCropToPaddingWithBoolean:(jboolean)objValue;

- (void)setImageDrawableWithADDrawable:(ADDrawable *)imageDrawable;

- (void)setMaxHeightWithInt:(jint)mMaxHeight;

- (void)setMaxWidthWithInt:(jint)mMaxWidth;

- (void)setScaleTypeWithNSString:(NSString *)scaleType
                         withInt:(jint)scaleTypeInt;

- (void)setUsePaddingForBoundsWithBoolean:(jboolean)usePaddingForBounds;

#pragma mark Protected

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASBaseMeasurableImageView)

FOUNDATION_EXPORT void ASBaseMeasurableImageView_initWithASIWidget_(ASBaseMeasurableImageView *self, id<ASIWidget> widget);

J2OBJC_TYPE_LITERAL_HEADER(ASBaseMeasurableImageView)

@compatibility_alias ComAsheraViewBaseMeasurableImageView ASBaseMeasurableImageView;

#endif

#pragma pop_macro("INCLUDE_ALL_BaseMeasurableImageView")
