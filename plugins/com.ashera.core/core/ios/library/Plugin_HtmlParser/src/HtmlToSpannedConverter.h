//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\Plugin_HtmlParser\src\com\ashera\parser\html\HtmlToSpannedConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_HtmlToSpannedConverter")
#ifdef RESTRICT_HtmlToSpannedConverter
#define INCLUDE_ALL_HtmlToSpannedConverter 0
#else
#define INCLUDE_ALL_HtmlToSpannedConverter 1
#endif
#undef RESTRICT_HtmlToSpannedConverter

#if !defined (ASHtmlToSpannedConverter_) && (INCLUDE_ALL_HtmlToSpannedConverter || defined(INCLUDE_ASHtmlToSpannedConverter))
#define ASHtmlToSpannedConverter_

#define RESTRICT_OrgXmlSaxContentHandler 1
#define INCLUDE_OrgXmlSaxContentHandler 1
#include "org/xml/sax/ContentHandler.h"

@class IOSCharArray;
@class TSTagSoupParser;
@protocol ASAttributedString;
@protocol ASIFragment;
@protocol JavaUtilMap;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxLocator;

@interface ASHtmlToSpannedConverter : NSObject < OrgXmlSaxContentHandler >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)source
             withTSTagSoupParser:(TSTagSoupParser *)parser
                 withJavaUtilMap:(id<JavaUtilMap>)htmlConfig
                 withASIFragment:(id<ASIFragment>)fragment;

- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)length;

- (id<ASAttributedString>)convert;

- (void)endDocument;

- (void)endElementWithNSString:(NSString *)uri
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)qName;

- (void)endPrefixMappingWithNSString:(NSString *)prefix;

- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)ch
                                 withInt:(jint)start
                                 withInt:(jint)length;

- (void)processingInstructionWithNSString:(NSString *)target
                             withNSString:(NSString *)data;

- (void)setDocumentLocatorWithOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator;

- (void)skippedEntityWithNSString:(NSString *)name;

- (void)startDocument;

- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)attributes;

- (void)startPrefixMappingWithNSString:(NSString *)prefix
                          withNSString:(NSString *)uri;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASHtmlToSpannedConverter)

FOUNDATION_EXPORT void ASHtmlToSpannedConverter_initWithNSString_withTSTagSoupParser_withJavaUtilMap_withASIFragment_(ASHtmlToSpannedConverter *self, NSString *source, TSTagSoupParser *parser, id<JavaUtilMap> htmlConfig, id<ASIFragment> fragment);

FOUNDATION_EXPORT ASHtmlToSpannedConverter *new_ASHtmlToSpannedConverter_initWithNSString_withTSTagSoupParser_withJavaUtilMap_withASIFragment_(NSString *source, TSTagSoupParser *parser, id<JavaUtilMap> htmlConfig, id<ASIFragment> fragment) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASHtmlToSpannedConverter *create_ASHtmlToSpannedConverter_initWithNSString_withTSTagSoupParser_withJavaUtilMap_withASIFragment_(NSString *source, TSTagSoupParser *parser, id<JavaUtilMap> htmlConfig, id<ASIFragment> fragment);

J2OBJC_TYPE_LITERAL_HEADER(ASHtmlToSpannedConverter)

@compatibility_alias ComAsheraParserHtmlHtmlToSpannedConverter ASHtmlToSpannedConverter;

#endif

#pragma pop_macro("INCLUDE_ALL_HtmlToSpannedConverter")
