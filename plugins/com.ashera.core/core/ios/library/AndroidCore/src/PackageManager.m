//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\content\pm\PackageManager.java
//

#include "ApplicationInfo.h"
#include "J2ObjC_source.h"
#include "PackageManager.h"
#include "java/lang/RuntimeException.h"


NSString *ADPackageManager_GET_META_DATA;

@implementation ADPackageManager

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADPackageManager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ADApplicationInfo *)getApplicationInfoWithNSString:(NSString *)packageName
                                         withNSString:(NSString *)getMetaData {
  return create_ADApplicationInfo_init();
}

- (ADPackageManager_PackageInfo *)getPackageInfoWithNSString:(NSString *)packageName
                                                     withInt:(jint)i {
  return create_ADPackageManager_PackageInfo_initWithADPackageManager_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADApplicationInfo;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LADPackageManager_PackageInfo;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getApplicationInfoWithNSString:withNSString:);
  methods[2].selector = @selector(getPackageInfoWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PERMISSION_GRANTED", "I", .constantValue.asInt = ADPackageManager_PERMISSION_GRANTED, 0x19, -1, -1, -1, -1 },
    { "GET_META_DATA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "getApplicationInfo", "LNSString;LNSString;", "getPackageInfo", "LNSString;I", &ADPackageManager_GET_META_DATA, "LADPackageManager_NameNotFoundException;LADPackageManager_PackageInfo;" };
  static const J2ObjcClassInfo _ADPackageManager = { "PackageManager", "r.android.content.pm", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, 5, -1, -1, -1 };
  return &_ADPackageManager;
}

@end

void ADPackageManager_init(ADPackageManager *self) {
  NSObject_init(self);
}

ADPackageManager *new_ADPackageManager_init() {
  J2OBJC_NEW_IMPL(ADPackageManager, init)
}

ADPackageManager *create_ADPackageManager_init() {
  J2OBJC_CREATE_IMPL(ADPackageManager, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPackageManager)

@implementation ADPackageManager_NameNotFoundException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADPackageManager_NameNotFoundException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADPackageManager;" };
  static const J2ObjcClassInfo _ADPackageManager_NameNotFoundException = { "NameNotFoundException", "r.android.content.pm", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ADPackageManager_NameNotFoundException;
}

@end

void ADPackageManager_NameNotFoundException_init(ADPackageManager_NameNotFoundException *self) {
  JavaLangRuntimeException_init(self);
}

ADPackageManager_NameNotFoundException *new_ADPackageManager_NameNotFoundException_init() {
  J2OBJC_NEW_IMPL(ADPackageManager_NameNotFoundException, init)
}

ADPackageManager_NameNotFoundException *create_ADPackageManager_NameNotFoundException_init() {
  J2OBJC_CREATE_IMPL(ADPackageManager_NameNotFoundException, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPackageManager_NameNotFoundException)

@implementation ADPackageManager_PackageInfo

- (instancetype)initWithADPackageManager:(ADPackageManager *)outer$ {
  ADPackageManager_PackageInfo_initWithADPackageManager_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADPackageManager:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "versionCode_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADPackageManager;" };
  static const J2ObjcClassInfo _ADPackageManager_PackageInfo = { "PackageInfo", "r.android.content.pm", ptrTable, methods, fields, 7, 0x1, 1, 1, 0, -1, -1, -1, -1 };
  return &_ADPackageManager_PackageInfo;
}

@end

void ADPackageManager_PackageInfo_initWithADPackageManager_(ADPackageManager_PackageInfo *self, ADPackageManager *outer$) {
  NSObject_init(self);
}

ADPackageManager_PackageInfo *new_ADPackageManager_PackageInfo_initWithADPackageManager_(ADPackageManager *outer$) {
  J2OBJC_NEW_IMPL(ADPackageManager_PackageInfo, initWithADPackageManager_, outer$)
}

ADPackageManager_PackageInfo *create_ADPackageManager_PackageInfo_initWithADPackageManager_(ADPackageManager *outer$) {
  J2OBJC_CREATE_IMPL(ADPackageManager_PackageInfo, initWithADPackageManager_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPackageManager_PackageInfo)
