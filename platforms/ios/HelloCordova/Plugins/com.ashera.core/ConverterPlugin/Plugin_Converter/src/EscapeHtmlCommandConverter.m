//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\Plugin_Converter\src\com\ashera\converter\EscapeHtmlCommandConverter.java
//

#include "AttributeCommand.h"
#include "BaseAttributeCommand.h"
#include "EscapeHtmlCommandConverter.h"
#include "IOSObjectArray.h"
#include "IWidget.h"
#include "J2ObjC_source.h"


@interface ASEscapeHtmlCommandConverter ()

- (id)escapeHtmlWithNSString:(NSString *)text;

@end

__attribute__((unused)) static id ASEscapeHtmlCommandConverter_escapeHtmlWithNSString_(ASEscapeHtmlCommandConverter *self, NSString *text);

@implementation ASEscapeHtmlCommandConverter

- (instancetype)initWithNSString:(NSString *)id_ {
  ASEscapeHtmlCommandConverter_initWithNSString_(self, id_);
  return self;
}

- (id)modifyValueWithASIWidget:(id<ASIWidget>)widget
                        withId:(id)nativeView
                  withNSString:(NSString *)phase
                  withNSString:(NSString *)attributeName
                        withId:(id)value {
  if (value == nil) {
    return nil;
  }
  NSString *text = (NSString *) cast_chk(value, [NSString class]);
  return ASEscapeHtmlCommandConverter_escapeHtmlWithNSString_(self, text);
}

- (id)escapeHtmlWithNSString:(NSString *)text {
  return ASEscapeHtmlCommandConverter_escapeHtmlWithNSString_(self, text);
}

- (id<ASAttributeCommand>)newInstanceWithNSObjectArray:(IOSObjectArray *)args {
  ASEscapeHtmlCommandConverter *autoLinkifyCommandConverter = create_ASEscapeHtmlCommandConverter_initWithNSString_(self->id__);
  [autoLinkifyCommandConverter updateArgsWithNSObjectArray:args];
  [autoLinkifyCommandConverter setPriorityWithInt:98];
  return autoLinkifyCommandConverter;
}

- (void)updateArgsWithNSObjectArray:(IOSObjectArray *)args {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 3, 0, -1, -1, -1, -1 },
    { NULL, "LASAttributeCommand;", 0x81, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 6, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(modifyValueWithASIWidget:withId:withNSString:withNSString:withId:);
  methods[2].selector = @selector(escapeHtmlWithNSString:);
  methods[3].selector = @selector(newInstanceWithNSObjectArray:);
  methods[4].selector = @selector(updateArgsWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "modifyValue", "LASIWidget;LNSObject;LNSString;LNSString;LNSObject;", "escapeHtml", "newInstance", "[LNSObject;", "updateArgs" };
  static const J2ObjcClassInfo _ASEscapeHtmlCommandConverter = { "EscapeHtmlCommandConverter", "com.ashera.converter", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_ASEscapeHtmlCommandConverter;
}

@end

void ASEscapeHtmlCommandConverter_initWithNSString_(ASEscapeHtmlCommandConverter *self, NSString *id_) {
  ASBaseAttributeCommand_initWithNSString_(self, id_);
}

ASEscapeHtmlCommandConverter *new_ASEscapeHtmlCommandConverter_initWithNSString_(NSString *id_) {
  J2OBJC_NEW_IMPL(ASEscapeHtmlCommandConverter, initWithNSString_, id_)
}

ASEscapeHtmlCommandConverter *create_ASEscapeHtmlCommandConverter_initWithNSString_(NSString *id_) {
  J2OBJC_CREATE_IMPL(ASEscapeHtmlCommandConverter, initWithNSString_, id_)
}

id ASEscapeHtmlCommandConverter_escapeHtmlWithNSString_(ASEscapeHtmlCommandConverter *self, NSString *text) {
  return [((NSString *) nil_chk([((NSString *) nil_chk([((NSString *) nil_chk([((NSString *) nil_chk([((NSString *) nil_chk(text)) java_replaceAll:@"&" withReplacement:@"&amp;"])) java_replaceAll:@"<" withReplacement:@"&lt;"])) java_replaceAll:@">" withReplacement:@"&gt;"])) java_replaceAll:@"\"" withReplacement:@"&quot;"])) java_replaceAll:@"'" withReplacement:@"&#039;"];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASEscapeHtmlCommandConverter)
