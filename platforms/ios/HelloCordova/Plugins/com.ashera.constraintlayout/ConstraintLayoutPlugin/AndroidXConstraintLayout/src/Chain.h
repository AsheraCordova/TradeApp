//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\widgets\Chain.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Chain")
#ifdef RESTRICT_Chain
#define INCLUDE_ALL_Chain 0
#else
#define INCLUDE_ALL_Chain 1
#endif
#undef RESTRICT_Chain

#if !defined (ADXChain_) && (INCLUDE_ALL_Chain || defined(INCLUDE_ADXChain))
#define ADXChain_

@class ADXChainHead;
@class ADXConstraintWidgetContainer;
@class ADXLinearSystem;
@class JavaUtilArrayList;

/*!
 @brief Chain management and constraints creation
 */
@interface ADXChain : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Apply specific rules for dealing with chains of widgets.
 Chains are defined as a list of widget linked together with bi-directional connections
 @param constraintWidgetContainer root container
 @param system the linear system we add the equations to
 @param widgets
 @param orientation HORIZONTAL or VERTICAL
 */
+ (void)applyChainConstraintsWithADXConstraintWidgetContainer:(ADXConstraintWidgetContainer *)constraintWidgetContainer
                                          withADXLinearSystem:(ADXLinearSystem *)system
                                        withJavaUtilArrayList:(JavaUtilArrayList *)widgets
                                                      withInt:(jint)orientation;

#pragma mark Package-Private

/*!
 @brief Apply specific rules for dealing with chains of widgets.
 Chains are defined as a list of widget linked together with bi-directional connections
 @param container the root container
 @param system the linear system we add the equations to
 @param orientation HORIZONTAL or VERTICAL
 @param offset 0 or 2 to accommodate for HORIZONTAL / VERTICAL
 @param chainHead a chain represented by its main elements
 */
+ (void)applyChainConstraintsWithADXConstraintWidgetContainer:(ADXConstraintWidgetContainer *)container
                                          withADXLinearSystem:(ADXLinearSystem *)system
                                                      withInt:(jint)orientation
                                                      withInt:(jint)offset
                                             withADXChainHead:(ADXChainHead *)chainHead;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXChain)

inline jboolean ADXChain_get_USE_CHAIN_OPTIMIZATION(void);
#define ADXChain_USE_CHAIN_OPTIMIZATION false
J2OBJC_STATIC_FIELD_CONSTANT(ADXChain, USE_CHAIN_OPTIMIZATION, jboolean)

FOUNDATION_EXPORT void ADXChain_init(ADXChain *self);

FOUNDATION_EXPORT ADXChain *new_ADXChain_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXChain *create_ADXChain_init(void);

FOUNDATION_EXPORT void ADXChain_applyChainConstraintsWithADXConstraintWidgetContainer_withADXLinearSystem_withJavaUtilArrayList_withInt_(ADXConstraintWidgetContainer *constraintWidgetContainer, ADXLinearSystem *system, JavaUtilArrayList *widgets, jint orientation);

FOUNDATION_EXPORT void ADXChain_applyChainConstraintsWithADXConstraintWidgetContainer_withADXLinearSystem_withInt_withInt_withADXChainHead_(ADXConstraintWidgetContainer *container, ADXLinearSystem *system, jint orientation, jint offset, ADXChainHead *chainHead);

J2OBJC_TYPE_LITERAL_HEADER(ADXChain)

@compatibility_alias AndroidxConstraintlayoutCoreWidgetsChain ADXChain;

#endif

#pragma pop_macro("INCLUDE_ALL_Chain")
