//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\widget\LinearLayout.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_LinearLayout")
#ifdef RESTRICT_LinearLayout
#define INCLUDE_ALL_LinearLayout 0
#else
#define INCLUDE_ALL_LinearLayout 1
#endif
#undef RESTRICT_LinearLayout

#if !defined (ADLinearLayout_) && (INCLUDE_ALL_LinearLayout || defined(INCLUDE_ADLinearLayout))
#define ADLinearLayout_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup 1
#include "ViewGroup.h"

@class ADContext;
@class ADDrawable;
@class ADLinearLayout_LayoutParams;
@class ADView;
@class ADViewGroup_LayoutParams;
@protocol ADCanvas;

@interface ADLinearLayout : ADViewGroup

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithADContext:(ADContext *)context;

- (jint)getBaseline;

- (jint)getBaselineAlignedChildIndex;

- (ADDrawable *)getDividerDrawable;

- (jint)getDividerPadding;

- (jint)getGravity;

- (jint)getOrientation;

- (jint)getShowDividers;

- (jfloat)getWeightSum;

- (jboolean)isBaselineAligned;

- (jboolean)isMeasureWithLargestChildEnabled;

- (void)setBaselineAlignedWithBoolean:(jboolean)baselineAligned;

- (void)setBaselineAlignedChildIndexWithInt:(jint)i;

- (void)setDividerDrawableWithADDrawable:(ADDrawable *)divider;

- (void)setDividerPaddingWithInt:(jint)padding;

- (void)setGravityWithInt:(jint)gravity;

- (void)setMeasureWithLargestChildEnabledWithBoolean:(jboolean)enabled;

- (void)setOrientationWithInt:(jint)orientation;

- (void)setShowDividersWithInt:(jint)showDividers;

- (void)setWeightSumWithFloat:(jfloat)weightSum;

- (void)updateDividerHeightWithInt:(jint)mDividerHeight;

#pragma mark Protected

- (jboolean)checkLayoutParamsWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)p;

- (ADLinearLayout_LayoutParams *)generateDefaultLayoutParams;

- (ADLinearLayout_LayoutParams *)generateLayoutParamsWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)lp;

- (jboolean)hasDividerBeforeChildAtWithInt:(jint)childIndex;

- (void)onDrawWithADCanvas:(id<ADCanvas>)canvas;

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b;

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

#pragma mark Package-Private

- (void)drawDividersHorizontalWithADCanvas:(id<ADCanvas>)canvas;

- (void)drawDividersVerticalWithADCanvas:(id<ADCanvas>)canvas;

- (void)drawHorizontalDividerWithADCanvas:(id<ADCanvas>)canvas
                                  withInt:(jint)top;

- (void)drawVerticalDividerWithADCanvas:(id<ADCanvas>)canvas
                                withInt:(jint)left;

- (jint)getChildrenSkipCountWithADView:(ADView *)child
                               withInt:(jint)index;

- (jint)getLocationOffsetWithADView:(ADView *)child;

- (jint)getNextLocationOffsetWithADView:(ADView *)child;

- (ADView *)getVirtualChildAtWithInt:(jint)index;

- (jint)getVirtualChildCount;

- (void)layoutHorizontalWithInt:(jint)left
                        withInt:(jint)top
                        withInt:(jint)right
                        withInt:(jint)bottom;

- (void)layoutVerticalWithInt:(jint)left
                      withInt:(jint)top
                      withInt:(jint)right
                      withInt:(jint)bottom;

- (void)measureChildBeforeLayoutWithADView:(ADView *)child
                                   withInt:(jint)childIndex
                                   withInt:(jint)widthMeasureSpec
                                   withInt:(jint)totalWidth
                                   withInt:(jint)heightMeasureSpec
                                   withInt:(jint)totalHeight;

- (void)measureHorizontalWithInt:(jint)widthMeasureSpec
                         withInt:(jint)heightMeasureSpec;

- (jint)measureNullChildWithInt:(jint)childIndex;

- (void)measureVerticalWithInt:(jint)widthMeasureSpec
                       withInt:(jint)heightMeasureSpec;

@end

J2OBJC_EMPTY_STATIC_INIT(ADLinearLayout)

inline jint ADLinearLayout_get_HORIZONTAL(void);
#define ADLinearLayout_HORIZONTAL 0
J2OBJC_STATIC_FIELD_CONSTANT(ADLinearLayout, HORIZONTAL, jint)

inline jint ADLinearLayout_get_VERTICAL(void);
#define ADLinearLayout_VERTICAL 1
J2OBJC_STATIC_FIELD_CONSTANT(ADLinearLayout, VERTICAL, jint)

inline jint ADLinearLayout_get_SHOW_DIVIDER_NONE(void);
#define ADLinearLayout_SHOW_DIVIDER_NONE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADLinearLayout, SHOW_DIVIDER_NONE, jint)

inline jint ADLinearLayout_get_SHOW_DIVIDER_BEGINNING(void);
#define ADLinearLayout_SHOW_DIVIDER_BEGINNING 1
J2OBJC_STATIC_FIELD_CONSTANT(ADLinearLayout, SHOW_DIVIDER_BEGINNING, jint)

inline jint ADLinearLayout_get_SHOW_DIVIDER_MIDDLE(void);
#define ADLinearLayout_SHOW_DIVIDER_MIDDLE 2
J2OBJC_STATIC_FIELD_CONSTANT(ADLinearLayout, SHOW_DIVIDER_MIDDLE, jint)

inline jint ADLinearLayout_get_SHOW_DIVIDER_END(void);
#define ADLinearLayout_SHOW_DIVIDER_END 4
J2OBJC_STATIC_FIELD_CONSTANT(ADLinearLayout, SHOW_DIVIDER_END, jint)

FOUNDATION_EXPORT void ADLinearLayout_initWithADContext_(ADLinearLayout *self, ADContext *context);

FOUNDATION_EXPORT ADLinearLayout *new_ADLinearLayout_initWithADContext_(ADContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADLinearLayout *create_ADLinearLayout_initWithADContext_(ADContext *context);

FOUNDATION_EXPORT void ADLinearLayout_init(ADLinearLayout *self);

FOUNDATION_EXPORT ADLinearLayout *new_ADLinearLayout_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADLinearLayout *create_ADLinearLayout_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADLinearLayout)

@compatibility_alias RAndroidWidgetLinearLayout ADLinearLayout;

#endif

#if !defined (ADLinearLayout_LayoutParams_) && (INCLUDE_ALL_LinearLayout || defined(INCLUDE_ADLinearLayout_LayoutParams))
#define ADLinearLayout_LayoutParams_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup_MarginLayoutParams 1
#include "ViewGroup.h"

@class ADViewGroup_LayoutParams;

@interface ADLinearLayout_LayoutParams : ADViewGroup_MarginLayoutParams {
 @public
  jfloat weight_;
  jint gravity_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height;

- (instancetype)initWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)p;

- (instancetype)initWithADLinearLayout_LayoutParams:(ADLinearLayout_LayoutParams *)source;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithADViewGroup_MarginLayoutParams:(ADViewGroup_MarginLayoutParams *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADLinearLayout_LayoutParams)

FOUNDATION_EXPORT void ADLinearLayout_LayoutParams_initWithInt_withInt_(ADLinearLayout_LayoutParams *self, jint width, jint height);

FOUNDATION_EXPORT ADLinearLayout_LayoutParams *new_ADLinearLayout_LayoutParams_initWithInt_withInt_(jint width, jint height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADLinearLayout_LayoutParams *create_ADLinearLayout_LayoutParams_initWithInt_withInt_(jint width, jint height);

FOUNDATION_EXPORT void ADLinearLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADLinearLayout_LayoutParams *self, ADViewGroup_LayoutParams *p);

FOUNDATION_EXPORT ADLinearLayout_LayoutParams *new_ADLinearLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *p) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADLinearLayout_LayoutParams *create_ADLinearLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *p);

FOUNDATION_EXPORT void ADLinearLayout_LayoutParams_initWithADLinearLayout_LayoutParams_(ADLinearLayout_LayoutParams *self, ADLinearLayout_LayoutParams *source);

FOUNDATION_EXPORT ADLinearLayout_LayoutParams *new_ADLinearLayout_LayoutParams_initWithADLinearLayout_LayoutParams_(ADLinearLayout_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADLinearLayout_LayoutParams *create_ADLinearLayout_LayoutParams_initWithADLinearLayout_LayoutParams_(ADLinearLayout_LayoutParams *source);

J2OBJC_TYPE_LITERAL_HEADER(ADLinearLayout_LayoutParams)

#endif

#pragma pop_macro("INCLUDE_ALL_LinearLayout")
