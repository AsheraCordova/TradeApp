//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\motion\MotionPaths.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MotionPaths")
#ifdef RESTRICT_MotionPaths
#define INCLUDE_ALL_MotionPaths 0
#else
#define INCLUDE_ALL_MotionPaths 1
#endif
#undef RESTRICT_MotionPaths

#if !defined (ADXMotionPaths_) && (INCLUDE_ALL_MotionPaths || defined(INCLUDE_ADXMotionPaths))
#define ADXMotionPaths_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class ADXEasing;
@class ADXMotion;
@class ADXMotionKeyPosition;
@class ADXMotionWidget;
@class IOSBooleanArray;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilHashMap;

/*!
 @brief This is used to capture and play back path of the layout.
 It is used to set the bounds of the view (view.layout(l, t, r, b))
 */
@interface ADXMotionPaths : NSObject < JavaLangComparable > {
 @public
  ADXEasing *mKeyFrameEasing_;
  jint mDrawPath_;
  jfloat time_;
  jfloat position_;
  jfloat x_;
  jfloat y_;
  jfloat width_;
  jfloat height_;
  jfloat mPathRotate_;
  jfloat mProgress_;
  jint mPathMotionArc_;
  jint mAnimateRelativeTo_;
  jfloat mRelativeAngle_;
  ADXMotion *mRelativeToController_;
  JavaUtilHashMap *customAttributes_;
  jint mMode_;
  jint mAnimateCircleAngleTo_;
  IOSDoubleArray *mTempValue_;
  IOSDoubleArray *mTempDelta_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief takes the new keyPosition
 @param c
 @param startTimePoint
 @param endTimePoint
 */
- (instancetype)initWithInt:(jint)parentWidth
                    withInt:(jint)parentHeight
   withADXMotionKeyPosition:(ADXMotionKeyPosition *)c
         withADXMotionPaths:(ADXMotionPaths *)startTimePoint
         withADXMotionPaths:(ADXMotionPaths *)endTimePoint;

- (void)applyParametersWithADXMotionWidget:(ADXMotionWidget *)c;

- (jint)compareToWithId:(ADXMotionPaths *)o;

- (void)configureRelativeToWithADXMotion:(ADXMotion *)toOrbit;

- (void)setupRelativeWithADXMotion:(ADXMotion *)mc
                withADXMotionPaths:(ADXMotionPaths *)relative;

#pragma mark Package-Private

- (void)differentWithADXMotionPaths:(ADXMotionPaths *)points
                   withBooleanArray:(IOSBooleanArray *)mask
                  withNSStringArray:(IOSObjectArray *)custom
                        withBoolean:(jboolean)arcMode;

- (void)fillStandardWithDoubleArray:(IOSDoubleArray *)data
                       withIntArray:(IOSIntArray *)toUse;

- (void)getBoundsWithIntArray:(IOSIntArray *)toUse
              withDoubleArray:(IOSDoubleArray *)data
               withFloatArray:(IOSFloatArray *)point
                      withInt:(jint)offset;

- (void)getCenterWithDouble:(jdouble)p
               withIntArray:(IOSIntArray *)toUse
            withDoubleArray:(IOSDoubleArray *)data
             withFloatArray:(IOSFloatArray *)point
            withDoubleArray:(IOSDoubleArray *)vdata
             withFloatArray:(IOSFloatArray *)velocity;

- (void)getCenterWithDouble:(jdouble)p
               withIntArray:(IOSIntArray *)toUse
            withDoubleArray:(IOSDoubleArray *)data
             withFloatArray:(IOSFloatArray *)point
                    withInt:(jint)offset;

- (void)getCenterVelocityWithDouble:(jdouble)p
                       withIntArray:(IOSIntArray *)toUse
                    withDoubleArray:(IOSDoubleArray *)data
                     withFloatArray:(IOSFloatArray *)point
                            withInt:(jint)offset;

- (jint)getCustomDataWithNSString:(NSString *)name
                  withDoubleArray:(IOSDoubleArray *)value
                          withInt:(jint)offset;

- (jint)getCustomDataCountWithNSString:(NSString *)name;

- (void)getRectWithIntArray:(IOSIntArray *)toUse
            withDoubleArray:(IOSDoubleArray *)data
             withFloatArray:(IOSFloatArray *)path
                    withInt:(jint)offset;

- (jboolean)hasCustomDataWithNSString:(NSString *)name;

/*!
 @brief set up with Cartesian
 @param c
 @param startTimePoint
 @param endTimePoint
 */
- (void)initCartesianWithADXMotionKeyPosition:(ADXMotionKeyPosition *)c
                           withADXMotionPaths:(ADXMotionPaths *)startTimePoint
                           withADXMotionPaths:(ADXMotionPaths *)endTimePoint OBJC_METHOD_FAMILY_NONE;

- (void)initPathWithADXMotionKeyPosition:(ADXMotionKeyPosition *)c
                      withADXMotionPaths:(ADXMotionPaths *)startTimePoint
                      withADXMotionPaths:(ADXMotionPaths *)endTimePoint OBJC_METHOD_FAMILY_NONE;

- (void)initPolarWithInt:(jint)parentWidth
                 withInt:(jint)parentHeight
withADXMotionKeyPosition:(ADXMotionKeyPosition *)c
      withADXMotionPaths:(ADXMotionPaths *)s
      withADXMotionPaths:(ADXMotionPaths *)e OBJC_METHOD_FAMILY_NONE;

- (void)initScreenWithInt:(jint)parentWidth
                  withInt:(jint)parentHeight
 withADXMotionKeyPosition:(ADXMotionKeyPosition *)c
       withADXMotionPaths:(ADXMotionPaths *)startTimePoint
       withADXMotionPaths:(ADXMotionPaths *)endTimePoint OBJC_METHOD_FAMILY_NONE;

- (void)setBoundsWithFloat:(jfloat)x
                 withFloat:(jfloat)y
                 withFloat:(jfloat)w
                 withFloat:(jfloat)h;

/*!
 @brief mAnchorDpDt
 @param locationX
 @param locationY
 @param mAnchorDpDt
 @param toUse
 @param deltaData
 @param data
 */
- (void)setDpDtWithFloat:(jfloat)locationX
               withFloat:(jfloat)locationY
          withFloatArray:(IOSFloatArray *)mAnchorDpDt
            withIntArray:(IOSIntArray *)toUse
         withDoubleArray:(IOSDoubleArray *)deltaData
         withDoubleArray:(IOSDoubleArray *)data;

- (void)setViewWithFloat:(jfloat)position
     withADXMotionWidget:(ADXMotionWidget *)view
            withIntArray:(IOSIntArray *)toUse
         withDoubleArray:(IOSDoubleArray *)data
         withDoubleArray:(IOSDoubleArray *)slope
         withDoubleArray:(IOSDoubleArray *)cycle;

@end

J2OBJC_STATIC_INIT(ADXMotionPaths)

J2OBJC_FIELD_SETTER(ADXMotionPaths, mKeyFrameEasing_, ADXEasing *)
J2OBJC_FIELD_SETTER(ADXMotionPaths, mRelativeToController_, ADXMotion *)
J2OBJC_FIELD_SETTER(ADXMotionPaths, customAttributes_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ADXMotionPaths, mTempValue_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(ADXMotionPaths, mTempDelta_, IOSDoubleArray *)

inline NSString *ADXMotionPaths_get_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXMotionPaths_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXMotionPaths, TAG, NSString *)

inline jboolean ADXMotionPaths_get_DEBUG(void);
#define ADXMotionPaths_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, DEBUG, jboolean)

inline jboolean ADXMotionPaths_get_OLD_WAY(void);
#define ADXMotionPaths_OLD_WAY false
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, OLD_WAY, jboolean)

inline jint ADXMotionPaths_get_OFF_POSITION(void);
#define ADXMotionPaths_OFF_POSITION 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, OFF_POSITION, jint)

inline jint ADXMotionPaths_get_OFF_X(void);
#define ADXMotionPaths_OFF_X 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, OFF_X, jint)

inline jint ADXMotionPaths_get_OFF_Y(void);
#define ADXMotionPaths_OFF_Y 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, OFF_Y, jint)

inline jint ADXMotionPaths_get_OFF_WIDTH(void);
#define ADXMotionPaths_OFF_WIDTH 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, OFF_WIDTH, jint)

inline jint ADXMotionPaths_get_OFF_HEIGHT(void);
#define ADXMotionPaths_OFF_HEIGHT 4
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, OFF_HEIGHT, jint)

inline jint ADXMotionPaths_get_OFF_PATH_ROTATE(void);
#define ADXMotionPaths_OFF_PATH_ROTATE 5
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, OFF_PATH_ROTATE, jint)

inline jint ADXMotionPaths_get_PERPENDICULAR(void);
#define ADXMotionPaths_PERPENDICULAR 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, PERPENDICULAR, jint)

inline jint ADXMotionPaths_get_CARTESIAN(void);
#define ADXMotionPaths_CARTESIAN 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, CARTESIAN, jint)

inline jint ADXMotionPaths_get_SCREEN(void);
#define ADXMotionPaths_SCREEN 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionPaths, SCREEN, jint)

inline IOSObjectArray *ADXMotionPaths_get_names(void);
inline IOSObjectArray *ADXMotionPaths_set_names(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ADXMotionPaths_names;
J2OBJC_STATIC_FIELD_OBJ(ADXMotionPaths, names, IOSObjectArray *)

FOUNDATION_EXPORT void ADXMotionPaths_init(ADXMotionPaths *self);

FOUNDATION_EXPORT ADXMotionPaths *new_ADXMotionPaths_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXMotionPaths *create_ADXMotionPaths_init(void);

FOUNDATION_EXPORT void ADXMotionPaths_initWithInt_withInt_withADXMotionKeyPosition_withADXMotionPaths_withADXMotionPaths_(ADXMotionPaths *self, jint parentWidth, jint parentHeight, ADXMotionKeyPosition *c, ADXMotionPaths *startTimePoint, ADXMotionPaths *endTimePoint);

FOUNDATION_EXPORT ADXMotionPaths *new_ADXMotionPaths_initWithInt_withInt_withADXMotionKeyPosition_withADXMotionPaths_withADXMotionPaths_(jint parentWidth, jint parentHeight, ADXMotionKeyPosition *c, ADXMotionPaths *startTimePoint, ADXMotionPaths *endTimePoint) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXMotionPaths *create_ADXMotionPaths_initWithInt_withInt_withADXMotionKeyPosition_withADXMotionPaths_withADXMotionPaths_(jint parentWidth, jint parentHeight, ADXMotionKeyPosition *c, ADXMotionPaths *startTimePoint, ADXMotionPaths *endTimePoint);

J2OBJC_TYPE_LITERAL_HEADER(ADXMotionPaths)

@compatibility_alias AndroidxConstraintlayoutCoreMotionMotionPaths ADXMotionPaths;

#endif

#pragma pop_macro("INCLUDE_ALL_MotionPaths")
