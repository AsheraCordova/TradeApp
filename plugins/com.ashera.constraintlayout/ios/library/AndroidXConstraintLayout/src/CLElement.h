//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\parser\CLElement.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CLElement")
#ifdef RESTRICT_CLElement
#define INCLUDE_ALL_CLElement 0
#else
#define INCLUDE_ALL_CLElement 1
#endif
#undef RESTRICT_CLElement

#if !defined (ADXCLElement_) && (INCLUDE_ALL_CLElement || defined(INCLUDE_ADXCLElement))
#define ADXCLElement_

@class ADXCLContainer;
@class IOSCharArray;
@class JavaLangStringBuilder;

@interface ADXCLElement : NSObject {
 @public
  jlong start_;
  jlong end_;
  ADXCLContainer *mContainer_;
}

#pragma mark Public

- (instancetype)initWithCharArray:(IOSCharArray *)content;

- (NSString *)content;

- (ADXCLElement *)getContainer;

/*!
 @brief The character index this element was ended on
 */
- (jlong)getEnd;

- (jfloat)getFloat;

- (jint)getInt;

/*!
 @brief get the line Number
 @return return the line number this element was on
 */
- (jint)getLine;

/*!
 @brief The character index this element was started on
 */
- (jlong)getStart;

- (jboolean)isDone;

- (jboolean)isStarted;

- (jboolean)notStarted;

- (void)setContainerWithADXCLContainer:(ADXCLContainer *)element;

- (void)setEndWithLong:(jlong)end;

- (void)setLineWithInt:(jint)line;

- (void)setStartWithLong:(jlong)start;

- (NSString *)description;

#pragma mark Protected

- (void)addIndentWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                   withInt:(jint)indent;

- (NSString *)getDebugName;

- (NSString *)getStrClass;

- (NSString *)toFormattedJSONWithInt:(jint)indent
                             withInt:(jint)forceIndent;

- (NSString *)toJSON;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXCLElement)

J2OBJC_FIELD_SETTER(ADXCLElement, mContainer_, ADXCLContainer *)

inline jint ADXCLElement_get_MAX_LINE(void);
inline jint ADXCLElement_set_MAX_LINE(jint value);
inline jint *ADXCLElement_getRef_MAX_LINE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ADXCLElement_MAX_LINE;
J2OBJC_STATIC_FIELD_PRIMITIVE(ADXCLElement, MAX_LINE, jint)

inline jint ADXCLElement_get_BASE_INDENT(void);
inline jint ADXCLElement_set_BASE_INDENT(jint value);
inline jint *ADXCLElement_getRef_BASE_INDENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ADXCLElement_BASE_INDENT;
J2OBJC_STATIC_FIELD_PRIMITIVE(ADXCLElement, BASE_INDENT, jint)

FOUNDATION_EXPORT void ADXCLElement_initWithCharArray_(ADXCLElement *self, IOSCharArray *content);

FOUNDATION_EXPORT ADXCLElement *new_ADXCLElement_initWithCharArray_(IOSCharArray *content) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCLElement *create_ADXCLElement_initWithCharArray_(IOSCharArray *content);

J2OBJC_TYPE_LITERAL_HEADER(ADXCLElement)

@compatibility_alias AndroidxConstraintlayoutCoreParserCLElement ADXCLElement;

#endif

#pragma pop_macro("INCLUDE_ALL_CLElement")
