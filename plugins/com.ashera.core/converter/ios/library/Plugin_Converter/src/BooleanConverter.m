//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\Plugin_Converter\src\com\ashera\converter\BooleanConverter.java
//

#include "BooleanConverter.h"
#include "IFragment.h"
#include "J2ObjC_source.h"
#include "StringUtils.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/util/List.h"
#include "java/util/Map.h"


@implementation ASBooleanConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASBooleanConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangBoolean *)convertFromWithId:(id)value
                       withJavaUtilMap:(id<JavaUtilMap>)dependentAttributesMap
                       withASIFragment:(id<ASIFragment>)fragment {
  @try {
    return ASStringUtils_getBooleanWithId_(value);
  }
  @catch (JavaLangException *e) {
    return JreLoadStatic(JavaLangBoolean, FALSE);
  }
}

- (JavaLangBoolean *)convertToWithId:(JavaLangBoolean *)value
                     withASIFragment:(id<ASIFragment>)fragment {
  return value;
}

- (id<JavaUtilList>)getDependentAttributes {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertFromWithId:withJavaUtilMap:withASIFragment:);
  methods[2].selector = @selector(convertToWithId:withASIFragment:);
  methods[3].selector = @selector(getDependentAttributes);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertFrom", "LNSObject;LJavaUtilMap;LASIFragment;", "(Ljava/lang/Object;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;Lcom/ashera/core/IFragment;)Ljava/lang/Boolean;", "convertTo", "LJavaLangBoolean;LASIFragment;", "()Ljava/util/List<Ljava/lang/String;>;", "Ljava/lang/Object;Lcom/ashera/converter/IConverter<Ljava/lang/Boolean;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ASBooleanConverter = { "BooleanConverter", "com.ashera.converter", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, 6, -1 };
  return &_ASBooleanConverter;
}

@end

void ASBooleanConverter_init(ASBooleanConverter *self) {
  NSObject_init(self);
}

ASBooleanConverter *new_ASBooleanConverter_init() {
  J2OBJC_NEW_IMPL(ASBooleanConverter, init)
}

ASBooleanConverter *create_ASBooleanConverter_init() {
  J2OBJC_CREATE_IMPL(ASBooleanConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASBooleanConverter)
