//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\validations\FieldValidationException.java
//

#include "FieldValidationException.h"
#include "FormElement.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"


@interface ASFieldValidationException () {
 @public
  id<ASFormElement> mViewWrapper_;
}

@end

J2OBJC_FIELD_SETTER(ASFieldValidationException, mViewWrapper_, id<ASFormElement>)

@implementation ASFieldValidationException

- (instancetype)initWithNSString:(NSString *)message
               withASFormElement:(id<ASFormElement>)viewWrapper {
  ASFieldValidationException_initWithNSString_withASFormElement_(self, message, viewWrapper);
  return self;
}

- (id<ASFormElement>)getViewWrapper {
  return mViewWrapper_;
}

- (void)dealloc {
  RELEASE_(mViewWrapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LASFormElement;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withASFormElement:);
  methods[1].selector = @selector(getViewWrapper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mViewWrapper_", "LASFormElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LASFormElement;" };
  static const J2ObjcClassInfo _ASFieldValidationException = { "FieldValidationException", "com.ashera.validations", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_ASFieldValidationException;
}

@end

void ASFieldValidationException_initWithNSString_withASFormElement_(ASFieldValidationException *self, NSString *message, id<ASFormElement> viewWrapper) {
  JavaLangException_initWithNSString_(self, message);
  JreStrongAssign(&self->mViewWrapper_, viewWrapper);
}

ASFieldValidationException *new_ASFieldValidationException_initWithNSString_withASFormElement_(NSString *message, id<ASFormElement> viewWrapper) {
  J2OBJC_NEW_IMPL(ASFieldValidationException, initWithNSString_withASFormElement_, message, viewWrapper)
}

ASFieldValidationException *create_ASFieldValidationException_initWithNSString_withASFormElement_(NSString *message, id<ASFormElement> viewWrapper) {
  J2OBJC_CREATE_IMPL(ASFieldValidationException, initWithNSString_withASFormElement_, message, viewWrapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASFieldValidationException)
