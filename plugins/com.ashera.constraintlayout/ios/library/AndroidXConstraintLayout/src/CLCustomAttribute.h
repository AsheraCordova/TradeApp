//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\motion\CLCustomAttribute.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CLCustomAttribute")
#ifdef RESTRICT_CLCustomAttribute
#define INCLUDE_ALL_CLCustomAttribute 0
#else
#define INCLUDE_ALL_CLCustomAttribute 1
#endif
#undef RESTRICT_CLCustomAttribute

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADXCLCustomAttribute_) && (INCLUDE_ALL_CLCustomAttribute || defined(INCLUDE_ADXCLCustomAttribute))
#define ADXCLCustomAttribute_

@class ADXCLCustomAttribute_AttributeType;
@class IOSFloatArray;
@class JavaUtilHashMap;

/*!
 @brief Defines non standard Attributes
 */
@interface ADXCLCustomAttribute : NSObject {
 @public
  NSString *mName_;
  jboolean mBooleanValue_;
}

#pragma mark Public

- (instancetype)initWithADXCLCustomAttribute:(ADXCLCustomAttribute *)source
                                      withId:(id)value;

- (instancetype)initWithNSString:(NSString *)name
withADXCLCustomAttribute_AttributeType:(ADXCLCustomAttribute_AttributeType *)attributeType;

- (instancetype)initWithNSString:(NSString *)name
withADXCLCustomAttribute_AttributeType:(ADXCLCustomAttribute_AttributeType *)attributeType
                          withId:(id)value
                     withBoolean:(jboolean)method;

- (void)applyCustomWithId:(id)view;

/*!
 @brief test if the two attributes are different
 @param CustomAttribute
 */
- (jboolean)diffWithADXCLCustomAttribute:(ADXCLCustomAttribute *)CustomAttribute;

+ (JavaUtilHashMap *)extractAttributesWithJavaUtilHashMap:(JavaUtilHashMap *)base
                                                   withId:(id)view;

- (ADXCLCustomAttribute_AttributeType *)getType;

- (void)getValuesToInterpolateWithFloatArray:(IOSFloatArray *)ret;

/*!
 @brief Transforms value to a float for the purpose of interpolation
 @return interpolation value
 */
- (jfloat)getValueToInterpolate;

+ (jint)hsvToRgbWithFloat:(jfloat)hue
                withFloat:(jfloat)saturation
                withFloat:(jfloat)value;

/*!
 @brief Continuous types are interpolated they are fired only at
 */
- (jboolean)isContinuous;

/*!
 @brief The number of interpolation values that need to be interpolated
  Typically 1 but 3 for colors.
 @return Typically 1 but 3 for colors.
 */
- (jint)numberOfInterpolatedValues;

+ (void)setAttributesWithId:(id)view
        withJavaUtilHashMap:(JavaUtilHashMap *)map;

- (void)setColorValueWithInt:(jint)value;

- (void)setFloatValueWithFloat:(jfloat)value;

- (void)setInterpolatedValueWithId:(id)view
                    withFloatArray:(IOSFloatArray *)value;

- (void)setIntValueWithInt:(jint)value;

- (void)setStringValueWithNSString:(NSString *)value;

- (void)setValueWithFloatArray:(IOSFloatArray *)value;

- (void)setValueWithId:(id)value;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXCLCustomAttribute)

J2OBJC_FIELD_SETTER(ADXCLCustomAttribute, mName_, NSString *)

FOUNDATION_EXPORT jint ADXCLCustomAttribute_hsvToRgbWithFloat_withFloat_withFloat_(jfloat hue, jfloat saturation, jfloat value);

FOUNDATION_EXPORT void ADXCLCustomAttribute_initWithNSString_withADXCLCustomAttribute_AttributeType_(ADXCLCustomAttribute *self, NSString *name, ADXCLCustomAttribute_AttributeType *attributeType);

FOUNDATION_EXPORT ADXCLCustomAttribute *new_ADXCLCustomAttribute_initWithNSString_withADXCLCustomAttribute_AttributeType_(NSString *name, ADXCLCustomAttribute_AttributeType *attributeType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCLCustomAttribute *create_ADXCLCustomAttribute_initWithNSString_withADXCLCustomAttribute_AttributeType_(NSString *name, ADXCLCustomAttribute_AttributeType *attributeType);

FOUNDATION_EXPORT void ADXCLCustomAttribute_initWithNSString_withADXCLCustomAttribute_AttributeType_withId_withBoolean_(ADXCLCustomAttribute *self, NSString *name, ADXCLCustomAttribute_AttributeType *attributeType, id value, jboolean method);

FOUNDATION_EXPORT ADXCLCustomAttribute *new_ADXCLCustomAttribute_initWithNSString_withADXCLCustomAttribute_AttributeType_withId_withBoolean_(NSString *name, ADXCLCustomAttribute_AttributeType *attributeType, id value, jboolean method) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCLCustomAttribute *create_ADXCLCustomAttribute_initWithNSString_withADXCLCustomAttribute_AttributeType_withId_withBoolean_(NSString *name, ADXCLCustomAttribute_AttributeType *attributeType, id value, jboolean method);

FOUNDATION_EXPORT void ADXCLCustomAttribute_initWithADXCLCustomAttribute_withId_(ADXCLCustomAttribute *self, ADXCLCustomAttribute *source, id value);

FOUNDATION_EXPORT ADXCLCustomAttribute *new_ADXCLCustomAttribute_initWithADXCLCustomAttribute_withId_(ADXCLCustomAttribute *source, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCLCustomAttribute *create_ADXCLCustomAttribute_initWithADXCLCustomAttribute_withId_(ADXCLCustomAttribute *source, id value);

FOUNDATION_EXPORT JavaUtilHashMap *ADXCLCustomAttribute_extractAttributesWithJavaUtilHashMap_withId_(JavaUtilHashMap *base, id view);

FOUNDATION_EXPORT void ADXCLCustomAttribute_setAttributesWithId_withJavaUtilHashMap_(id view, JavaUtilHashMap *map);

J2OBJC_TYPE_LITERAL_HEADER(ADXCLCustomAttribute)

@compatibility_alias AndroidxConstraintlayoutCoreMotionCLCustomAttribute ADXCLCustomAttribute;

#endif

#if !defined (ADXCLCustomAttribute_AttributeType_) && (INCLUDE_ALL_CLCustomAttribute || defined(INCLUDE_ADXCLCustomAttribute_AttributeType))
#define ADXCLCustomAttribute_AttributeType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ADXCLCustomAttribute_AttributeType_Enum) {
  ADXCLCustomAttribute_AttributeType_Enum_INT_TYPE = 0,
  ADXCLCustomAttribute_AttributeType_Enum_FLOAT_TYPE = 1,
  ADXCLCustomAttribute_AttributeType_Enum_COLOR_TYPE = 2,
  ADXCLCustomAttribute_AttributeType_Enum_COLOR_DRAWABLE_TYPE = 3,
  ADXCLCustomAttribute_AttributeType_Enum_STRING_TYPE = 4,
  ADXCLCustomAttribute_AttributeType_Enum_BOOLEAN_TYPE = 5,
  ADXCLCustomAttribute_AttributeType_Enum_DIMENSION_TYPE = 6,
  ADXCLCustomAttribute_AttributeType_Enum_REFERENCE_TYPE = 7,
};

@interface ADXCLCustomAttribute_AttributeType : JavaLangEnum

#pragma mark Public

+ (ADXCLCustomAttribute_AttributeType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ADXCLCustomAttribute_AttributeType_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ADXCLCustomAttribute_AttributeType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_values_[];

inline ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_get_INT_TYPE(void);
J2OBJC_ENUM_CONSTANT(ADXCLCustomAttribute_AttributeType, INT_TYPE)

inline ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_get_FLOAT_TYPE(void);
J2OBJC_ENUM_CONSTANT(ADXCLCustomAttribute_AttributeType, FLOAT_TYPE)

inline ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_get_COLOR_TYPE(void);
J2OBJC_ENUM_CONSTANT(ADXCLCustomAttribute_AttributeType, COLOR_TYPE)

inline ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_get_COLOR_DRAWABLE_TYPE(void);
J2OBJC_ENUM_CONSTANT(ADXCLCustomAttribute_AttributeType, COLOR_DRAWABLE_TYPE)

inline ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_get_STRING_TYPE(void);
J2OBJC_ENUM_CONSTANT(ADXCLCustomAttribute_AttributeType, STRING_TYPE)

inline ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_get_BOOLEAN_TYPE(void);
J2OBJC_ENUM_CONSTANT(ADXCLCustomAttribute_AttributeType, BOOLEAN_TYPE)

inline ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_get_DIMENSION_TYPE(void);
J2OBJC_ENUM_CONSTANT(ADXCLCustomAttribute_AttributeType, DIMENSION_TYPE)

inline ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_get_REFERENCE_TYPE(void);
J2OBJC_ENUM_CONSTANT(ADXCLCustomAttribute_AttributeType, REFERENCE_TYPE)

FOUNDATION_EXPORT IOSObjectArray *ADXCLCustomAttribute_AttributeType_values(void);

FOUNDATION_EXPORT ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ADXCLCustomAttribute_AttributeType *ADXCLCustomAttribute_AttributeType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ADXCLCustomAttribute_AttributeType)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CLCustomAttribute")
