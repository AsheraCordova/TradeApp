//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSCapInsetsPlugin\src\main\java\com\ashera\capinsets\CGCapInsetsCommandConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CGCapInsetsCommandConverter")
#ifdef RESTRICT_CGCapInsetsCommandConverter
#define INCLUDE_ALL_CGCapInsetsCommandConverter 0
#else
#define INCLUDE_ALL_CGCapInsetsCommandConverter 1
#endif
#undef RESTRICT_CGCapInsetsCommandConverter

#if !defined (ASCGCapInsetsCommandConverter_) && (INCLUDE_ALL_CGCapInsetsCommandConverter || defined(INCLUDE_ASCGCapInsetsCommandConverter))
#define ASCGCapInsetsCommandConverter_

#define RESTRICT_BaseAttributeCommand 1
#define INCLUDE_ASBaseAttributeCommand 1
#include "BaseAttributeCommand.h"

@class IOSObjectArray;
@protocol ASAttributeCommand;
@protocol ASIWidget;

@interface ASCGCapInsetsCommandConverter : ASBaseAttributeCommand

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)id_;

- (jboolean)executeAfterPostMeasure;

- (id)modifyValueWithASIWidget:(id<ASIWidget>)widget
                        withId:(id)nativeView
                  withNSString:(NSString *)phase
                  withNSString:(NSString *)attributeName
                        withId:(id)value;

- (id<ASAttributeCommand>)newInstanceWithNSObjectArray:(IOSObjectArray *)args OBJC_METHOD_FAMILY_NONE;

- (void)updateArgsWithNSObjectArray:(IOSObjectArray *)args;

- (void)updatePhaseArgsWithNSObjectArray:(IOSObjectArray *)args;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(ASCGCapInsetsCommandConverter)

FOUNDATION_EXPORT void ASCGCapInsetsCommandConverter_initWithNSString_(ASCGCapInsetsCommandConverter *self, NSString *id_);

FOUNDATION_EXPORT ASCGCapInsetsCommandConverter *new_ASCGCapInsetsCommandConverter_initWithNSString_(NSString *id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASCGCapInsetsCommandConverter *create_ASCGCapInsetsCommandConverter_initWithNSString_(NSString *id_);

J2OBJC_TYPE_LITERAL_HEADER(ASCGCapInsetsCommandConverter)

@compatibility_alias ComAsheraCapinsetsCGCapInsetsCommandConverter ASCGCapInsetsCommandConverter;

#endif

#pragma pop_macro("INCLUDE_ALL_CGCapInsetsCommandConverter")
