//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\graphics\Insets.java
//

#include "Insets.h"
#include "J2ObjC_source.h"


@interface ADInsets ()

- (instancetype)initWithInt:(jint)left
                    withInt:(jint)top
                    withInt:(jint)right
                    withInt:(jint)bottom;

@end

__attribute__((unused)) static void ADInsets_initWithInt_withInt_withInt_withInt_(ADInsets *self, jint left, jint top, jint right, jint bottom);

__attribute__((unused)) static ADInsets *new_ADInsets_initWithInt_withInt_withInt_withInt_(jint left, jint top, jint right, jint bottom) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADInsets *create_ADInsets_initWithInt_withInt_withInt_withInt_(jint left, jint top, jint right, jint bottom);

J2OBJC_INITIALIZED_DEFN(ADInsets)

ADInsets *ADInsets_NONE;

@implementation ADInsets

- (instancetype)initWithInt:(jint)left
                    withInt:(jint)top
                    withInt:(jint)right
                    withInt:(jint)bottom {
  ADInsets_initWithInt_withInt_withInt_withInt_(self, left, top, right, bottom);
  return self;
}

+ (ADInsets *)ofWithInt:(jint)left
                withInt:(jint)top
                withInt:(jint)right
                withInt:(jint)bottom {
  return ADInsets_ofWithInt_withInt_withInt_withInt_(left, top, right, bottom);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LADInsets;", 0x9, 1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withInt:withInt:);
  methods[1].selector = @selector(ofWithInt:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NONE", "LADInsets;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "left_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "top_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "right_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "bottom_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IIII", "of", &ADInsets_NONE };
  static const J2ObjcClassInfo _ADInsets = { "Insets", "r.android.graphics", ptrTable, methods, fields, 7, 0x1, 2, 5, -1, -1, -1, -1, -1 };
  return &_ADInsets;
}

+ (void)initialize {
  if (self == [ADInsets class]) {
    JreStrongAssignAndConsume(&ADInsets_NONE, new_ADInsets_initWithInt_withInt_withInt_withInt_(0, 0, 0, 0));
    J2OBJC_SET_INITIALIZED(ADInsets)
  }
}

@end

void ADInsets_initWithInt_withInt_withInt_withInt_(ADInsets *self, jint left, jint top, jint right, jint bottom) {
  NSObject_init(self);
  self->left_ = left;
  self->top_ = top;
  self->right_ = right;
  self->bottom_ = bottom;
}

ADInsets *new_ADInsets_initWithInt_withInt_withInt_withInt_(jint left, jint top, jint right, jint bottom) {
  J2OBJC_NEW_IMPL(ADInsets, initWithInt_withInt_withInt_withInt_, left, top, right, bottom)
}

ADInsets *create_ADInsets_initWithInt_withInt_withInt_withInt_(jint left, jint top, jint right, jint bottom) {
  J2OBJC_CREATE_IMPL(ADInsets, initWithInt_withInt_withInt_withInt_, left, top, right, bottom)
}

ADInsets *ADInsets_ofWithInt_withInt_withInt_withInt_(jint left, jint top, jint right, jint bottom) {
  ADInsets_initialize();
  if (left == 0 && top == 0 && right == 0 && bottom == 0) {
    return ADInsets_NONE;
  }
  return create_ADInsets_initWithInt_withInt_withInt_withInt_(left, top, right, bottom);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADInsets)
