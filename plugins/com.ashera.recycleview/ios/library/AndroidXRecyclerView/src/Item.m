//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\com\xwray\groupie\Item.java
//

#include "GroupDataObserver.h"
#include "GroupieViewHolder.h"
#include "Item.h"
#include "J2ObjC_source.h"
#include "OnItemClickListener.h"
#include "OnItemLongClickListener.h"
#include "View.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/concurrent/atomic/AtomicLong.h"

@class JavaUtilConcurrentAtomicAtomicLong;
@protocol JavaUtilMap;


@interface ADXItem () {
 @public
  jlong id__;
  id<JavaUtilMap> extras_;
}

@end

J2OBJC_FIELD_SETTER(ADXItem, extras_, id<JavaUtilMap>)

inline JavaUtilConcurrentAtomicAtomicLong *ADXItem_get_ID_COUNTER(void);
inline JavaUtilConcurrentAtomicAtomicLong *ADXItem_set_ID_COUNTER(JavaUtilConcurrentAtomicAtomicLong *value);
static JavaUtilConcurrentAtomicAtomicLong *ADXItem_ID_COUNTER;
J2OBJC_STATIC_FIELD_OBJ(ADXItem, ID_COUNTER, JavaUtilConcurrentAtomicAtomicLong *)

J2OBJC_INITIALIZED_DEFN(ADXItem)

@implementation ADXItem

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXItem_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithLong:(jlong)id_ {
  ADXItem_initWithLong_(self, id_);
  return self;
}

- (ADXGroupieViewHolder *)createViewHolderWithADView:(ADView *)itemView {
  return create_ADXGroupieViewHolder_initWithADView_(itemView);
}

- (void)bindWithADXGroupieViewHolder:(ADXGroupieViewHolder *)viewHolder
                             withInt:(jint)position
                    withJavaUtilList:(id<JavaUtilList>)payloads
          withADXOnItemClickListener:(id<ADXOnItemClickListener>)onItemClickListener
      withADXOnItemLongClickListener:(id<ADXOnItemLongClickListener>)onItemLongClickListener {
  [((ADXGroupieViewHolder *) nil_chk(viewHolder)) bindWithADXItem:self withADXOnItemClickListener:onItemClickListener withADXOnItemLongClickListener:onItemLongClickListener];
  [self bindWithADXGroupieViewHolder:viewHolder withInt:position withJavaUtilList:payloads];
}

- (void)bindWithADXGroupieViewHolder:(ADXGroupieViewHolder *)viewHolder
                             withInt:(jint)position {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)bindWithADXGroupieViewHolder:(ADXGroupieViewHolder *)viewHolder
                             withInt:(jint)position
                    withJavaUtilList:(id<JavaUtilList>)payloads {
  [self bindWithADXGroupieViewHolder:viewHolder withInt:position];
}

- (void)unbindWithADXGroupieViewHolder:(ADXGroupieViewHolder *)viewHolder {
  [((ADXGroupieViewHolder *) nil_chk(viewHolder)) unbind];
}

- (jboolean)isRecyclable {
  return true;
}

- (jint)getSpanSizeWithInt:(jint)spanCount
                   withInt:(jint)position {
  return spanCount;
}

- (jint)getSwipeDirs {
  return 0;
}

- (jint)getDragDirs {
  return 0;
}

- (jint)getLayout {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)onViewAttachedToWindowWithADXGroupieViewHolder:(ADXGroupieViewHolder *)viewHolder {
}

- (void)onViewDetachedFromWindowWithADXGroupieViewHolder:(ADXGroupieViewHolder *)viewHolder {
}

- (jint)getViewType {
  return [self getLayout];
}

- (jint)getItemCount {
  return 1;
}

- (ADXItem *)getItemWithInt:(jint)position {
  if (position == 0) {
    return self;
  }
  else {
    @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$", @"Wanted item at position ", position, @" but an Item is a Group of size 1"));
  }
}

- (void)registerGroupDataObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)groupDataObserver {
  JreStrongAssign(&self->parentDataObserver_, groupDataObserver);
}

- (void)unregisterGroupDataObserverWithADXGroupDataObserver:(id<ADXGroupDataObserver>)groupDataObserver {
  JreStrongAssign(&parentDataObserver_, nil);
}

- (jint)getPositionWithADXItem:(ADXItem *)item {
  return self == item ? 0 : -1;
}

- (jboolean)isClickable {
  return true;
}

- (jboolean)isLongClickable {
  return true;
}

- (void)notifyChanged {
  if (parentDataObserver_ != nil) {
    [parentDataObserver_ onItemChangedWithADXRVGroup:self withInt:0];
  }
}

- (void)notifyChangedWithId:(id)payload {
  if (parentDataObserver_ != nil) {
    [parentDataObserver_ onItemChangedWithADXRVGroup:self withInt:0 withId:payload];
  }
}

- (id<JavaUtilMap>)getExtras {
  return extras_;
}

- (jlong)getId {
  return id__;
}

- (jboolean)isSameAsWithADXItem:(ADXItem *)other {
  if ([self getViewType] != [((ADXItem *) nil_chk(other)) getViewType]) {
    return false;
  }
  return [self getId] == [other getId];
}

- (jboolean)hasSameContentAsWithADXItem:(ADXItem *)other {
  return [self isEqual:other];
}

- (id)getChangePayloadWithADXItem:(ADXItem *)newItem {
  return nil;
}

- (void)dealloc {
  RELEASE_(parentDataObserver_);
  RELEASE_(extras_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LADXGroupieViewHolder;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x401, 4, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x1, 4, 9, -1, 10, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, 13, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 12, -1, 13, -1, -1 },
    { NULL, "V", 0x1, 17, 12, -1, 13, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXItem;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 21, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 23, 24, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 26, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 27, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 28, 24, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 29, 24, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 24, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithLong:);
  methods[2].selector = @selector(createViewHolderWithADView:);
  methods[3].selector = @selector(bindWithADXGroupieViewHolder:withInt:withJavaUtilList:withADXOnItemClickListener:withADXOnItemLongClickListener:);
  methods[4].selector = @selector(bindWithADXGroupieViewHolder:withInt:);
  methods[5].selector = @selector(bindWithADXGroupieViewHolder:withInt:withJavaUtilList:);
  methods[6].selector = @selector(unbindWithADXGroupieViewHolder:);
  methods[7].selector = @selector(isRecyclable);
  methods[8].selector = @selector(getSpanSizeWithInt:withInt:);
  methods[9].selector = @selector(getSwipeDirs);
  methods[10].selector = @selector(getDragDirs);
  methods[11].selector = @selector(getLayout);
  methods[12].selector = @selector(onViewAttachedToWindowWithADXGroupieViewHolder:);
  methods[13].selector = @selector(onViewDetachedFromWindowWithADXGroupieViewHolder:);
  methods[14].selector = @selector(getViewType);
  methods[15].selector = @selector(getItemCount);
  methods[16].selector = @selector(getItemWithInt:);
  methods[17].selector = @selector(registerGroupDataObserverWithADXGroupDataObserver:);
  methods[18].selector = @selector(unregisterGroupDataObserverWithADXGroupDataObserver:);
  methods[19].selector = @selector(getPositionWithADXItem:);
  methods[20].selector = @selector(isClickable);
  methods[21].selector = @selector(isLongClickable);
  methods[22].selector = @selector(notifyChanged);
  methods[23].selector = @selector(notifyChangedWithId:);
  methods[24].selector = @selector(getExtras);
  methods[25].selector = @selector(getId);
  methods[26].selector = @selector(isSameAsWithADXItem:);
  methods[27].selector = @selector(hasSameContentAsWithADXItem:);
  methods[28].selector = @selector(getChangePayloadWithADXItem:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ID_COUNTER", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0xa, -1, 31, -1, -1 },
    { "parentDataObserver_", "LADXGroupDataObserver;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "id__", "J", .constantValue.asLong = 0, 0x12, 32, -1, -1, -1 },
    { "extras_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 33, -1 },
  };
  static const void *ptrTable[] = { "J", "createViewHolder", "LADView;", "(Lr/android/view/View;)TVH;", "bind", "LADXGroupieViewHolder;ILJavaUtilList;LADXOnItemClickListener;LADXOnItemLongClickListener;", "(TVH;ILjava/util/List<Ljava/lang/Object;>;Lcom/xwray/groupie/OnItemClickListener;Lcom/xwray/groupie/OnItemLongClickListener;)V", "LADXGroupieViewHolder;I", "(TVH;I)V", "LADXGroupieViewHolder;ILJavaUtilList;", "(TVH;ILjava/util/List<Ljava/lang/Object;>;)V", "unbind", "LADXGroupieViewHolder;", "(TVH;)V", "getSpanSize", "II", "onViewAttachedToWindow", "onViewDetachedFromWindow", "getItem", "I", "registerGroupDataObserver", "LADXGroupDataObserver;", "unregisterGroupDataObserver", "getPosition", "LADXItem;", "notifyChanged", "LNSObject;", "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "isSameAs", "hasSameContentAs", "getChangePayload", &ADXItem_ID_COUNTER, "id", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "<VH:Lcom/xwray/groupie/GroupieViewHolder;>Ljava/lang/Object;Lcom/xwray/groupie/RVGroup;Lcom/xwray/groupie/SpanSizeProvider;" };
  static const J2ObjcClassInfo _ADXItem = { "Item", "com.xwray.groupie", ptrTable, methods, fields, 7, 0x401, 29, 4, -1, -1, -1, 34, -1 };
  return &_ADXItem;
}

+ (void)initialize {
  if (self == [ADXItem class]) {
    JreStrongAssignAndConsume(&ADXItem_ID_COUNTER, new_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(0));
    J2OBJC_SET_INITIALIZED(ADXItem)
  }
}

@end

void ADXItem_init(ADXItem *self) {
  ADXItem_initWithLong_(self, [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(ADXItem_ID_COUNTER)) decrementAndGet]);
}

void ADXItem_initWithLong_(ADXItem *self, jlong id_) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->extras_, new_JavaUtilHashMap_init());
  self->id__ = id_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXItem)
