//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSShutterBugPlugin\src\main\java\com\applidium\shutterbug\utils\DownloadRequest.java
//

#include "BitmapFactory.h"
#include "DownloadRequest.h"
#include "J2ObjC_source.h"
#include "ShutterbugManager.h"


@interface APDownloadRequest () {
 @public
  NSString *mUrl_;
  id<APShutterbugManager_ShutterbugManagerListener> mListener_;
  jint mDesiredHeight_;
  jint mDesiredWidth_;
}

@end

J2OBJC_FIELD_SETTER(APDownloadRequest, mUrl_, NSString *)
J2OBJC_FIELD_SETTER(APDownloadRequest, mListener_, id<APShutterbugManager_ShutterbugManagerListener>)

@implementation APDownloadRequest

- (instancetype)initWithNSString:(NSString *)url
withAPShutterbugManager_ShutterbugManagerListener:(id<APShutterbugManager_ShutterbugManagerListener>)listener {
  APDownloadRequest_initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_(self, url, listener);
  return self;
}

- (instancetype)initWithNSString:(NSString *)url
withAPShutterbugManager_ShutterbugManagerListener:(id<APShutterbugManager_ShutterbugManagerListener>)listener
                         withInt:(jint)desiredHeight
                         withInt:(jint)desiredWidth {
  APDownloadRequest_initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_withInt_withInt_(self, url, listener, desiredHeight, desiredWidth);
  return self;
}

- (jint)getSampleSizeWithADBitmapFactory_Options:(ADBitmapFactory_Options *)options {
  if (mDesiredHeight_ <= 0 || mDesiredWidth_ <= 0) {
    return 1;
  }
  jint height = ((ADBitmapFactory_Options *) nil_chk(options))->outHeight_;
  jint width = options->outWidth_;
  jint inSampleSize = 1;
  if (height > mDesiredHeight_ || width > mDesiredWidth_) {
    jint halfHeight = JreIntDiv(height, 2);
    jint halfWidth = JreIntDiv(width, 2);
    while ((JreIntDiv(halfHeight, inSampleSize)) > mDesiredHeight_ && (JreIntDiv(halfWidth, inSampleSize)) > mDesiredWidth_) {
      inSampleSize *= 2;
    }
  }
  return inSampleSize;
}

- (NSString *)getUrl {
  return mUrl_;
}

- (id<APShutterbugManager_ShutterbugManagerListener>)getListener {
  return mListener_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAPShutterbugManager_ShutterbugManagerListener;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withAPShutterbugManager_ShutterbugManagerListener:);
  methods[1].selector = @selector(initWithNSString:withAPShutterbugManager_ShutterbugManagerListener:withInt:withInt:);
  methods[2].selector = @selector(getSampleSizeWithADBitmapFactory_Options:);
  methods[3].selector = @selector(getUrl);
  methods[4].selector = @selector(getListener);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mUrl_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mListener_", "LAPShutterbugManager_ShutterbugManagerListener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mDesiredHeight_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mDesiredWidth_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LAPShutterbugManager_ShutterbugManagerListener;", "LNSString;LAPShutterbugManager_ShutterbugManagerListener;II", "getSampleSize", "LADBitmapFactory_Options;" };
  static const J2ObjcClassInfo _APDownloadRequest = { "DownloadRequest", "com.applidium.shutterbug.utils", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, -1, -1, -1, -1 };
  return &_APDownloadRequest;
}

@end

void APDownloadRequest_initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_(APDownloadRequest *self, NSString *url, id<APShutterbugManager_ShutterbugManagerListener> listener) {
  NSObject_init(self);
  self->mDesiredHeight_ = -1;
  self->mDesiredWidth_ = -1;
  self->mUrl_ = url;
  self->mListener_ = listener;
}

APDownloadRequest *new_APDownloadRequest_initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_(NSString *url, id<APShutterbugManager_ShutterbugManagerListener> listener) {
  J2OBJC_NEW_IMPL(APDownloadRequest, initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_, url, listener)
}

APDownloadRequest *create_APDownloadRequest_initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_(NSString *url, id<APShutterbugManager_ShutterbugManagerListener> listener) {
  J2OBJC_CREATE_IMPL(APDownloadRequest, initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_, url, listener)
}

void APDownloadRequest_initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_withInt_withInt_(APDownloadRequest *self, NSString *url, id<APShutterbugManager_ShutterbugManagerListener> listener, jint desiredHeight, jint desiredWidth) {
  NSObject_init(self);
  self->mDesiredHeight_ = -1;
  self->mDesiredWidth_ = -1;
  self->mUrl_ = url;
  self->mListener_ = listener;
  self->mDesiredHeight_ = desiredHeight;
  self->mDesiredWidth_ = desiredWidth;
}

APDownloadRequest *new_APDownloadRequest_initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_withInt_withInt_(NSString *url, id<APShutterbugManager_ShutterbugManagerListener> listener, jint desiredHeight, jint desiredWidth) {
  J2OBJC_NEW_IMPL(APDownloadRequest, initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_withInt_withInt_, url, listener, desiredHeight, desiredWidth)
}

APDownloadRequest *create_APDownloadRequest_initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_withInt_withInt_(NSString *url, id<APShutterbugManager_ShutterbugManagerListener> listener, jint desiredHeight, jint desiredWidth) {
  J2OBJC_CREATE_IMPL(APDownloadRequest, initWithNSString_withAPShutterbugManager_ShutterbugManagerListener_withInt_withInt_, url, listener, desiredHeight, desiredWidth)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APDownloadRequest)
