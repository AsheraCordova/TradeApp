//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\Plugin_Converter\src\com\ashera\converter\TemplateConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TemplateConverter")
#ifdef RESTRICT_TemplateConverter
#define INCLUDE_ALL_TemplateConverter 0
#else
#define INCLUDE_ALL_TemplateConverter 1
#endif
#undef RESTRICT_TemplateConverter

#if !defined (ASTemplateConverter_) && (INCLUDE_ALL_TemplateConverter || defined(INCLUDE_ASTemplateConverter))
#define ASTemplateConverter_

#define RESTRICT_IConverter 1
#define INCLUDE_ASIConverter 1
#include "IConverter.h"

@protocol ASIFragment;
@protocol ASIWidget;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface ASTemplateConverter : NSObject < ASIConverter >

#pragma mark Public

- (instancetype)init;

- (id<ASIWidget>)convertFromWithId:(NSString *)ref
                   withJavaUtilMap:(id<JavaUtilMap>)dependentAttributesMap
                   withASIFragment:(id<ASIFragment>)fragment;

- (NSString *)convertToWithId:(id<ASIWidget>)value
              withASIFragment:(id<ASIFragment>)fragment;

- (id<JavaUtilList>)getDependentAttributes;

@end

J2OBJC_EMPTY_STATIC_INIT(ASTemplateConverter)

FOUNDATION_EXPORT void ASTemplateConverter_init(ASTemplateConverter *self);

FOUNDATION_EXPORT ASTemplateConverter *new_ASTemplateConverter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASTemplateConverter *create_ASTemplateConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASTemplateConverter)

@compatibility_alias ComAsheraConverterTemplateConverter ASTemplateConverter;

#endif

#pragma pop_macro("INCLUDE_ALL_TemplateConverter")
