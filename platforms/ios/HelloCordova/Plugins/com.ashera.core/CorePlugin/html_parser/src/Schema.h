//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\html_parser\src\repackaged\org\ccil\cowan\tagsoup\Schema.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Schema")
#ifdef RESTRICT_Schema
#define INCLUDE_ALL_Schema 0
#else
#define INCLUDE_ALL_Schema 1
#endif
#undef RESTRICT_Schema

#if !defined (TSSchema_) && (INCLUDE_ALL_Schema || defined(INCLUDE_TSSchema))
#define TSSchema_

@class TSElementType;

/*!
 @brief Abstract class representing a TSSL schema.
 Actual TSSL schemas are compiled into concrete subclasses of this class.
 */
@interface TSSchema : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Add or replace a default attribute for an element type in this schema.
 @param elemName Name (Qname) of the element type
 @param attrName Name (Qname) of the attribute
 @param type Type of the attribute
 @param value Default value of the attribute; null if no default
 */
- (void)attributeWithNSString:(NSString *)elemName
                 withNSString:(NSString *)attrName
                 withNSString:(NSString *)type
                 withNSString:(NSString *)value;

/*!
 @brief Add or replace an element type for this schema.
 @param name Name (Qname) of the element
 @param model Models of the element's content as a vector of bits
 @param memberOf Models the element is a member of as a vector of bits
 @param flags Flags for the element
 */
- (void)elementTypeWithNSString:(NSString *)name
                        withInt:(jint)model
                        withInt:(jint)memberOf
                        withInt:(jint)flags;

/*!
 @brief Add to or replace a character entity in this schema.
 @param name Name of the entity
 @param value Value of the entity
 */
- (void)entityWithNSString:(NSString *)name
                   withInt:(jint)value;

/*!
 @brief Get an ElementType by name.
 @param name Name (Qname) of the element type
 @return The corresponding ElementType
 */
- (TSElementType *)getElementTypeWithNSString:(NSString *)name;

/*!
 @brief Get an entity value by name.
 @param name Name of the entity
 @return The corresponding character, or 0 if none
 */
- (jint)getEntityWithNSString:(NSString *)name;

/*!
 @brief Return the prefix of this schema.
 */
- (NSString *)getPrefix;

/*!
 @brief Return the URI (namespace name) of this schema.
 */
- (NSString *)getURI;

/*!
 @brief Specify natural parent of an element in this schema.
 @param name Name of the child element
 @param parentName Name of the parent element
 */
- (void)parentWithNSString:(NSString *)name
              withNSString:(NSString *)parentName;

/*!
 @brief Get the root element of this schema
 */
- (TSElementType *)rootElementType;

/*!
 @brief Change the prefix of this schema.
 */
- (void)setPrefixWithNSString:(NSString *)prefix;

/*!
 @brief Change the URI (namespace name) of this schema.
 */
- (void)setURIWithNSString:(NSString *)uri;

@end

J2OBJC_EMPTY_STATIC_INIT(TSSchema)

inline jint TSSchema_get_M_ANY(void);
#define TSSchema_M_ANY -1
J2OBJC_STATIC_FIELD_CONSTANT(TSSchema, M_ANY, jint)

inline jint TSSchema_get_M_EMPTY(void);
#define TSSchema_M_EMPTY 0
J2OBJC_STATIC_FIELD_CONSTANT(TSSchema, M_EMPTY, jint)

inline jint TSSchema_get_M_PCDATA(void);
#define TSSchema_M_PCDATA 1073741824
J2OBJC_STATIC_FIELD_CONSTANT(TSSchema, M_PCDATA, jint)

inline jint TSSchema_get_M_ROOT(void);
#define TSSchema_M_ROOT ((jint) 0x80000000)
J2OBJC_STATIC_FIELD_CONSTANT(TSSchema, M_ROOT, jint)

inline jint TSSchema_get_F_RESTART(void);
#define TSSchema_F_RESTART 1
J2OBJC_STATIC_FIELD_CONSTANT(TSSchema, F_RESTART, jint)

inline jint TSSchema_get_F_CDATA(void);
#define TSSchema_F_CDATA 2
J2OBJC_STATIC_FIELD_CONSTANT(TSSchema, F_CDATA, jint)

inline jint TSSchema_get_F_NOFORCE(void);
#define TSSchema_F_NOFORCE 4
J2OBJC_STATIC_FIELD_CONSTANT(TSSchema, F_NOFORCE, jint)

FOUNDATION_EXPORT void TSSchema_init(TSSchema *self);

J2OBJC_TYPE_LITERAL_HEADER(TSSchema)

@compatibility_alias RepackagedOrgCcilCowanTagsoupSchema TSSchema;

#endif

#pragma pop_macro("INCLUDE_ALL_Schema")
