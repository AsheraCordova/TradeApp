//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\widgets\WidgetContainer.java
//

#include "Cache.h"
#include "ConstraintWidget.h"
#include "ConstraintWidgetContainer.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "WidgetContainer.h"
#include "java/util/ArrayList.h"


@implementation ADXWidgetContainer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXWidgetContainer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)x
                    withInt:(jint)y
                    withInt:(jint)width
                    withInt:(jint)height {
  ADXWidgetContainer_initWithInt_withInt_withInt_withInt_(self, x, y, width, height);
  return self;
}

- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height {
  ADXWidgetContainer_initWithInt_withInt_(self, width, height);
  return self;
}

- (void)reset {
  [((JavaUtilArrayList *) nil_chk(mChildren_)) clear];
  [super reset];
}

- (void)addWithADXConstraintWidget:(ADXConstraintWidget *)widget {
  [((JavaUtilArrayList *) nil_chk(mChildren_)) addWithId:widget];
  if ([((ADXConstraintWidget *) nil_chk(widget)) getParent] != nil) {
    ADXWidgetContainer *container = (ADXWidgetContainer *) cast_chk([widget getParent], [ADXWidgetContainer class]);
    [((ADXWidgetContainer *) nil_chk(container)) removeWithADXConstraintWidget:widget];
  }
  [widget setParentWithADXConstraintWidget:self];
}

- (void)addWithADXConstraintWidgetArray:(IOSObjectArray *)widgets {
  jint count = ((IOSObjectArray *) nil_chk(widgets))->size_;
  for (jint i = 0; i < count; i++) {
    [self addWithADXConstraintWidget:IOSObjectArray_Get(widgets, i)];
  }
}

- (void)removeWithADXConstraintWidget:(ADXConstraintWidget *)widget {
  [((JavaUtilArrayList *) nil_chk(mChildren_)) removeWithId:widget];
  [((ADXConstraintWidget *) nil_chk(widget)) reset];
}

- (JavaUtilArrayList *)getChildren {
  return mChildren_;
}

- (ADXConstraintWidgetContainer *)getRootConstraintContainer {
  ADXConstraintWidget *item = self;
  ADXConstraintWidget *parent = JreRetainedLocalValue([item getParent]);
  ADXConstraintWidgetContainer *container = nil;
  if ([item isKindOfClass:[ADXConstraintWidgetContainer class]]) {
    container = (ADXConstraintWidgetContainer *) cast_chk(self, [ADXConstraintWidgetContainer class]);
  }
  while (parent != nil) {
    item = parent;
    parent = [item getParent];
    if ([item isKindOfClass:[ADXConstraintWidgetContainer class]]) {
      container = (ADXConstraintWidgetContainer *) item;
    }
  }
  return container;
}

- (void)setOffsetWithInt:(jint)x
                 withInt:(jint)y {
  [super setOffsetWithInt:x withInt:y];
  jint count = [((JavaUtilArrayList *) nil_chk(mChildren_)) size];
  for (jint i = 0; i < count; i++) {
    ADXConstraintWidget *widget = JreRetainedLocalValue([((JavaUtilArrayList *) nil_chk(mChildren_)) getWithInt:i]);
    [((ADXConstraintWidget *) nil_chk(widget)) setOffsetWithInt:[self getRootX] withInt:[self getRootY]];
  }
}

- (void)layout {
  if (mChildren_ == nil) {
    return;
  }
  jint count = [mChildren_ size];
  for (jint i = 0; i < count; i++) {
    ADXConstraintWidget *widget = JreRetainedLocalValue([((JavaUtilArrayList *) nil_chk(mChildren_)) getWithInt:i]);
    if ([widget isKindOfClass:[ADXWidgetContainer class]]) {
      [((ADXWidgetContainer *) nil_chk(((ADXWidgetContainer *) widget))) layout];
    }
  }
}

- (void)resetSolverVariablesWithADXCache:(ADXCache *)cache {
  [super resetSolverVariablesWithADXCache:cache];
  jint count = [((JavaUtilArrayList *) nil_chk(mChildren_)) size];
  for (jint i = 0; i < count; i++) {
    ADXConstraintWidget *widget = JreRetainedLocalValue([((JavaUtilArrayList *) nil_chk(mChildren_)) getWithInt:i]);
    [((ADXConstraintWidget *) nil_chk(widget)) resetSolverVariablesWithADXCache:cache];
  }
}

- (void)removeAllChildren {
  [((JavaUtilArrayList *) nil_chk(mChildren_)) clear];
}

- (void)dealloc {
  RELEASE_(mChildren_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 2, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LADXConstraintWidgetContainer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:withInt:withInt:withInt:);
  methods[2].selector = @selector(initWithInt:withInt:);
  methods[3].selector = @selector(reset);
  methods[4].selector = @selector(addWithADXConstraintWidget:);
  methods[5].selector = @selector(addWithADXConstraintWidgetArray:);
  methods[6].selector = @selector(removeWithADXConstraintWidget:);
  methods[7].selector = @selector(getChildren);
  methods[8].selector = @selector(getRootConstraintContainer);
  methods[9].selector = @selector(setOffsetWithInt:withInt:);
  methods[10].selector = @selector(layout);
  methods[11].selector = @selector(resetSolverVariablesWithADXCache:);
  methods[12].selector = @selector(removeAllChildren);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mChildren_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "IIII", "II", "add", "LADXConstraintWidget;", "[LADXConstraintWidget;", "remove", "()Ljava/util/ArrayList<Landroidx/constraintlayout/core/widgets/ConstraintWidget;>;", "setOffset", "resetSolverVariables", "LADXCache;", "Ljava/util/ArrayList<Landroidx/constraintlayout/core/widgets/ConstraintWidget;>;" };
  static const J2ObjcClassInfo _ADXWidgetContainer = { "WidgetContainer", "androidx.constraintlayout.core.widgets", ptrTable, methods, fields, 7, 0x1, 13, 1, -1, -1, -1, -1, -1 };
  return &_ADXWidgetContainer;
}

@end

void ADXWidgetContainer_init(ADXWidgetContainer *self) {
  ADXConstraintWidget_init(self);
  JreStrongAssignAndConsume(&self->mChildren_, new_JavaUtilArrayList_init());
}

ADXWidgetContainer *new_ADXWidgetContainer_init() {
  J2OBJC_NEW_IMPL(ADXWidgetContainer, init)
}

ADXWidgetContainer *create_ADXWidgetContainer_init() {
  J2OBJC_CREATE_IMPL(ADXWidgetContainer, init)
}

void ADXWidgetContainer_initWithInt_withInt_withInt_withInt_(ADXWidgetContainer *self, jint x, jint y, jint width, jint height) {
  ADXConstraintWidget_initWithInt_withInt_withInt_withInt_(self, x, y, width, height);
  JreStrongAssignAndConsume(&self->mChildren_, new_JavaUtilArrayList_init());
}

ADXWidgetContainer *new_ADXWidgetContainer_initWithInt_withInt_withInt_withInt_(jint x, jint y, jint width, jint height) {
  J2OBJC_NEW_IMPL(ADXWidgetContainer, initWithInt_withInt_withInt_withInt_, x, y, width, height)
}

ADXWidgetContainer *create_ADXWidgetContainer_initWithInt_withInt_withInt_withInt_(jint x, jint y, jint width, jint height) {
  J2OBJC_CREATE_IMPL(ADXWidgetContainer, initWithInt_withInt_withInt_withInt_, x, y, width, height)
}

void ADXWidgetContainer_initWithInt_withInt_(ADXWidgetContainer *self, jint width, jint height) {
  ADXConstraintWidget_initWithInt_withInt_(self, width, height);
  JreStrongAssignAndConsume(&self->mChildren_, new_JavaUtilArrayList_init());
}

ADXWidgetContainer *new_ADXWidgetContainer_initWithInt_withInt_(jint width, jint height) {
  J2OBJC_NEW_IMPL(ADXWidgetContainer, initWithInt_withInt_, width, height)
}

ADXWidgetContainer *create_ADXWidgetContainer_initWithInt_withInt_(jint width, jint height) {
  J2OBJC_CREATE_IMPL(ADXWidgetContainer, initWithInt_withInt_, width, height)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXWidgetContainer)
