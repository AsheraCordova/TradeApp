//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\text\Layout.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Layout")
#ifdef RESTRICT_Layout
#define INCLUDE_ALL_Layout 0
#else
#define INCLUDE_ALL_Layout 1
#endif
#undef RESTRICT_Layout

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADLayout_) && (INCLUDE_ALL_Layout || defined(INCLUDE_ADLayout))
#define ADLayout_

@interface ADLayout : NSObject

#pragma mark Public

- (instancetype)init;

- (jint)getWidth;

@end

J2OBJC_EMPTY_STATIC_INIT(ADLayout)

FOUNDATION_EXPORT void ADLayout_init(ADLayout *self);

FOUNDATION_EXPORT ADLayout *new_ADLayout_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADLayout *create_ADLayout_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADLayout)

@compatibility_alias RAndroidTextLayout ADLayout;

#endif

#if !defined (ADLayout_Alignment_) && (INCLUDE_ALL_Layout || defined(INCLUDE_ADLayout_Alignment))
#define ADLayout_Alignment_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ADLayout_Alignment_Enum) {
  ADLayout_Alignment_Enum_ALIGN_NORMAL = 0,
  ADLayout_Alignment_Enum_ALIGN_OPPOSITE = 1,
  ADLayout_Alignment_Enum_ALIGN_CENTER = 2,
  ADLayout_Alignment_Enum_ALIGN_LEFT = 3,
  ADLayout_Alignment_Enum_ALIGN_RIGHT = 4,
};

@interface ADLayout_Alignment : JavaLangEnum

#pragma mark Public

+ (ADLayout_Alignment *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ADLayout_Alignment_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ADLayout_Alignment)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ADLayout_Alignment *ADLayout_Alignment_values_[];

inline ADLayout_Alignment *ADLayout_Alignment_get_ALIGN_NORMAL(void);
J2OBJC_ENUM_CONSTANT(ADLayout_Alignment, ALIGN_NORMAL)

inline ADLayout_Alignment *ADLayout_Alignment_get_ALIGN_OPPOSITE(void);
J2OBJC_ENUM_CONSTANT(ADLayout_Alignment, ALIGN_OPPOSITE)

inline ADLayout_Alignment *ADLayout_Alignment_get_ALIGN_CENTER(void);
J2OBJC_ENUM_CONSTANT(ADLayout_Alignment, ALIGN_CENTER)

inline ADLayout_Alignment *ADLayout_Alignment_get_ALIGN_LEFT(void);
J2OBJC_ENUM_CONSTANT(ADLayout_Alignment, ALIGN_LEFT)

inline ADLayout_Alignment *ADLayout_Alignment_get_ALIGN_RIGHT(void);
J2OBJC_ENUM_CONSTANT(ADLayout_Alignment, ALIGN_RIGHT)

FOUNDATION_EXPORT IOSObjectArray *ADLayout_Alignment_values(void);

FOUNDATION_EXPORT ADLayout_Alignment *ADLayout_Alignment_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ADLayout_Alignment *ADLayout_Alignment_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ADLayout_Alignment)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Layout")
