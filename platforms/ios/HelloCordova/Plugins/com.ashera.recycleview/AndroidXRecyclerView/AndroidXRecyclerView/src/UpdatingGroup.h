//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\com\xwray\groupie\UpdatingGroup.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_UpdatingGroup")
#ifdef RESTRICT_UpdatingGroup
#define INCLUDE_ALL_UpdatingGroup 0
#else
#define INCLUDE_ALL_UpdatingGroup 1
#endif
#undef RESTRICT_UpdatingGroup

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADXUpdatingGroup_) && (INCLUDE_ALL_UpdatingGroup || defined(INCLUDE_ADXUpdatingGroup))
#define ADXUpdatingGroup_

#define RESTRICT_NestedGroup 1
#define INCLUDE_ADXNestedGroup 1
#include "NestedGroup.h"

@protocol ADXRVGroup;
@protocol JavaUtilList;

/*!
 @brief Deprecated.Please use #<code>Section.update</code> instead.
 A group which accepts a list of items and diffs them against its previous contents,
  generating the correct remove, add, move and change notifications to its parent observer,
  to create an animated item-level update. 
 <p>
  Item comparisons are made using:
  - Item.getId() (are items the same?)
  - Item.hasSameContentAs() (are contents the same?)
  If you don't customize getId() or hasSameContentAs(), the default implementations will return false,
  meaning your Group will consider every update a complete change of everything.
 */
@interface ADXUpdatingGroup : ADXNestedGroup

#pragma mark Public

- (instancetype)init;

- (id<ADXRVGroup>)getGroupWithInt:(jint)position;

- (jint)getGroupCount;

- (jint)getPositionWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)updateWithJavaUtilList:(id<JavaUtilList>)newItems;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXUpdatingGroup)

FOUNDATION_EXPORT void ADXUpdatingGroup_init(ADXUpdatingGroup *self);

FOUNDATION_EXPORT ADXUpdatingGroup *new_ADXUpdatingGroup_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXUpdatingGroup *create_ADXUpdatingGroup_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXUpdatingGroup)

@compatibility_alias ComXwrayGroupieUpdatingGroup ADXUpdatingGroup;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_UpdatingGroup")
