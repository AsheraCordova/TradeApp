//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\model\MethodHandlerFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MethodHandlerFactory")
#ifdef RESTRICT_MethodHandlerFactory
#define INCLUDE_ALL_MethodHandlerFactory 0
#else
#define INCLUDE_ALL_MethodHandlerFactory 1
#endif
#undef RESTRICT_MethodHandlerFactory

#if !defined (ASMethodHandlerFactory_) && (INCLUDE_ALL_MethodHandlerFactory || defined(INCLUDE_ASMethodHandlerFactory))
#define ASMethodHandlerFactory_

@protocol ASMethodHandler;
@protocol JavaUtilList;

@interface ASMethodHandlerFactory : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<JavaUtilList>)getRegistrations;

+ (void)init__ OBJC_METHOD_FAMILY_NONE;

+ (void)register__WithASMethodHandler:(id<ASMethodHandler>)methodHandler;

@end

J2OBJC_STATIC_INIT(ASMethodHandlerFactory)

FOUNDATION_EXPORT void ASMethodHandlerFactory_init(ASMethodHandlerFactory *self);

FOUNDATION_EXPORT ASMethodHandlerFactory *new_ASMethodHandlerFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASMethodHandlerFactory *create_ASMethodHandlerFactory_init(void);

FOUNDATION_EXPORT void ASMethodHandlerFactory_init__(void);

FOUNDATION_EXPORT id<JavaUtilList> ASMethodHandlerFactory_getRegistrations(void);

FOUNDATION_EXPORT void ASMethodHandlerFactory_register__WithASMethodHandler_(id<ASMethodHandler> methodHandler);

J2OBJC_TYPE_LITERAL_HEADER(ASMethodHandlerFactory)

@compatibility_alias ComAsheraModelMethodHandlerFactory ASMethodHandlerFactory;

#endif

#pragma pop_macro("INCLUDE_ALL_MethodHandlerFactory")
