//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSAndroidXConstraintLayoutPlugin\src\main\java\com\ashera\constraintlayout\ConstraintLayoutImpl.java
//

#include "AbstractEnumToIntConverter.h"
#include "BaseHasWidgets.h"
#include "ConstraintLayout.h"
#include "ConstraintLayoutImpl.h"
#include "ConverterFactory.h"
#include "Event.h"
#include "EventBus.h"
#include "EventBusHandler.h"
#include "IAttributable.h"
#include "IFragment.h"
#include "ILifeCycleDecorator.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IWidget.h"
#include "IWidgetLifeCycleListener.h"
#include "IdGenerator.h"
#include "J2ObjC_source.h"
#include "MeasureEvent.h"
#include "OnLayoutEvent.h"
#include "View.h"
#include "ViewGroup.h"
#include "ViewGroupImpl.h"
#include "ViewImpl.h"
#include "WidgetAttribute.h"
#include "WidgetFactory.h"
#include "java/lang/Boolean.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

#include <UIKit/UIKit.h>
#include "ASUIView.h"
#include "HasLifeCycleDecorators.h"

@protocol JavaUtilMap;


#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ASConstraintLayoutImpl () {
 @public
  id uiView_;
  ADXConstraintLayout *constraintLayout_;
  ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *builder_;
  ASConstraintLayoutImpl_ConstraintLayoutBean *bean_;
  ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *paramsBuilder_;
  ASConstraintLayoutImpl_ConstraintLayoutParamsBean *paramsBean_;
}

- (void)addDellocHandler;

- (void)setWidgetOnNativeClass;

- (void)createLayoutParamsWithADView:(ADView *)view;

- (ADXConstraintLayout_LayoutParams *)getLayoutParamsWithADView:(ADView *)view;

- (void)setLayout_constraintHeightWithADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams
                                                                withId:(id)objValue;

- (void)setLayout_constraintWidthWithADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams
                                                               withId:(id)objValue;

- (id)getLayout_constraintHeightWithADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams;

- (id)getLayout_constraintWidthWithADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams;

- (void)setOptimizationLevelWithId:(id)objValue;

- (id)getOptimizationLevel;

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl, constraintLayout_, ADXConstraintLayout *)
J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl, builder_, ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)
J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl, bean_, ASConstraintLayoutImpl_ConstraintLayoutBean *)
J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl, paramsBuilder_, ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)
J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl, paramsBean_, ASConstraintLayoutImpl_ConstraintLayoutParamsBean *)

inline NSString *ASConstraintLayoutImpl_get_DELLOC_EVENT(void);
static NSString *ASConstraintLayoutImpl_DELLOC_EVENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASConstraintLayoutImpl, DELLOC_EVENT, NSString *)

__attribute__((unused)) static void ASConstraintLayoutImpl_addDellocHandler(ASConstraintLayoutImpl *self);

__attribute__((unused)) static void ASConstraintLayoutImpl_setWidgetOnNativeClass(ASConstraintLayoutImpl *self);

__attribute__((unused)) static void ASConstraintLayoutImpl_createLayoutParamsWithADView_(ASConstraintLayoutImpl *self, ADView *view);

__attribute__((unused)) static ADXConstraintLayout_LayoutParams *ASConstraintLayoutImpl_getLayoutParamsWithADView_(ASConstraintLayoutImpl *self, ADView *view);

__attribute__((unused)) static void ASConstraintLayoutImpl_setLayout_constraintHeightWithADXConstraintLayout_LayoutParams_withId_(ASConstraintLayoutImpl *self, ADXConstraintLayout_LayoutParams *layoutParams, id objValue);

__attribute__((unused)) static void ASConstraintLayoutImpl_setLayout_constraintWidthWithADXConstraintLayout_LayoutParams_withId_(ASConstraintLayoutImpl *self, ADXConstraintLayout_LayoutParams *layoutParams, id objValue);

__attribute__((unused)) static id ASConstraintLayoutImpl_getLayout_constraintHeightWithADXConstraintLayout_LayoutParams_(ASConstraintLayoutImpl *self, ADXConstraintLayout_LayoutParams *layoutParams);

__attribute__((unused)) static id ASConstraintLayoutImpl_getLayout_constraintWidthWithADXConstraintLayout_LayoutParams_(ASConstraintLayoutImpl *self, ADXConstraintLayout_LayoutParams *layoutParams);

__attribute__((unused)) static void ASConstraintLayoutImpl_setOptimizationLevelWithId_(ASConstraintLayoutImpl *self, id objValue);

__attribute__((unused)) static id ASConstraintLayoutImpl_getOptimizationLevel(ASConstraintLayoutImpl *self);

@interface ASConstraintLayoutImpl_DallocHandler () {
 @public
  __unsafe_unretained ASConstraintLayoutImpl *this$0_;
}

@end

@interface ASConstraintLayoutImpl_OptimizationLevel () {
 @public
  id<JavaUtilMap> mapping_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_OptimizationLevel, mapping_, id<JavaUtilMap>)

@interface ASConstraintLayoutImpl_Orientation () {
 @public
  id<JavaUtilMap> mapping_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_Orientation, mapping_, id<JavaUtilMap>)

@interface ASConstraintLayoutImpl_Layout_constraintWidth () {
 @public
  id<JavaUtilMap> mapping_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_Layout_constraintWidth, mapping_, id<JavaUtilMap>)

@interface ASConstraintLayoutImpl_Layout_constraintHeight () {
 @public
  id<JavaUtilMap> mapping_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_Layout_constraintHeight, mapping_, id<JavaUtilMap>)

@interface ASConstraintLayoutImpl_Layout_constraintWidth_default () {
 @public
  id<JavaUtilMap> mapping_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_Layout_constraintWidth_default, mapping_, id<JavaUtilMap>)

@interface ASConstraintLayoutImpl_Layout_constraintHeight_default () {
 @public
  id<JavaUtilMap> mapping_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_Layout_constraintHeight_default, mapping_, id<JavaUtilMap>)

@interface ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle () {
 @public
  id<JavaUtilMap> mapping_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle, mapping_, id<JavaUtilMap>)

@interface ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle () {
 @public
  id<JavaUtilMap> mapping_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle, mapping_, id<JavaUtilMap>)

@interface ASConstraintLayoutImpl_Layout_wrapBehaviorInParent () {
 @public
  id<JavaUtilMap> mapping_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_Layout_wrapBehaviorInParent, mapping_, id<JavaUtilMap>)

@interface ASConstraintLayoutImpl_ConstraintLayoutExt () {
 @public
  __unsafe_unretained ASConstraintLayoutImpl *this$0_;
  ASMeasureEvent *measureFinished_;
  ASOnLayoutEvent *onLayoutEvent_;
}

@end

J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_ConstraintLayoutExt, measureFinished_, ASMeasureEvent *)
J2OBJC_FIELD_SETTER(ASConstraintLayoutImpl_ConstraintLayoutExt, onLayoutEvent_, ASOnLayoutEvent *)

@interface ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder () {
 @public
  ASConstraintLayoutImpl *this$0_;
}

@end

@interface ASConstraintLayoutImpl_ConstraintLayoutBean () {
 @public
  ASConstraintLayoutImpl *this$0_;
}

@end

@interface ASConstraintLayoutImpl_ConstraintLayoutParamsBean () {
 @public
  ASConstraintLayoutImpl *this$0_;
}

@end

J2OBJC_INITIALIZED_DEFN(ASConstraintLayoutImpl)

NSString *ASConstraintLayoutImpl_LOCAL_NAME = @"androidx.constraintlayout.widget.ConstraintLayout";
NSString *ASConstraintLayoutImpl_GROUP_NAME = @"androidx.constraintlayout.widget.ConstraintLayout";

@implementation ASConstraintLayoutImpl

@synthesize uiView = uiView_;

- (void)addDellocHandler {
  ASConstraintLayoutImpl_addDellocHandler(self);
}

- (void)loadAttributesWithNSString:(NSString *)localName {
  ASViewGroupImpl_register__WithNSString_(localName);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"minWidth"])) withTypeWithNSString:@"dimension"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"minHeight"])) withTypeWithNSString:@"dimension"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"maxWidth"])) withTypeWithNSString:@"dimension"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"maxHeight"])) withTypeWithNSString:@"dimension"]);
  ASConverterFactory_register__WithNSString_withASIConverter_(@"androidx.constraintlayout.widget.ConstraintLayout.optimizationLevel", new_ASConstraintLayoutImpl_OptimizationLevel_init());
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"optimizationLevel"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.optimizationLevel"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_optimizationLevel"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.optimizationLevel"]);
  ASConverterFactory_register__WithNSString_withASIConverter_(@"androidx.constraintlayout.widget.ConstraintLayout.orientation", new_ASConstraintLayoutImpl_Orientation_init());
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_orientation"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.orientation"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintCircle"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintCircleRadius"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintCircleAngle"])) withTypeWithNSString:@"float"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintGuide_begin"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintGuide_end"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintGuide_percent"])) withTypeWithNSString:@"float"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintLeft_toLeftOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintLeft_toRightOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintRight_toLeftOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintRight_toRightOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintTop_toTopOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintTop_toBottomOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintBottom_toTopOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintBottom_toBottomOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintBaseline_toBaselineOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintBaseline_toTopOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintBaseline_toBottomOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintStart_toEndOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintStart_toStartOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintEnd_toStartOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintEnd_toEndOf"])) withTypeWithNSString:@"id"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_goneMarginLeft"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_goneMarginTop"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_goneMarginRight"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_goneMarginBottom"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_goneMarginStart"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_goneMarginEnd"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_goneMarginBaseline"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_marginBaseline"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASConverterFactory_register__WithNSString_withASIConverter_(@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintWidth", new_ASConstraintLayoutImpl_Layout_constraintWidth_init());
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintWidth"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintWidth"])) forChild]);
  ASConverterFactory_register__WithNSString_withASIConverter_(@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintHeight", new_ASConstraintLayoutImpl_Layout_constraintHeight_init());
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintHeight"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintHeight"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constrainedWidth"])) withTypeWithNSString:@"boolean"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constrainedHeight"])) withTypeWithNSString:@"boolean"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintHorizontal_bias"])) withTypeWithNSString:@"float"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintVertical_bias"])) withTypeWithNSString:@"float"])) forChild]);
  ASConverterFactory_register__WithNSString_withASIConverter_(@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintWidth_default", new_ASConstraintLayoutImpl_Layout_constraintWidth_default_init());
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintWidth_default"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintWidth_default"])) forChild]);
  ASConverterFactory_register__WithNSString_withASIConverter_(@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintHeight_default", new_ASConstraintLayoutImpl_Layout_constraintHeight_default_init());
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintHeight_default"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintHeight_default"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintWidth_min"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintWidth_max"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintWidth_percent"])) withTypeWithNSString:@"float"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintHeight_min"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintHeight_max"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintHeight_percent"])) withTypeWithNSString:@"float"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintDimensionRatio"])) withTypeWithNSString:@"string"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintHorizontal_weight"])) withTypeWithNSString:@"float"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintVertical_weight"])) withTypeWithNSString:@"float"])) forChild]);
  ASConverterFactory_register__WithNSString_withASIConverter_(@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintHorizontal_chainStyle", new_ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_init());
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintHorizontal_chainStyle"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintHorizontal_chainStyle"])) forChild]);
  ASConverterFactory_register__WithNSString_withASIConverter_(@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintVertical_chainStyle", new_ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_init());
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintVertical_chainStyle"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.layout_constraintVertical_chainStyle"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_editor_absoluteX"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_editor_absoluteY"])) withTypeWithNSString:@"dimension"])) forChild]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_constraintTag"])) withTypeWithNSString:@"string"])) forChild]);
  ASConverterFactory_register__WithNSString_withASIConverter_(@"androidx.constraintlayout.widget.ConstraintLayout.layout_wrapBehaviorInParent", new_ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_init());
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"layout_wrapBehaviorInParent"])) withTypeWithNSString:@"androidx.constraintlayout.widget.ConstraintLayout.layout_wrapBehaviorInParent"])) forChild]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)localname {
  ASConstraintLayoutImpl_initWithNSString_(self, localname);
  return self;
}

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname {
  ASConstraintLayoutImpl_initWithNSString_withNSString_(self, groupName, localname);
  return self;
}

- (id<ASIWidget>)newInstance {
  return new_ASConstraintLayoutImpl_init();
}

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params {
  [super createWithASIFragment:fragment withJavaUtilMap:params];
  constraintLayout_ = new_ASConstraintLayoutImpl_ConstraintLayoutExt_initWithASConstraintLayoutImpl_(self);
  [self nativeCreateWithJavaUtilMap:params];
  ASConstraintLayoutImpl_addDellocHandler(self);
  ASViewGroupImpl_registerCommandConveterWithASIWidget_(self);
  ASConstraintLayoutImpl_setWidgetOnNativeClass(self);
}

- (void)setWidgetOnNativeClass {
  ASConstraintLayoutImpl_setWidgetOnNativeClass(self);
}

- (id)asWidget {
  return constraintLayout_;
}

- (jboolean)removeWithASIWidget:(id<ASIWidget>)w {
  jboolean remove = [super removeWithASIWidget:w];
  [((ADXConstraintLayout *) nil_chk(constraintLayout_)) removeViewWithADView:(ADView *) cast_chk([((id<ASIWidget>) nil_chk(w)) asWidget], [ADView class])];
  ASViewGroupImpl_nativeRemoveViewWithASIWidget_(w);
  return remove;
}

- (jboolean)removeWithInt:(jint)index {
  id<ASIWidget> widget = [((id<JavaUtilList>) nil_chk(widgets_)) getWithInt:index];
  jboolean remove = [super removeWithInt:index];
  if (index + 1 <= [((ADXConstraintLayout *) nil_chk(constraintLayout_)) getChildCount]) {
    [((ADXConstraintLayout *) nil_chk(constraintLayout_)) removeViewAtWithInt:index];
    ASViewGroupImpl_nativeRemoveViewWithASIWidget_(widget);
  }
  return remove;
}

- (void)addWithASIWidget:(id<ASIWidget>)w
                 withInt:(jint)index {
  if (index != -2) {
    ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w)) asWidget], [ADView class]);
    ASConstraintLayoutImpl_createLayoutParamsWithADView_(self, view);
    if (index == -1) {
      [((ADXConstraintLayout *) nil_chk(constraintLayout_)) addViewWithADView:view];
    }
    else {
      [((ADXConstraintLayout *) nil_chk(constraintLayout_)) addViewWithADView:view withInt:index];
    }
  }
  ASViewGroupImpl_nativeAddViewWithId_withId_([self asNativeWidget], [((id<ASIWidget>) nil_chk(w)) asNativeWidget]);
  [super addWithASIWidget:w withInt:index];
}

- (void)createLayoutParamsWithADView:(ADView *)view {
  ASConstraintLayoutImpl_createLayoutParamsWithADView_(self, view);
}

- (ADXConstraintLayout_LayoutParams *)getLayoutParamsWithADView:(ADView *)view {
  return ASConstraintLayoutImpl_getLayoutParamsWithADView_(self, view);
}

- (void)setChildAttributeWithASIWidget:(id<ASIWidget>)w
                 withASWidgetAttribute:(ASWidgetAttribute *)key
                          withNSString:(NSString *)strValue
                                withId:(id)objValue {
  ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w)) asWidget], [ADView class]);
  ADXConstraintLayout_LayoutParams *layoutParams = ASConstraintLayoutImpl_getLayoutParamsWithADView_(self, view);
  ASViewGroupImpl_setChildAttributeWithASIWidget_withASWidgetAttribute_withId_withId_(w, key, objValue, layoutParams);
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"layout_width", @"layout_height", @"layout_orientation", @"layout_constraintCircle", @"layout_constraintCircleRadius", @"layout_constraintCircleAngle", @"layout_constraintGuide_begin", @"layout_constraintGuide_end", @"layout_constraintGuide_percent", @"layout_constraintLeft_toLeftOf", @"layout_constraintLeft_toRightOf", @"layout_constraintRight_toLeftOf", @"layout_constraintRight_toRightOf", @"layout_constraintTop_toTopOf", @"layout_constraintTop_toBottomOf", @"layout_constraintBottom_toTopOf", @"layout_constraintBottom_toBottomOf", @"layout_constraintBaseline_toBaselineOf", @"layout_constraintBaseline_toTopOf", @"layout_constraintBaseline_toBottomOf", @"layout_constraintStart_toEndOf", @"layout_constraintStart_toStartOf", @"layout_constraintEnd_toStartOf", @"layout_constraintEnd_toEndOf", @"layout_goneMarginLeft", @"layout_goneMarginTop", @"layout_goneMarginRight", @"layout_goneMarginBottom", @"layout_goneMarginStart", @"layout_goneMarginEnd", @"layout_goneMarginBaseline", @"layout_marginBaseline", @"layout_constraintWidth", @"layout_constraintHeight", @"layout_constrainedWidth", @"layout_constrainedHeight", @"layout_constraintHorizontal_bias", @"layout_constraintVertical_bias", @"layout_constraintWidth_default", @"layout_constraintHeight_default", @"layout_constraintWidth_min", @"layout_constraintWidth_max", @"layout_constraintWidth_percent", @"layout_constraintHeight_min", @"layout_constraintHeight_max", @"layout_constraintHeight_percent", @"layout_constraintDimensionRatio", @"layout_constraintHorizontal_weight", @"layout_constraintVertical_weight", @"layout_constraintHorizontal_chainStyle", @"layout_constraintVertical_chainStyle", @"layout_editor_absoluteX", @"layout_editor_absoluteY", @"layout_constraintTag", @"layout_wrapBehaviorInParent" }, 55)) {
    case 0:
    ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->width_ = [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue];
    break;
    case 1:
    ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->height_ = [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue];
    break;
    case 2:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->orientation_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 3:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->circleConstraint_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 4:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->circleRadius_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 5:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->circleAngle_ = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(objValue, [JavaLangFloat class])))) floatValue];
    }
    break;
    case 6:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->guideBegin_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 7:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->guideEnd_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 8:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->guidePercent_ = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(objValue, [JavaLangFloat class])))) floatValue];
    }
    break;
    case 9:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->leftToLeft_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->leftToLeft_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 10:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->leftToRight_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->leftToRight_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 11:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->rightToLeft_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->rightToLeft_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 12:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->rightToRight_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->rightToRight_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 13:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->topToTop_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->topToTop_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 14:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->topToBottom_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->topToBottom_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 15:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->bottomToTop_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->bottomToTop_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 16:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->bottomToBottom_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->bottomToBottom_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 17:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->baselineToBaseline_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->baselineToBaseline_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 18:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->baselineToTop_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->baselineToTop_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 19:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->baselineToBottom_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->baselineToBottom_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 20:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->startToEnd_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->startToEnd_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 21:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->startToStart_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->startToStart_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 22:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->endToStart_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->endToStart_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 23:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->endToEnd_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
      if ([((NSString *) nil_chk(strValue)) isEqual:@"parent"]) {
        layoutParams->endToEnd_ = ADXConstraintLayout_LayoutParams_PARENT_ID;
      }
    }
    break;
    case 24:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneLeftMargin_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 25:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneTopMargin_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 26:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneRightMargin_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 27:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneBottomMargin_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 28:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneStartMargin_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 29:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneEndMargin_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 30:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneBaselineMargin_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 31:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->baselineMargin_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 32:
    {
      ASConstraintLayoutImpl_setLayout_constraintWidthWithADXConstraintLayout_LayoutParams_withId_(self, layoutParams, objValue);
    }
    break;
    case 33:
    {
      ASConstraintLayoutImpl_setLayout_constraintHeightWithADXConstraintLayout_LayoutParams_withId_(self, layoutParams, objValue);
    }
    break;
    case 34:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->constrainedWidth_ = [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk(objValue, [JavaLangBoolean class])))) booleanValue];
    }
    break;
    case 35:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->constrainedHeight_ = [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk(objValue, [JavaLangBoolean class])))) booleanValue];
    }
    break;
    case 36:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->horizontalBias_ = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(objValue, [JavaLangFloat class])))) floatValue];
    }
    break;
    case 37:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->verticalBias_ = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(objValue, [JavaLangFloat class])))) floatValue];
    }
    break;
    case 38:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintDefaultWidth_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 39:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintDefaultHeight_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 40:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintMinWidth_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 41:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintMaxWidth_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 42:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintPercentWidth_ = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(objValue, [JavaLangFloat class])))) floatValue];
    }
    break;
    case 43:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintMinHeight_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 44:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintMaxHeight_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 45:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintPercentHeight_ = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(objValue, [JavaLangFloat class])))) floatValue];
    }
    break;
    case 46:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->dimensionRatio_ = ((NSString *) cast_chk(objValue, [NSString class]));
    }
    break;
    case 47:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->horizontalWeight_ = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(objValue, [JavaLangFloat class])))) floatValue];
    }
    break;
    case 48:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->verticalWeight_ = [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(objValue, [JavaLangFloat class])))) floatValue];
    }
    break;
    case 49:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->horizontalChainStyle_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 50:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->verticalChainStyle_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 51:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->editorAbsoluteX_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 52:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->editorAbsoluteY_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    case 53:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->constraintTag_ = ((NSString *) cast_chk(objValue, [NSString class]));
    }
    break;
    case 54:
    {
      ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->wrapBehaviorInParent_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class])))) intValue];
    }
    break;
    default:
    break;
  }
  [((ADView *) nil_chk(view)) setLayoutParamsWithADViewGroup_LayoutParams:layoutParams];
}

- (id)getChildAttributeWithASIWidget:(id<ASIWidget>)w
               withASWidgetAttribute:(ASWidgetAttribute *)key {
  id attributeValue = ASViewGroupImpl_getChildAttributeWithASIWidget_withASWidgetAttribute_(w, key);
  if (attributeValue != nil) {
    return attributeValue;
  }
  ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w)) asWidget], [ADView class]);
  ADXConstraintLayout_LayoutParams *layoutParams = ASConstraintLayoutImpl_getLayoutParamsWithADView_(self, view);
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"layout_width", @"layout_height", @"layout_orientation", @"layout_constraintCircle", @"layout_constraintCircleRadius", @"layout_constraintCircleAngle", @"layout_constraintGuide_begin", @"layout_constraintGuide_end", @"layout_constraintGuide_percent", @"layout_constraintLeft_toLeftOf", @"layout_constraintLeft_toRightOf", @"layout_constraintRight_toLeftOf", @"layout_constraintRight_toRightOf", @"layout_constraintTop_toTopOf", @"layout_constraintTop_toBottomOf", @"layout_constraintBottom_toTopOf", @"layout_constraintBottom_toBottomOf", @"layout_constraintBaseline_toBaselineOf", @"layout_constraintBaseline_toTopOf", @"layout_constraintBaseline_toBottomOf", @"layout_constraintStart_toEndOf", @"layout_constraintStart_toStartOf", @"layout_constraintEnd_toStartOf", @"layout_constraintEnd_toEndOf", @"layout_goneMarginLeft", @"layout_goneMarginTop", @"layout_goneMarginRight", @"layout_goneMarginBottom", @"layout_goneMarginStart", @"layout_goneMarginEnd", @"layout_goneMarginBaseline", @"layout_marginBaseline", @"layout_constraintWidth", @"layout_constraintHeight", @"layout_constrainedWidth", @"layout_constrainedHeight", @"layout_constraintHorizontal_bias", @"layout_constraintVertical_bias", @"layout_constraintWidth_default", @"layout_constraintHeight_default", @"layout_constraintWidth_min", @"layout_constraintWidth_max", @"layout_constraintWidth_percent", @"layout_constraintHeight_min", @"layout_constraintHeight_max", @"layout_constraintHeight_percent", @"layout_constraintDimensionRatio", @"layout_constraintHorizontal_weight", @"layout_constraintVertical_weight", @"layout_constraintHorizontal_chainStyle", @"layout_constraintVertical_chainStyle", @"layout_editor_absoluteX", @"layout_editor_absoluteY", @"layout_constraintTag", @"layout_wrapBehaviorInParent" }, 55)) {
    case 0:
    return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->width_);
    case 1:
    return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->height_);
    case 2:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->orientation_);
    }
    case 3:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->circleConstraint_);
    }
    case 4:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->circleRadius_);
    }
    case 5:
    {
      return JavaLangFloat_valueOfWithFloat_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->circleAngle_);
    }
    case 6:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->guideBegin_);
    }
    case 7:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->guideEnd_);
    }
    case 8:
    {
      return JavaLangFloat_valueOfWithFloat_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->guidePercent_);
    }
    case 9:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->leftToLeft_);
    }
    case 10:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->leftToRight_);
    }
    case 11:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->rightToLeft_);
    }
    case 12:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->rightToRight_);
    }
    case 13:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->topToTop_);
    }
    case 14:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->topToBottom_);
    }
    case 15:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->bottomToTop_);
    }
    case 16:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->bottomToBottom_);
    }
    case 17:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->baselineToBaseline_);
    }
    case 18:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->baselineToTop_);
    }
    case 19:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->baselineToBottom_);
    }
    case 20:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->startToEnd_);
    }
    case 21:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->startToStart_);
    }
    case 22:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->endToStart_);
    }
    case 23:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->endToEnd_);
    }
    case 24:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneLeftMargin_);
    }
    case 25:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneTopMargin_);
    }
    case 26:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneRightMargin_);
    }
    case 27:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneBottomMargin_);
    }
    case 28:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneStartMargin_);
    }
    case 29:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneEndMargin_);
    }
    case 30:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->goneBaselineMargin_);
    }
    case 31:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->baselineMargin_);
    }
    case 32:
    {
      return ASConstraintLayoutImpl_getLayout_constraintWidthWithADXConstraintLayout_LayoutParams_(self, layoutParams);
    }
    case 33:
    {
      return ASConstraintLayoutImpl_getLayout_constraintHeightWithADXConstraintLayout_LayoutParams_(self, layoutParams);
    }
    case 34:
    {
      return JavaLangBoolean_valueOfWithBoolean_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->constrainedWidth_);
    }
    case 35:
    {
      return JavaLangBoolean_valueOfWithBoolean_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->constrainedHeight_);
    }
    case 36:
    {
      return JavaLangFloat_valueOfWithFloat_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->horizontalBias_);
    }
    case 37:
    {
      return JavaLangFloat_valueOfWithFloat_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->verticalBias_);
    }
    case 38:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintDefaultWidth_);
    }
    case 39:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintDefaultHeight_);
    }
    case 40:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintMinWidth_);
    }
    case 41:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintMaxWidth_);
    }
    case 42:
    {
      return JavaLangFloat_valueOfWithFloat_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintPercentWidth_);
    }
    case 43:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintMinHeight_);
    }
    case 44:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintMaxHeight_);
    }
    case 45:
    {
      return JavaLangFloat_valueOfWithFloat_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->matchConstraintPercentHeight_);
    }
    case 46:
    {
      return ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->dimensionRatio_;
    }
    case 47:
    {
      return JavaLangFloat_valueOfWithFloat_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->horizontalWeight_);
    }
    case 48:
    {
      return JavaLangFloat_valueOfWithFloat_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->verticalWeight_);
    }
    case 49:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->horizontalChainStyle_);
    }
    case 50:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->verticalChainStyle_);
    }
    case 51:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->editorAbsoluteX_);
    }
    case 52:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->editorAbsoluteY_);
    }
    case 53:
    {
      return ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->constraintTag_;
    }
    case 54:
    {
      return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->wrapBehaviorInParent_);
    }
  }
  return nil;
}

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height {
  [((ASConstraintLayoutImpl_ConstraintLayoutExt *) nil_chk(((ASConstraintLayoutImpl_ConstraintLayoutExt *) cast_chk(constraintLayout_, [ASConstraintLayoutImpl_ConstraintLayoutExt class])))) updateMeasuredDimensionWithInt:width withInt:height];
}

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ASViewGroupImpl_setAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(self, key, strValue, objValue, decorator);
  id nativeWidget = [self asNativeWidget];
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"minWidth", @"minHeight", @"maxWidth", @"maxHeight", @"optimizationLevel" }, 5)) {
    case 0:
    {
      [((ADXConstraintLayout *) nil_chk(constraintLayout_)) setMinWidthWithInt:[((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue]];
    }
    break;
    case 1:
    {
      [((ADXConstraintLayout *) nil_chk(constraintLayout_)) setMinHeightWithInt:[((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue]];
    }
    break;
    case 2:
    {
      [((ADXConstraintLayout *) nil_chk(constraintLayout_)) setMaxWidthWithInt:[((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue]];
    }
    break;
    case 3:
    {
      [((ADXConstraintLayout *) nil_chk(constraintLayout_)) setMaxHeightWithInt:[((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue]];
    }
    break;
    case 4:
    {
      ASConstraintLayoutImpl_setOptimizationLevelWithId_(self, objValue);
    }
    break;
    default:
    break;
  }
}

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  id attributeValue = ASViewGroupImpl_getAttributeWithASIWidget_withASWidgetAttribute_withASILifeCycleDecorator_(self, key, decorator);
  if (attributeValue != nil) {
    return attributeValue;
  }
  id nativeWidget = [self asNativeWidget];
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"minWidth", @"minHeight", @"maxWidth", @"maxHeight", @"layout_optimizationLevel", @"optimizationLevel" }, 6)) {
    case 0:
    {
      return JavaLangInteger_valueOfWithInt_([((ADXConstraintLayout *) nil_chk(constraintLayout_)) getMinWidth]);
    }
    case 1:
    {
      return JavaLangInteger_valueOfWithInt_([((ADXConstraintLayout *) nil_chk(constraintLayout_)) getMinHeight]);
    }
    case 2:
    {
      return JavaLangInteger_valueOfWithInt_([((ADXConstraintLayout *) nil_chk(constraintLayout_)) getMaxWidth]);
    }
    case 3:
    {
      return JavaLangInteger_valueOfWithInt_([((ADXConstraintLayout *) nil_chk(constraintLayout_)) getMaxHeight]);
    }
    case 4:
    case 5:
    {
      return ASConstraintLayoutImpl_getOptimizationLevel(self);
    }
  }
  return nil;
}

- (id)asNativeWidget {
  return uiView_;
}

- (jboolean)checkIosVersionWithNSString:(NSString *)v {
  return ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending);
}

- (void)nativeCreateWithJavaUtilMap:(id<JavaUtilMap>)params {
  ASUIView* uiView = [ASUIView new];
  uiView.backgroundColor = [UIColor clearColor];
  uiView_ = uiView;
}

- (void)requestLayout {
  if ([self isInitialised]) {
    ASViewImpl_requestLayoutWithASIWidget_withId_(self, [self asNativeWidget]);
  }
}

- (void)invalidate {
  if ([self isInitialised]) {
    ASViewImpl_invalidateWithASIWidget_withId_(self, [self asNativeWidget]);
  }
}

- (void)setLayout_constraintHeightWithADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams
                                                                withId:(id)objValue {
  ASConstraintLayoutImpl_setLayout_constraintHeightWithADXConstraintLayout_LayoutParams_withId_(self, layoutParams, objValue);
}

- (void)setLayout_constraintWidthWithADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams
                                                               withId:(id)objValue {
  ASConstraintLayoutImpl_setLayout_constraintWidthWithADXConstraintLayout_LayoutParams_withId_(self, layoutParams, objValue);
}

- (id)getLayout_constraintHeightWithADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams {
  return ASConstraintLayoutImpl_getLayout_constraintHeightWithADXConstraintLayout_LayoutParams_(self, layoutParams);
}

- (id)getLayout_constraintWidthWithADXConstraintLayout_LayoutParams:(ADXConstraintLayout_LayoutParams *)layoutParams {
  return ASConstraintLayoutImpl_getLayout_constraintWidthWithADXConstraintLayout_LayoutParams_(self, layoutParams);
}

- (void)setOptimizationLevelWithId:(id)objValue {
  ASConstraintLayoutImpl_setOptimizationLevelWithId_(self, objValue);
}

- (id)getOptimizationLevel {
  return ASConstraintLayoutImpl_getOptimizationLevel(self);
}

- (void)setIdWithNSString:(NSString *)id_ {
  if (id_ != nil && ![id_ isEqual:@""]) {
    [super setIdWithNSString:id_];
    [((ADXConstraintLayout *) nil_chk(constraintLayout_)) setIdWithInt:ASIdGenerator_getIdWithNSString_(id_)];
  }
}

- (id)getPluginWithNSString:(NSString *)plugin {
  return [((id<ASIAttributable>) nil_chk(ASWidgetFactory_getAttributableWithNSString_(plugin))) newInstanceWithASIWidget:self];
}

- (ASConstraintLayoutImpl_ConstraintLayoutBean *)getBean {
  if (bean_ == nil) {
    bean_ = new_ASConstraintLayoutImpl_ConstraintLayoutBean_initWithASConstraintLayoutImpl_(self);
  }
  return bean_;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)getBuilder {
  if (builder_ == nil) {
    builder_ = new_ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder_initWithASConstraintLayoutImpl_(self);
  }
  return builder_;
}

- (ASConstraintLayoutImpl_ConstraintLayoutParamsBean *)getParamsBean {
  if (paramsBean_ == nil) {
    paramsBean_ = new_ASConstraintLayoutImpl_ConstraintLayoutParamsBean_initWithASConstraintLayoutImpl_(self);
  }
  return paramsBean_;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)getParamsBuilder {
  if (paramsBuilder_ == nil) {
    paramsBuilder_ = new_ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder_initWithASConstraintLayoutImpl_(self);
  }
  return paramsBuilder_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LASIWidget;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x102, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LADXConstraintLayout_LayoutParams;", 0x2, 13, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x101, 24, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x101, 25, 26, -1, 27, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 28, 29, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 30, 29, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 31, 32, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 33, 32, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 34, 35, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 36, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 37, 1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutBean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutParamsBean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(addDellocHandler);
  methods[1].selector = @selector(loadAttributesWithNSString:);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(initWithNSString:);
  methods[4].selector = @selector(initWithNSString:withNSString:);
  methods[5].selector = @selector(newInstance);
  methods[6].selector = @selector(createWithASIFragment:withJavaUtilMap:);
  methods[7].selector = @selector(setWidgetOnNativeClass);
  methods[8].selector = @selector(asWidget);
  methods[9].selector = @selector(removeWithASIWidget:);
  methods[10].selector = @selector(removeWithInt:);
  methods[11].selector = @selector(addWithASIWidget:withInt:);
  methods[12].selector = @selector(createLayoutParamsWithADView:);
  methods[13].selector = @selector(getLayoutParamsWithADView:);
  methods[14].selector = @selector(setChildAttributeWithASIWidget:withASWidgetAttribute:withNSString:withId:);
  methods[15].selector = @selector(getChildAttributeWithASIWidget:withASWidgetAttribute:);
  methods[16].selector = @selector(updateMeasuredDimensionWithInt:withInt:);
  methods[17].selector = @selector(setAttributeWithASWidgetAttribute:withNSString:withId:withASILifeCycleDecorator:);
  methods[18].selector = @selector(getAttributeWithASWidgetAttribute:withASILifeCycleDecorator:);
  methods[19].selector = @selector(asNativeWidget);
  methods[20].selector = @selector(checkIosVersionWithNSString:);
  methods[21].selector = @selector(nativeCreateWithJavaUtilMap:);
  methods[22].selector = @selector(requestLayout);
  methods[23].selector = @selector(invalidate);
  methods[24].selector = @selector(setLayout_constraintHeightWithADXConstraintLayout_LayoutParams:withId:);
  methods[25].selector = @selector(setLayout_constraintWidthWithADXConstraintLayout_LayoutParams:withId:);
  methods[26].selector = @selector(getLayout_constraintHeightWithADXConstraintLayout_LayoutParams:);
  methods[27].selector = @selector(getLayout_constraintWidthWithADXConstraintLayout_LayoutParams:);
  methods[28].selector = @selector(setOptimizationLevelWithId:);
  methods[29].selector = @selector(getOptimizationLevel);
  methods[30].selector = @selector(setIdWithNSString:);
  methods[31].selector = @selector(getPluginWithNSString:);
  methods[32].selector = @selector(getBean);
  methods[33].selector = @selector(getBuilder);
  methods[34].selector = @selector(getParamsBean);
  methods[35].selector = @selector(getParamsBuilder);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "uiView_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "LOCAL_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 38, -1, -1 },
    { "GROUP_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 39, -1, -1 },
    { "constraintLayout_", "LADXConstraintLayout;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "DELLOC_EVENT", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 40, -1, -1 },
    { "builder_", "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bean_", "LASConstraintLayoutImpl_ConstraintLayoutBean;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "paramsBuilder_", "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "paramsBean_", "LASConstraintLayoutImpl_ConstraintLayoutParamsBean;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "loadAttributes", "LNSString;", "LNSString;LNSString;", "create", "LASIFragment;LJavaUtilMap;", "(Lcom/ashera/core/IFragment;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V", "remove", "LASIWidget;", "I", "add", "LASIWidget;I", "createLayoutParams", "LADView;", "getLayoutParams", "setChildAttribute", "LASIWidget;LASWidgetAttribute;LNSString;LNSObject;", "getChildAttribute", "LASIWidget;LASWidgetAttribute;", "updateMeasuredDimension", "II", "setAttribute", "LASWidgetAttribute;LNSString;LNSObject;LASILifeCycleDecorator;", "getAttribute", "LASWidgetAttribute;LASILifeCycleDecorator;", "checkIosVersion", "nativeCreate", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V", "setLayout_constraintHeight", "LADXConstraintLayout_LayoutParams;LNSObject;", "setLayout_constraintWidth", "getLayout_constraintHeight", "LADXConstraintLayout_LayoutParams;", "getLayout_constraintWidth", "setOptimizationLevel", "LNSObject;", "setId", "getPlugin", &ASConstraintLayoutImpl_LOCAL_NAME, &ASConstraintLayoutImpl_GROUP_NAME, &ASConstraintLayoutImpl_DELLOC_EVENT, "LASConstraintLayoutImpl_DallocHandler;LASConstraintLayoutImpl_OptimizationLevel;LASConstraintLayoutImpl_Orientation;LASConstraintLayoutImpl_Layout_constraintWidth;LASConstraintLayoutImpl_Layout_constraintHeight;LASConstraintLayoutImpl_Layout_constraintWidth_default;LASConstraintLayoutImpl_Layout_constraintHeight_default;LASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle;LASConstraintLayoutImpl_Layout_constraintVertical_chainStyle;LASConstraintLayoutImpl_Layout_wrapBehaviorInParent;LASConstraintLayoutImpl_ConstraintLayoutExt;LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;LASConstraintLayoutImpl_ConstraintLayoutBean;LASConstraintLayoutImpl_ConstraintLayoutParamsBean;LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl = { "ConstraintLayoutImpl", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x1, 36, 9, -1, 41, -1, -1, -1 };
  return &_ASConstraintLayoutImpl;
}

+ (void)initialize {
  if (self == [ASConstraintLayoutImpl class]) {
    ASConstraintLayoutImpl_DELLOC_EVENT = [((ASEvent_StandardEvents *) nil_chk(JreLoadEnum(ASEvent_StandardEvents, dealloc))) description];
    J2OBJC_SET_INITIALIZED(ASConstraintLayoutImpl)
  }
}

@end

void ASConstraintLayoutImpl_addDellocHandler(ASConstraintLayoutImpl *self) {
  [((ASEventBus *) nil_chk([((id<ASIFragment>) nil_chk(self->fragment_)) getEventBus])) onWithNSString:ASConstraintLayoutImpl_DELLOC_EVENT withASEventBusHandlerArray:[IOSObjectArray newArrayWithObjects:(id[]){ create_ASConstraintLayoutImpl_DallocHandler_initWithASConstraintLayoutImpl_withNSString_(self, ASConstraintLayoutImpl_DELLOC_EVENT) } count:1 type:ASEventBusHandler_class_()]];
}

void ASConstraintLayoutImpl_init(ASConstraintLayoutImpl *self) {
  ASBaseHasWidgets_initWithNSString_withNSString_(self, ASConstraintLayoutImpl_GROUP_NAME, ASConstraintLayoutImpl_LOCAL_NAME);
}

ASConstraintLayoutImpl *new_ASConstraintLayoutImpl_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl, init)
}

ASConstraintLayoutImpl *create_ASConstraintLayoutImpl_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl, init)
}

void ASConstraintLayoutImpl_initWithNSString_(ASConstraintLayoutImpl *self, NSString *localname) {
  ASBaseHasWidgets_initWithNSString_withNSString_(self, ASConstraintLayoutImpl_GROUP_NAME, localname);
}

ASConstraintLayoutImpl *new_ASConstraintLayoutImpl_initWithNSString_(NSString *localname) {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl, initWithNSString_, localname)
}

ASConstraintLayoutImpl *create_ASConstraintLayoutImpl_initWithNSString_(NSString *localname) {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl, initWithNSString_, localname)
}

void ASConstraintLayoutImpl_initWithNSString_withNSString_(ASConstraintLayoutImpl *self, NSString *groupName, NSString *localname) {
  ASBaseHasWidgets_initWithNSString_withNSString_(self, groupName, localname);
}

ASConstraintLayoutImpl *new_ASConstraintLayoutImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl, initWithNSString_withNSString_, groupName, localname)
}

ASConstraintLayoutImpl *create_ASConstraintLayoutImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl, initWithNSString_withNSString_, groupName, localname)
}

void ASConstraintLayoutImpl_setWidgetOnNativeClass(ASConstraintLayoutImpl *self) {
  ((ASUIView*) [self asNativeWidget]).widget = self;
}

void ASConstraintLayoutImpl_createLayoutParamsWithADView_(ASConstraintLayoutImpl *self, ADView *view) {
  ADXConstraintLayout_LayoutParams *layoutParams = (ADXConstraintLayout_LayoutParams *) cast_chk([((ADView *) nil_chk(view)) getLayoutParams], [ADXConstraintLayout_LayoutParams class]);
  layoutParams = (ADXConstraintLayout_LayoutParams *) cast_chk([view getLayoutParams], [ADXConstraintLayout_LayoutParams class]);
  if (layoutParams == nil) {
    layoutParams = new_ADXConstraintLayout_LayoutParams_initWithInt_withInt_(-2, -2);
    [view setLayoutParamsWithADViewGroup_LayoutParams:layoutParams];
  }
  else {
    layoutParams->height_ = -2;
    layoutParams->width_ = -2;
  }
}

ADXConstraintLayout_LayoutParams *ASConstraintLayoutImpl_getLayoutParamsWithADView_(ASConstraintLayoutImpl *self, ADView *view) {
  return (ADXConstraintLayout_LayoutParams *) cast_chk([((ADView *) nil_chk(view)) getLayoutParams], [ADXConstraintLayout_LayoutParams class]);
}

void ASConstraintLayoutImpl_setLayout_constraintHeightWithADXConstraintLayout_LayoutParams_withId_(ASConstraintLayoutImpl *self, ADXConstraintLayout_LayoutParams *layoutParams, id objValue) {
  ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->height_ = [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue];
  layoutParams->constrainedHeight_ = true;
}

void ASConstraintLayoutImpl_setLayout_constraintWidthWithADXConstraintLayout_LayoutParams_withId_(ASConstraintLayoutImpl *self, ADXConstraintLayout_LayoutParams *layoutParams, id objValue) {
  ((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->width_ = [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue];
  layoutParams->constrainedWidth_ = true;
}

id ASConstraintLayoutImpl_getLayout_constraintHeightWithADXConstraintLayout_LayoutParams_(ASConstraintLayoutImpl *self, ADXConstraintLayout_LayoutParams *layoutParams) {
  return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->height_);
}

id ASConstraintLayoutImpl_getLayout_constraintWidthWithADXConstraintLayout_LayoutParams_(ASConstraintLayoutImpl *self, ADXConstraintLayout_LayoutParams *layoutParams) {
  return JavaLangInteger_valueOfWithInt_(((ADXConstraintLayout_LayoutParams *) nil_chk(layoutParams))->width_);
}

void ASConstraintLayoutImpl_setOptimizationLevelWithId_(ASConstraintLayoutImpl *self, id objValue) {
  [((ADXConstraintLayout *) nil_chk(self->constraintLayout_)) setOptimizationLevelWithInt:[((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue]];
}

id ASConstraintLayoutImpl_getOptimizationLevel(ASConstraintLayoutImpl *self) {
  return JavaLangInteger_valueOfWithInt_([((ADXConstraintLayout *) nil_chk(self->constraintLayout_)) getOptimizationLevel]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl)

@implementation ASConstraintLayoutImpl_DallocHandler

- (instancetype)initWithASConstraintLayoutImpl:(ASConstraintLayoutImpl *)outer$
                                  withNSString:(NSString *)type {
  ASConstraintLayoutImpl_DallocHandler_initWithASConstraintLayoutImpl_withNSString_(self, outer$, type);
  return self;
}

- (void)doPerformWithId:(id)payload {
  [((ADXConstraintLayout *) nil_chk(this$0_->constraintLayout_)) release__];
}

- (void)__javaClone:(ASConstraintLayoutImpl_DallocHandler *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASConstraintLayoutImpl:withNSString:);
  methods[1].selector = @selector(doPerformWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASConstraintLayoutImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASConstraintLayoutImpl;LNSString;", "doPerform", "LNSObject;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_DallocHandler = { "DallocHandler", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x0, 2, 1, 3, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_DallocHandler;
}

@end

void ASConstraintLayoutImpl_DallocHandler_initWithASConstraintLayoutImpl_withNSString_(ASConstraintLayoutImpl_DallocHandler *self, ASConstraintLayoutImpl *outer$, NSString *type) {
  self->this$0_ = outer$;
  ASEventBusHandler_initWithNSString_(self, type);
}

ASConstraintLayoutImpl_DallocHandler *new_ASConstraintLayoutImpl_DallocHandler_initWithASConstraintLayoutImpl_withNSString_(ASConstraintLayoutImpl *outer$, NSString *type) {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_DallocHandler, initWithASConstraintLayoutImpl_withNSString_, outer$, type)
}

ASConstraintLayoutImpl_DallocHandler *create_ASConstraintLayoutImpl_DallocHandler_initWithASConstraintLayoutImpl_withNSString_(ASConstraintLayoutImpl *outer$, NSString *type) {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_DallocHandler, initWithASConstraintLayoutImpl_withNSString_, outer$, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_DallocHandler)

@implementation ASConstraintLayoutImpl_OptimizationLevel

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_OptimizationLevel_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)getMapping {
  return mapping_;
}

- (JavaLangInteger *)getDefault {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMapping);
  methods[2].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_OptimizationLevel = { "OptimizationLevel", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x18, 3, 1, 2, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_OptimizationLevel;
}

@end

void ASConstraintLayoutImpl_OptimizationLevel_init(ASConstraintLayoutImpl_OptimizationLevel *self) {
  ASAbstractEnumToIntConverter_init(self);
  self->mapping_ = new_JavaUtilHashMap_init();
  {
    (void) [self->mapping_ putWithId:@"none" withId:JavaLangInteger_valueOfWithInt_((jint) 0x0)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"legacy" withId:JavaLangInteger_valueOfWithInt_((jint) 0x0)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"standard" withId:JavaLangInteger_valueOfWithInt_((jint) 0x257)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"direct" withId:JavaLangInteger_valueOfWithInt_((jint) 0x1)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"barrier" withId:JavaLangInteger_valueOfWithInt_((jint) 0x2)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"chains" withId:JavaLangInteger_valueOfWithInt_((jint) 0x4)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"dimensions" withId:JavaLangInteger_valueOfWithInt_((jint) 0x8)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"ratio" withId:JavaLangInteger_valueOfWithInt_((jint) 0x16)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"groups" withId:JavaLangInteger_valueOfWithInt_((jint) 0x32)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"graph" withId:JavaLangInteger_valueOfWithInt_((jint) 0x64)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"graph_wrap" withId:JavaLangInteger_valueOfWithInt_((jint) 0x128)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"cache_measures" withId:JavaLangInteger_valueOfWithInt_((jint) 0x256)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"dependency_ordering" withId:JavaLangInteger_valueOfWithInt_((jint) 0x512)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"grouping" withId:JavaLangInteger_valueOfWithInt_((jint) 0x1024)];
  }
}

ASConstraintLayoutImpl_OptimizationLevel *new_ASConstraintLayoutImpl_OptimizationLevel_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_OptimizationLevel, init)
}

ASConstraintLayoutImpl_OptimizationLevel *create_ASConstraintLayoutImpl_OptimizationLevel_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_OptimizationLevel, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_OptimizationLevel)

@implementation ASConstraintLayoutImpl_Orientation

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_Orientation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)getMapping {
  return mapping_;
}

- (JavaLangInteger *)getDefault {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMapping);
  methods[2].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_Orientation = { "Orientation", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x18, 3, 1, 2, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_Orientation;
}

@end

void ASConstraintLayoutImpl_Orientation_init(ASConstraintLayoutImpl_Orientation *self) {
  ASAbstractEnumToIntConverter_init(self);
  self->mapping_ = new_JavaUtilHashMap_init();
  {
    (void) [self->mapping_ putWithId:@"horizontal" withId:JavaLangInteger_valueOfWithInt_((jint) 0x0)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"vertical" withId:JavaLangInteger_valueOfWithInt_((jint) 0x1)];
  }
}

ASConstraintLayoutImpl_Orientation *new_ASConstraintLayoutImpl_Orientation_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_Orientation, init)
}

ASConstraintLayoutImpl_Orientation *create_ASConstraintLayoutImpl_Orientation_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_Orientation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_Orientation)

@implementation ASConstraintLayoutImpl_Layout_constraintWidth

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_Layout_constraintWidth_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)getMapping {
  return mapping_;
}

- (JavaLangInteger *)getDefault {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMapping);
  methods[2].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_Layout_constraintWidth = { "Layout_constraintWidth", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x18, 3, 1, 2, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_Layout_constraintWidth;
}

@end

void ASConstraintLayoutImpl_Layout_constraintWidth_init(ASConstraintLayoutImpl_Layout_constraintWidth *self) {
  ASAbstractEnumToIntConverter_init(self);
  self->mapping_ = new_JavaUtilHashMap_init();
  {
    (void) [self->mapping_ putWithId:@"match_parent" withId:JavaLangInteger_valueOfWithInt_(-1)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"wrap_content" withId:JavaLangInteger_valueOfWithInt_(-2)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"match_constraint" withId:JavaLangInteger_valueOfWithInt_(-3)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"wrap_content_constrained" withId:JavaLangInteger_valueOfWithInt_(-4)];
  }
}

ASConstraintLayoutImpl_Layout_constraintWidth *new_ASConstraintLayoutImpl_Layout_constraintWidth_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_Layout_constraintWidth, init)
}

ASConstraintLayoutImpl_Layout_constraintWidth *create_ASConstraintLayoutImpl_Layout_constraintWidth_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_Layout_constraintWidth, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_Layout_constraintWidth)

@implementation ASConstraintLayoutImpl_Layout_constraintHeight

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_Layout_constraintHeight_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)getMapping {
  return mapping_;
}

- (JavaLangInteger *)getDefault {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMapping);
  methods[2].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_Layout_constraintHeight = { "Layout_constraintHeight", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x18, 3, 1, 2, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_Layout_constraintHeight;
}

@end

void ASConstraintLayoutImpl_Layout_constraintHeight_init(ASConstraintLayoutImpl_Layout_constraintHeight *self) {
  ASAbstractEnumToIntConverter_init(self);
  self->mapping_ = new_JavaUtilHashMap_init();
  {
    (void) [self->mapping_ putWithId:@"match_parent" withId:JavaLangInteger_valueOfWithInt_(-1)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"wrap_content" withId:JavaLangInteger_valueOfWithInt_(-2)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"match_constraint" withId:JavaLangInteger_valueOfWithInt_(-3)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"wrap_content_constrained" withId:JavaLangInteger_valueOfWithInt_(-4)];
  }
}

ASConstraintLayoutImpl_Layout_constraintHeight *new_ASConstraintLayoutImpl_Layout_constraintHeight_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_Layout_constraintHeight, init)
}

ASConstraintLayoutImpl_Layout_constraintHeight *create_ASConstraintLayoutImpl_Layout_constraintHeight_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_Layout_constraintHeight, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_Layout_constraintHeight)

@implementation ASConstraintLayoutImpl_Layout_constraintWidth_default

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_Layout_constraintWidth_default_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)getMapping {
  return mapping_;
}

- (JavaLangInteger *)getDefault {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMapping);
  methods[2].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_Layout_constraintWidth_default = { "Layout_constraintWidth_default", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x18, 3, 1, 2, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_Layout_constraintWidth_default;
}

@end

void ASConstraintLayoutImpl_Layout_constraintWidth_default_init(ASConstraintLayoutImpl_Layout_constraintWidth_default *self) {
  ASAbstractEnumToIntConverter_init(self);
  self->mapping_ = new_JavaUtilHashMap_init();
  {
    (void) [self->mapping_ putWithId:@"spread" withId:JavaLangInteger_valueOfWithInt_((jint) 0x0)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"wrap" withId:JavaLangInteger_valueOfWithInt_((jint) 0x1)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"percent" withId:JavaLangInteger_valueOfWithInt_((jint) 0x2)];
  }
}

ASConstraintLayoutImpl_Layout_constraintWidth_default *new_ASConstraintLayoutImpl_Layout_constraintWidth_default_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_Layout_constraintWidth_default, init)
}

ASConstraintLayoutImpl_Layout_constraintWidth_default *create_ASConstraintLayoutImpl_Layout_constraintWidth_default_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_Layout_constraintWidth_default, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_Layout_constraintWidth_default)

@implementation ASConstraintLayoutImpl_Layout_constraintHeight_default

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_Layout_constraintHeight_default_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)getMapping {
  return mapping_;
}

- (JavaLangInteger *)getDefault {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMapping);
  methods[2].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_Layout_constraintHeight_default = { "Layout_constraintHeight_default", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x18, 3, 1, 2, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_Layout_constraintHeight_default;
}

@end

void ASConstraintLayoutImpl_Layout_constraintHeight_default_init(ASConstraintLayoutImpl_Layout_constraintHeight_default *self) {
  ASAbstractEnumToIntConverter_init(self);
  self->mapping_ = new_JavaUtilHashMap_init();
  {
    (void) [self->mapping_ putWithId:@"spread" withId:JavaLangInteger_valueOfWithInt_((jint) 0x0)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"wrap" withId:JavaLangInteger_valueOfWithInt_((jint) 0x1)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"percent" withId:JavaLangInteger_valueOfWithInt_((jint) 0x2)];
  }
}

ASConstraintLayoutImpl_Layout_constraintHeight_default *new_ASConstraintLayoutImpl_Layout_constraintHeight_default_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_Layout_constraintHeight_default, init)
}

ASConstraintLayoutImpl_Layout_constraintHeight_default *create_ASConstraintLayoutImpl_Layout_constraintHeight_default_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_Layout_constraintHeight_default, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_Layout_constraintHeight_default)

@implementation ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)getMapping {
  return mapping_;
}

- (JavaLangInteger *)getDefault {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMapping);
  methods[2].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle = { "Layout_constraintHorizontal_chainStyle", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x18, 3, 1, 2, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle;
}

@end

void ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_init(ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle *self) {
  ASAbstractEnumToIntConverter_init(self);
  self->mapping_ = new_JavaUtilHashMap_init();
  {
    (void) [self->mapping_ putWithId:@"spread" withId:JavaLangInteger_valueOfWithInt_((jint) 0x0)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"spread_inside" withId:JavaLangInteger_valueOfWithInt_((jint) 0x1)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"packed" withId:JavaLangInteger_valueOfWithInt_((jint) 0x2)];
  }
}

ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle *new_ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle, init)
}

ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle *create_ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_Layout_constraintHorizontal_chainStyle)

@implementation ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)getMapping {
  return mapping_;
}

- (JavaLangInteger *)getDefault {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMapping);
  methods[2].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle = { "Layout_constraintVertical_chainStyle", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x18, 3, 1, 2, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle;
}

@end

void ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_init(ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle *self) {
  ASAbstractEnumToIntConverter_init(self);
  self->mapping_ = new_JavaUtilHashMap_init();
  {
    (void) [self->mapping_ putWithId:@"spread" withId:JavaLangInteger_valueOfWithInt_((jint) 0x0)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"spread_inside" withId:JavaLangInteger_valueOfWithInt_((jint) 0x1)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"packed" withId:JavaLangInteger_valueOfWithInt_((jint) 0x2)];
  }
}

ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle *new_ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle, init)
}

ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle *create_ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_Layout_constraintVertical_chainStyle)

@implementation ASConstraintLayoutImpl_Layout_wrapBehaviorInParent

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)getMapping {
  return mapping_;
}

- (JavaLangInteger *)getDefault {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMapping);
  methods[2].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", "LASConstraintLayoutImpl;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_Layout_wrapBehaviorInParent = { "Layout_wrapBehaviorInParent", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x18, 3, 1, 2, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_Layout_wrapBehaviorInParent;
}

@end

void ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_init(ASConstraintLayoutImpl_Layout_wrapBehaviorInParent *self) {
  ASAbstractEnumToIntConverter_init(self);
  self->mapping_ = new_JavaUtilHashMap_init();
  {
    (void) [self->mapping_ putWithId:@"included" withId:JavaLangInteger_valueOfWithInt_((jint) 0x0)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"horizontal_only" withId:JavaLangInteger_valueOfWithInt_((jint) 0x1)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"vertical_only" withId:JavaLangInteger_valueOfWithInt_((jint) 0x2)];
    (void) [((id<JavaUtilMap>) nil_chk(self->mapping_)) putWithId:@"skipped" withId:JavaLangInteger_valueOfWithInt_((jint) 0x3)];
  }
}

ASConstraintLayoutImpl_Layout_wrapBehaviorInParent *new_ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_init() {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_Layout_wrapBehaviorInParent, init)
}

ASConstraintLayoutImpl_Layout_wrapBehaviorInParent *create_ASConstraintLayoutImpl_Layout_wrapBehaviorInParent_init() {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_Layout_wrapBehaviorInParent, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_Layout_wrapBehaviorInParent)

@implementation ASConstraintLayoutImpl_ConstraintLayoutExt

- (instancetype)initWithASConstraintLayoutImpl:(ASConstraintLayoutImpl *)outer$ {
  ASConstraintLayoutImpl_ConstraintLayoutExt_initWithASConstraintLayoutImpl_(self, outer$);
  return self;
}

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec {
  [super onMeasureWithInt:widthMeasureSpec withInt:heightMeasureSpec];
  id<ASIWidgetLifeCycleListener> listener = [this$0_ getListener];
  if (listener != nil) {
    [((ASMeasureEvent *) nil_chk(measureFinished_)) setWidthWithInt:[self getMeasuredWidth]];
    [((ASMeasureEvent *) nil_chk(measureFinished_)) setHeightWithInt:[self getMeasuredHeight]];
    [listener eventOccurredWithASIWidgetLifeCycleListener_EventId:JreLoadEnum(ASIWidgetLifeCycleListener_EventId, measureFinished) withASWidgetEvent:measureFinished_];
  }
}

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b {
  [super onLayoutWithBoolean:changed withInt:l withInt:t withInt:r withInt:b];
  ASViewImpl_setDrawableBoundsWithASIWidget_withInt_withInt_withInt_withInt_(this$0_, l, t, r, b);
  ASViewImpl_nativeMakeFrameWithId_withInt_withInt_withInt_withInt_([this$0_ asNativeWidget], l, t, r, b);
  [this$0_ replayBufferedEvents];
  ASViewImpl_redrawDrawablesWithASIWidget_(this$0_);
  id<ASIWidgetLifeCycleListener> listener = [this$0_ getListener];
  if (listener != nil) {
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setBWithInt:b];
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setLWithInt:l];
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setRWithInt:r];
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setTWithInt:t];
    [((ASOnLayoutEvent *) nil_chk(onLayoutEvent_)) setChangedWithBoolean:changed];
    [listener eventOccurredWithASIWidgetLifeCycleListener_EventId:JreLoadEnum(ASIWidgetLifeCycleListener_EventId, onLayout) withASWidgetEvent:onLayoutEvent_];
  }
  if ([this$0_ isInvalidateOnFrameChange] && [this$0_ isInitialised]) {
    [this$0_ invalidate];
  }
}

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas {
}

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height {
  [self setMeasuredDimensionWithInt:width withInt:height];
}

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id<JavaUtilList>)getMethods {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)initialized {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)drawableStateChanged {
  [super drawableStateChanged];
  ASViewImpl_drawableStateChangedWithASIWidget_(this$0_);
}

- (void)offsetTopAndBottomWithInt:(jint)offset {
  [super offsetTopAndBottomWithInt:offset];
  ASViewImpl_nativeMakeFrameWithId_withInt_withInt_withInt_withInt_([this$0_ asNativeWidget], [self getLeft], [self getTop], [self getRight], [self getBottom]);
}

- (void)offsetLeftAndRightWithInt:(jint)offset {
  [super offsetLeftAndRightWithInt:offset];
  ASViewImpl_nativeMakeFrameWithId_withInt_withInt_withInt_withInt_([this$0_ asNativeWidget], [self getLeft], [self getTop], [self getRight], [self getBottom]);
}

- (void)setVisibilityWithInt:(jint)visibility {
  [super setVisibilityWithInt:visibility];
  ASViewImpl_nativeSetVisibilityWithId_withBoolean_([this$0_ asNativeWidget], visibility != ADView_VISIBLE);
}

- (void)__javaClone:(ASConstraintLayoutImpl_ConstraintLayoutExt *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "LASILifeCycleDecorator;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 16, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASConstraintLayoutImpl:);
  methods[1].selector = @selector(onMeasureWithInt:withInt:);
  methods[2].selector = @selector(onLayoutWithBoolean:withInt:withInt:withInt:withInt:);
  methods[3].selector = @selector(executeWithNSString:withNSObjectArray:);
  methods[4].selector = @selector(updateMeasuredDimensionWithInt:withInt:);
  methods[5].selector = @selector(newInstanceWithASIWidget:);
  methods[6].selector = @selector(setAttributeWithASWidgetAttribute:withNSString:withId:);
  methods[7].selector = @selector(getMethods);
  methods[8].selector = @selector(initialized);
  methods[9].selector = @selector(getAttributeWithASWidgetAttribute:);
  methods[10].selector = @selector(drawableStateChanged);
  methods[11].selector = @selector(offsetTopAndBottomWithInt:);
  methods[12].selector = @selector(offsetLeftAndRightWithInt:);
  methods[13].selector = @selector(setVisibilityWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASConstraintLayoutImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "measureFinished_", "LASMeasureEvent;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "onLayoutEvent_", "LASOnLayoutEvent;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASConstraintLayoutImpl;", "onMeasure", "II", "onLayout", "ZIIII", "execute", "LNSString;[LNSObject;", "updateMeasuredDimension", "newInstance", "LASIWidget;", "setAttribute", "LASWidgetAttribute;LNSString;LNSObject;", "()Ljava/util/List<Ljava/lang/String;>;", "getAttribute", "LASWidgetAttribute;", "offsetTopAndBottom", "I", "offsetLeftAndRight", "setVisibility" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_ConstraintLayoutExt = { "ConstraintLayoutExt", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x1, 14, 3, 0, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_ConstraintLayoutExt;
}

@end

void ASConstraintLayoutImpl_ConstraintLayoutExt_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl_ConstraintLayoutExt *self, ASConstraintLayoutImpl *outer$) {
  self->this$0_ = outer$;
  ADXConstraintLayout_init(self);
  self->measureFinished_ = new_ASMeasureEvent_init();
  self->onLayoutEvent_ = new_ASOnLayoutEvent_init();
}

ASConstraintLayoutImpl_ConstraintLayoutExt *new_ASConstraintLayoutImpl_ConstraintLayoutExt_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_ConstraintLayoutExt, initWithASConstraintLayoutImpl_, outer$)
}

ASConstraintLayoutImpl_ConstraintLayoutExt *create_ASConstraintLayoutImpl_ConstraintLayoutExt_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_ConstraintLayoutExt, initWithASConstraintLayoutImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_ConstraintLayoutExt)

@implementation ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder

- (instancetype)initWithASConstraintLayoutImpl:(ASConstraintLayoutImpl *)outer$ {
  ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder_initWithASConstraintLayoutImpl_(self, outer$);
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)executeWithBoolean:(jboolean)setter {
  if (setter) {
    [this$0_ executeCommandWithJavaUtilMap:command_ withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
    [((id<ASIFragment>) nil_chk([this$0_ getFragment])) remeasure];
  }
  [this$0_ executeCommandWithJavaUtilMap:command_ withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)tryGetMinWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"minWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getMinWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"minWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)setMinWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"minWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)tryGetMinHeight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"minHeight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getMinHeight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"minHeight"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)setMinHeightWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"minHeight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)tryGetMaxWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"maxWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getMaxWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"maxWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)setMaxWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"maxWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)tryGetMaxHeight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"maxHeight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getMaxHeight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"maxHeight"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)setMaxHeightWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"maxHeight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)tryGetOptimizationLevel {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"optimizationLevel"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getOptimizationLevel {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"optimizationLevel"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)setOptimizationLevelWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"optimizationLevel"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)tryGetLayout_optimizationLevel {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"optimizationLevel"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayout_optimizationLevel {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"optimizationLevel"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *)setLayout_optimizationLevelWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_optimizationLevel"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, 7, 4, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, 8, 4, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;", 0x1, 9, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASConstraintLayoutImpl:);
  methods[1].selector = @selector(executeWithBoolean:);
  methods[2].selector = @selector(tryGetMinWidth);
  methods[3].selector = @selector(getMinWidth);
  methods[4].selector = @selector(setMinWidthWithNSString:);
  methods[5].selector = @selector(tryGetMinHeight);
  methods[6].selector = @selector(getMinHeight);
  methods[7].selector = @selector(setMinHeightWithNSString:);
  methods[8].selector = @selector(tryGetMaxWidth);
  methods[9].selector = @selector(getMaxWidth);
  methods[10].selector = @selector(setMaxWidthWithNSString:);
  methods[11].selector = @selector(tryGetMaxHeight);
  methods[12].selector = @selector(getMaxHeight);
  methods[13].selector = @selector(setMaxHeightWithNSString:);
  methods[14].selector = @selector(tryGetOptimizationLevel);
  methods[15].selector = @selector(getOptimizationLevel);
  methods[16].selector = @selector(setOptimizationLevelWithNSString:);
  methods[17].selector = @selector(tryGetLayout_optimizationLevel);
  methods[18].selector = @selector(getLayout_optimizationLevel);
  methods[19].selector = @selector(setLayout_optimizationLevelWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASConstraintLayoutImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASConstraintLayoutImpl;", "execute", "Z", "setMinWidth", "LNSString;", "setMinHeight", "setMaxWidth", "setMaxHeight", "setOptimizationLevel", "setLayout_optimizationLevel", "Lcom/ashera/layout/ViewGroupImpl$ViewGroupCommandBuilder<Lcom/ashera/constraintlayout/ConstraintLayoutImpl$ConstraintLayoutCommandBuilder;>;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder = { "ConstraintLayoutCommandBuilder", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x1, 20, 1, 0, -1, -1, 10, -1 };
  return &_ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder;
}

@end

void ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *self, ASConstraintLayoutImpl *outer$) {
  self->this$0_ = outer$;
  ASViewGroupImpl_ViewGroupCommandBuilder_init(self);
}

ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *new_ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder, initWithASConstraintLayoutImpl_, outer$)
}

ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *create_ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder, initWithASConstraintLayoutImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder)

@implementation ASConstraintLayoutImpl_ConstraintLayoutBean

- (instancetype)initWithASConstraintLayoutImpl:(ASConstraintLayoutImpl *)outer$ {
  ASConstraintLayoutImpl_ConstraintLayoutBean_initWithASConstraintLayoutImpl_(self, outer$);
  return self;
}

- (id)getMinWidth {
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetMinWidth])) executeWithBoolean:false])) getMinWidth];
}

- (void)setMinWidthWithNSString:(NSString *)value {
  (void) [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setMinWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getMinHeight {
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetMinHeight])) executeWithBoolean:false])) getMinHeight];
}

- (void)setMinHeightWithNSString:(NSString *)value {
  (void) [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setMinHeightWithNSString:value])) executeWithBoolean:true];
}

- (id)getMaxWidth {
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetMaxWidth])) executeWithBoolean:false])) getMaxWidth];
}

- (void)setMaxWidthWithNSString:(NSString *)value {
  (void) [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setMaxWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getMaxHeight {
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetMaxHeight])) executeWithBoolean:false])) getMaxHeight];
}

- (void)setMaxHeightWithNSString:(NSString *)value {
  (void) [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setMaxHeightWithNSString:value])) executeWithBoolean:true];
}

- (id)getOptimizationLevel {
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetOptimizationLevel])) executeWithBoolean:false])) getOptimizationLevel];
}

- (void)setOptimizationLevelWithNSString:(NSString *)value {
  (void) [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setOptimizationLevelWithNSString:value])) executeWithBoolean:true];
}

- (id)getLayout_optimizationLevel {
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetLayout_optimizationLevel])) executeWithBoolean:false])) getLayout_optimizationLevel];
}

- (void)setLayout_optimizationLevelWithNSString:(NSString *)value {
  (void) [((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setLayout_optimizationLevelWithNSString:value])) executeWithBoolean:true];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASConstraintLayoutImpl:);
  methods[1].selector = @selector(getMinWidth);
  methods[2].selector = @selector(setMinWidthWithNSString:);
  methods[3].selector = @selector(getMinHeight);
  methods[4].selector = @selector(setMinHeightWithNSString:);
  methods[5].selector = @selector(getMaxWidth);
  methods[6].selector = @selector(setMaxWidthWithNSString:);
  methods[7].selector = @selector(getMaxHeight);
  methods[8].selector = @selector(setMaxHeightWithNSString:);
  methods[9].selector = @selector(getOptimizationLevel);
  methods[10].selector = @selector(setOptimizationLevelWithNSString:);
  methods[11].selector = @selector(getLayout_optimizationLevel);
  methods[12].selector = @selector(setLayout_optimizationLevelWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASConstraintLayoutImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASConstraintLayoutImpl;", "setMinWidth", "LNSString;", "setMinHeight", "setMaxWidth", "setMaxHeight", "setOptimizationLevel", "setLayout_optimizationLevel" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_ConstraintLayoutBean = { "ConstraintLayoutBean", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x1, 13, 1, 0, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_ConstraintLayoutBean;
}

@end

void ASConstraintLayoutImpl_ConstraintLayoutBean_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl_ConstraintLayoutBean *self, ASConstraintLayoutImpl *outer$) {
  self->this$0_ = outer$;
  ASViewGroupImpl_ViewGroupBean_initWithASIWidget_(self, outer$);
}

ASConstraintLayoutImpl_ConstraintLayoutBean *new_ASConstraintLayoutImpl_ConstraintLayoutBean_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_ConstraintLayoutBean, initWithASConstraintLayoutImpl_, outer$)
}

ASConstraintLayoutImpl_ConstraintLayoutBean *create_ASConstraintLayoutImpl_ConstraintLayoutBean_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_ConstraintLayoutBean, initWithASConstraintLayoutImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_ConstraintLayoutBean)

@implementation ASConstraintLayoutImpl_ConstraintLayoutParamsBean

- (instancetype)initWithASConstraintLayoutImpl:(ASConstraintLayoutImpl *)outer$ {
  ASConstraintLayoutImpl_ConstraintLayoutParamsBean_initWithASConstraintLayoutImpl_(self, outer$);
  return self;
}

- (id)getLayoutOrientationWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutOrientation])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutOrientation];
}

- (void)setLayoutOrientationWithASIWidget:(id<ASIWidget>)w
                             withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutOrientationWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintCircleWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintCircle])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintCircle];
}

- (void)setLayoutConstraintCircleWithASIWidget:(id<ASIWidget>)w
                                  withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintCircleWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintCircleRadiusWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintCircleRadius])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintCircleRadius];
}

- (void)setLayoutConstraintCircleRadiusWithASIWidget:(id<ASIWidget>)w
                                        withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintCircleRadiusWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintCircleAngleWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintCircleAngle])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintCircleAngle];
}

- (void)setLayoutConstraintCircleAngleWithASIWidget:(id<ASIWidget>)w
                                          withFloat:(jfloat)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintCircleAngleWithFloat:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintGuide_beginWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintGuide_begin])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintGuide_begin];
}

- (void)setLayoutConstraintGuide_beginWithASIWidget:(id<ASIWidget>)w
                                       withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintGuide_beginWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintGuide_endWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintGuide_end])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintGuide_end];
}

- (void)setLayoutConstraintGuide_endWithASIWidget:(id<ASIWidget>)w
                                     withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintGuide_endWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintGuide_percentWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintGuide_percent])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintGuide_percent];
}

- (void)setLayoutConstraintGuide_percentWithASIWidget:(id<ASIWidget>)w
                                            withFloat:(jfloat)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintGuide_percentWithFloat:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintLeft_toLeftOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintLeft_toLeftOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintLeft_toLeftOf];
}

- (void)setLayoutConstraintLeft_toLeftOfWithASIWidget:(id<ASIWidget>)w
                                         withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintLeft_toLeftOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintLeft_toRightOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintLeft_toRightOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintLeft_toRightOf];
}

- (void)setLayoutConstraintLeft_toRightOfWithASIWidget:(id<ASIWidget>)w
                                          withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintLeft_toRightOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintRight_toLeftOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintRight_toLeftOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintRight_toLeftOf];
}

- (void)setLayoutConstraintRight_toLeftOfWithASIWidget:(id<ASIWidget>)w
                                          withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintRight_toLeftOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintRight_toRightOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintRight_toRightOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintRight_toRightOf];
}

- (void)setLayoutConstraintRight_toRightOfWithASIWidget:(id<ASIWidget>)w
                                           withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintRight_toRightOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintTop_toTopOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintTop_toTopOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintTop_toTopOf];
}

- (void)setLayoutConstraintTop_toTopOfWithASIWidget:(id<ASIWidget>)w
                                       withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintTop_toTopOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintTop_toBottomOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintTop_toBottomOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintTop_toBottomOf];
}

- (void)setLayoutConstraintTop_toBottomOfWithASIWidget:(id<ASIWidget>)w
                                          withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintTop_toBottomOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintBottom_toTopOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintBottom_toTopOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintBottom_toTopOf];
}

- (void)setLayoutConstraintBottom_toTopOfWithASIWidget:(id<ASIWidget>)w
                                          withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintBottom_toTopOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintBottom_toBottomOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintBottom_toBottomOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintBottom_toBottomOf];
}

- (void)setLayoutConstraintBottom_toBottomOfWithASIWidget:(id<ASIWidget>)w
                                             withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintBottom_toBottomOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintBaseline_toBaselineOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintBaseline_toBaselineOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintBaseline_toBaselineOf];
}

- (void)setLayoutConstraintBaseline_toBaselineOfWithASIWidget:(id<ASIWidget>)w
                                                 withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintBaseline_toBaselineOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintBaseline_toTopOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintBaseline_toTopOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintBaseline_toTopOf];
}

- (void)setLayoutConstraintBaseline_toTopOfWithASIWidget:(id<ASIWidget>)w
                                            withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintBaseline_toTopOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintBaseline_toBottomOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintBaseline_toBottomOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintBaseline_toBottomOf];
}

- (void)setLayoutConstraintBaseline_toBottomOfWithASIWidget:(id<ASIWidget>)w
                                               withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintBaseline_toBottomOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintStart_toEndOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintStart_toEndOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintStart_toEndOf];
}

- (void)setLayoutConstraintStart_toEndOfWithASIWidget:(id<ASIWidget>)w
                                         withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintStart_toEndOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintStart_toStartOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintStart_toStartOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintStart_toStartOf];
}

- (void)setLayoutConstraintStart_toStartOfWithASIWidget:(id<ASIWidget>)w
                                           withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintStart_toStartOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintEnd_toStartOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintEnd_toStartOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintEnd_toStartOf];
}

- (void)setLayoutConstraintEnd_toStartOfWithASIWidget:(id<ASIWidget>)w
                                         withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintEnd_toStartOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintEnd_toEndOfWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintEnd_toEndOf])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintEnd_toEndOf];
}

- (void)setLayoutConstraintEnd_toEndOfWithASIWidget:(id<ASIWidget>)w
                                       withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintEnd_toEndOfWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutGoneMarginLeftWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutGoneMarginLeft])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutGoneMarginLeft];
}

- (void)setLayoutGoneMarginLeftWithASIWidget:(id<ASIWidget>)w
                                withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutGoneMarginLeftWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutGoneMarginTopWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutGoneMarginTop])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutGoneMarginTop];
}

- (void)setLayoutGoneMarginTopWithASIWidget:(id<ASIWidget>)w
                               withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutGoneMarginTopWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutGoneMarginRightWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutGoneMarginRight])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutGoneMarginRight];
}

- (void)setLayoutGoneMarginRightWithASIWidget:(id<ASIWidget>)w
                                 withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutGoneMarginRightWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutGoneMarginBottomWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutGoneMarginBottom])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutGoneMarginBottom];
}

- (void)setLayoutGoneMarginBottomWithASIWidget:(id<ASIWidget>)w
                                  withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutGoneMarginBottomWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutGoneMarginStartWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutGoneMarginStart])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutGoneMarginStart];
}

- (void)setLayoutGoneMarginStartWithASIWidget:(id<ASIWidget>)w
                                 withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutGoneMarginStartWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutGoneMarginEndWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutGoneMarginEnd])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutGoneMarginEnd];
}

- (void)setLayoutGoneMarginEndWithASIWidget:(id<ASIWidget>)w
                               withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutGoneMarginEndWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutGoneMarginBaselineWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutGoneMarginBaseline])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutGoneMarginBaseline];
}

- (void)setLayoutGoneMarginBaselineWithASIWidget:(id<ASIWidget>)w
                                    withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutGoneMarginBaselineWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutMarginBaselineWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutMarginBaseline])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutMarginBaseline];
}

- (void)setLayoutMarginBaselineWithASIWidget:(id<ASIWidget>)w
                                withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutMarginBaselineWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintWidthWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintWidth])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintWidth];
}

- (void)setLayoutConstraintWidthWithASIWidget:(id<ASIWidget>)w
                                 withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintWidthWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintHeightWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintHeight])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintHeight];
}

- (void)setLayoutConstraintHeightWithASIWidget:(id<ASIWidget>)w
                                  withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintHeightWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)isLayoutConstrainedWidthWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstrainedWidth])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) isLayoutConstrainedWidth];
}

- (void)setLayoutConstrainedWidthWithASIWidget:(id<ASIWidget>)w
                                   withBoolean:(jboolean)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstrainedWidthWithBoolean:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)isLayoutConstrainedHeightWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstrainedHeight])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) isLayoutConstrainedHeight];
}

- (void)setLayoutConstrainedHeightWithASIWidget:(id<ASIWidget>)w
                                    withBoolean:(jboolean)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstrainedHeightWithBoolean:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintHorizontal_biasWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintHorizontal_bias])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintHorizontal_bias];
}

- (void)setLayoutConstraintHorizontal_biasWithASIWidget:(id<ASIWidget>)w
                                              withFloat:(jfloat)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintHorizontal_biasWithFloat:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintVertical_biasWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintVertical_bias])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintVertical_bias];
}

- (void)setLayoutConstraintVertical_biasWithASIWidget:(id<ASIWidget>)w
                                            withFloat:(jfloat)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintVertical_biasWithFloat:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintWidth_defaultWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintWidth_default])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintWidth_default];
}

- (void)setLayoutConstraintWidth_defaultWithASIWidget:(id<ASIWidget>)w
                                         withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintWidth_defaultWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintHeight_defaultWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintHeight_default])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintHeight_default];
}

- (void)setLayoutConstraintHeight_defaultWithASIWidget:(id<ASIWidget>)w
                                          withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintHeight_defaultWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintWidth_minWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintWidth_min])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintWidth_min];
}

- (void)setLayoutConstraintWidth_minWithASIWidget:(id<ASIWidget>)w
                                     withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintWidth_minWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintWidth_maxWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintWidth_max])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintWidth_max];
}

- (void)setLayoutConstraintWidth_maxWithASIWidget:(id<ASIWidget>)w
                                     withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintWidth_maxWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintWidth_percentWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintWidth_percent])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintWidth_percent];
}

- (void)setLayoutConstraintWidth_percentWithASIWidget:(id<ASIWidget>)w
                                            withFloat:(jfloat)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintWidth_percentWithFloat:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintHeight_minWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintHeight_min])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintHeight_min];
}

- (void)setLayoutConstraintHeight_minWithASIWidget:(id<ASIWidget>)w
                                      withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintHeight_minWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintHeight_maxWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintHeight_max])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintHeight_max];
}

- (void)setLayoutConstraintHeight_maxWithASIWidget:(id<ASIWidget>)w
                                      withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintHeight_maxWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintHeight_percentWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintHeight_percent])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintHeight_percent];
}

- (void)setLayoutConstraintHeight_percentWithASIWidget:(id<ASIWidget>)w
                                             withFloat:(jfloat)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintHeight_percentWithFloat:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintDimensionRatioWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintDimensionRatio])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintDimensionRatio];
}

- (void)setLayoutConstraintDimensionRatioWithASIWidget:(id<ASIWidget>)w
                                          withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintDimensionRatioWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintHorizontal_weightWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintHorizontal_weight])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintHorizontal_weight];
}

- (void)setLayoutConstraintHorizontal_weightWithASIWidget:(id<ASIWidget>)w
                                                withFloat:(jfloat)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintHorizontal_weightWithFloat:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintVertical_weightWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintVertical_weight])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintVertical_weight];
}

- (void)setLayoutConstraintVertical_weightWithASIWidget:(id<ASIWidget>)w
                                              withFloat:(jfloat)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintVertical_weightWithFloat:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintHorizontal_chainStyleWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintHorizontal_chainStyle])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintHorizontal_chainStyle];
}

- (void)setLayoutConstraintHorizontal_chainStyleWithASIWidget:(id<ASIWidget>)w
                                                 withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintHorizontal_chainStyleWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintVertical_chainStyleWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintVertical_chainStyle])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintVertical_chainStyle];
}

- (void)setLayoutConstraintVertical_chainStyleWithASIWidget:(id<ASIWidget>)w
                                               withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintVertical_chainStyleWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutEditor_absoluteXWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutEditor_absoluteX])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutEditor_absoluteX];
}

- (void)setLayoutEditor_absoluteXWithASIWidget:(id<ASIWidget>)w
                                  withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutEditor_absoluteXWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutEditor_absoluteYWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutEditor_absoluteY])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutEditor_absoluteY];
}

- (void)setLayoutEditor_absoluteYWithASIWidget:(id<ASIWidget>)w
                                  withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutEditor_absoluteYWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutConstraintTagWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutConstraintTag])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutConstraintTag];
}

- (void)setLayoutConstraintTagWithASIWidget:(id<ASIWidget>)w
                               withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutConstraintTagWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

- (id)getLayoutWrapBehaviorInParentWithASIWidget:(id<ASIWidget>)w {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  id<JavaUtilMap> command = [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) tryGetLayoutWrapBehaviorInParent])) getCommand];
  (void) [layoutParams putWithId:@"layoutParams" withId:command];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return [((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) getLayoutWrapBehaviorInParent];
}

- (void)setLayoutWrapBehaviorInParentWithASIWidget:(id<ASIWidget>)w
                                      withNSString:(NSString *)value {
  id<JavaUtilMap> layoutParams = new_JavaUtilHashMap_init();
  (void) [layoutParams putWithId:@"layoutParams" withId:[((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([((ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *) nil_chk([this$0_ getParamsBuilder])) reset])) setLayoutWrapBehaviorInParentWithNSString:value])) getCommand]];
  [((id<ASIWidget>) nil_chk(w)) executeCommandWithJavaUtilMap:layoutParams withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
  [((id<ASIFragment>) nil_chk([w getFragment])) remeasure];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 12, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 14, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 16, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 18, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 20, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 22, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 24, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 26, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 28, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 30, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 32, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 33, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 34, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 36, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 38, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 40, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 41, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 42, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 43, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 44, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 45, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 46, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 47, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 48, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 49, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 50, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 51, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 52, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 53, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 54, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 55, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 56, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 57, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 58, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 59, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 60, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 61, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 62, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 63, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 64, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 65, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 66, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 67, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 68, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 69, 70, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 71, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 72, 70, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 73, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 74, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 75, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 76, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 77, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 78, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 79, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 80, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 81, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 82, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 83, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 84, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 85, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 86, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 87, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 88, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 89, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 90, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 91, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 92, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 93, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 94, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 95, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 96, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 97, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 98, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 99, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 100, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 101, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 102, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 103, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 104, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 105, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 106, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 107, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 108, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 109, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 110, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASConstraintLayoutImpl:);
  methods[1].selector = @selector(getLayoutOrientationWithASIWidget:);
  methods[2].selector = @selector(setLayoutOrientationWithASIWidget:withNSString:);
  methods[3].selector = @selector(getLayoutConstraintCircleWithASIWidget:);
  methods[4].selector = @selector(setLayoutConstraintCircleWithASIWidget:withNSString:);
  methods[5].selector = @selector(getLayoutConstraintCircleRadiusWithASIWidget:);
  methods[6].selector = @selector(setLayoutConstraintCircleRadiusWithASIWidget:withNSString:);
  methods[7].selector = @selector(getLayoutConstraintCircleAngleWithASIWidget:);
  methods[8].selector = @selector(setLayoutConstraintCircleAngleWithASIWidget:withFloat:);
  methods[9].selector = @selector(getLayoutConstraintGuide_beginWithASIWidget:);
  methods[10].selector = @selector(setLayoutConstraintGuide_beginWithASIWidget:withNSString:);
  methods[11].selector = @selector(getLayoutConstraintGuide_endWithASIWidget:);
  methods[12].selector = @selector(setLayoutConstraintGuide_endWithASIWidget:withNSString:);
  methods[13].selector = @selector(getLayoutConstraintGuide_percentWithASIWidget:);
  methods[14].selector = @selector(setLayoutConstraintGuide_percentWithASIWidget:withFloat:);
  methods[15].selector = @selector(getLayoutConstraintLeft_toLeftOfWithASIWidget:);
  methods[16].selector = @selector(setLayoutConstraintLeft_toLeftOfWithASIWidget:withNSString:);
  methods[17].selector = @selector(getLayoutConstraintLeft_toRightOfWithASIWidget:);
  methods[18].selector = @selector(setLayoutConstraintLeft_toRightOfWithASIWidget:withNSString:);
  methods[19].selector = @selector(getLayoutConstraintRight_toLeftOfWithASIWidget:);
  methods[20].selector = @selector(setLayoutConstraintRight_toLeftOfWithASIWidget:withNSString:);
  methods[21].selector = @selector(getLayoutConstraintRight_toRightOfWithASIWidget:);
  methods[22].selector = @selector(setLayoutConstraintRight_toRightOfWithASIWidget:withNSString:);
  methods[23].selector = @selector(getLayoutConstraintTop_toTopOfWithASIWidget:);
  methods[24].selector = @selector(setLayoutConstraintTop_toTopOfWithASIWidget:withNSString:);
  methods[25].selector = @selector(getLayoutConstraintTop_toBottomOfWithASIWidget:);
  methods[26].selector = @selector(setLayoutConstraintTop_toBottomOfWithASIWidget:withNSString:);
  methods[27].selector = @selector(getLayoutConstraintBottom_toTopOfWithASIWidget:);
  methods[28].selector = @selector(setLayoutConstraintBottom_toTopOfWithASIWidget:withNSString:);
  methods[29].selector = @selector(getLayoutConstraintBottom_toBottomOfWithASIWidget:);
  methods[30].selector = @selector(setLayoutConstraintBottom_toBottomOfWithASIWidget:withNSString:);
  methods[31].selector = @selector(getLayoutConstraintBaseline_toBaselineOfWithASIWidget:);
  methods[32].selector = @selector(setLayoutConstraintBaseline_toBaselineOfWithASIWidget:withNSString:);
  methods[33].selector = @selector(getLayoutConstraintBaseline_toTopOfWithASIWidget:);
  methods[34].selector = @selector(setLayoutConstraintBaseline_toTopOfWithASIWidget:withNSString:);
  methods[35].selector = @selector(getLayoutConstraintBaseline_toBottomOfWithASIWidget:);
  methods[36].selector = @selector(setLayoutConstraintBaseline_toBottomOfWithASIWidget:withNSString:);
  methods[37].selector = @selector(getLayoutConstraintStart_toEndOfWithASIWidget:);
  methods[38].selector = @selector(setLayoutConstraintStart_toEndOfWithASIWidget:withNSString:);
  methods[39].selector = @selector(getLayoutConstraintStart_toStartOfWithASIWidget:);
  methods[40].selector = @selector(setLayoutConstraintStart_toStartOfWithASIWidget:withNSString:);
  methods[41].selector = @selector(getLayoutConstraintEnd_toStartOfWithASIWidget:);
  methods[42].selector = @selector(setLayoutConstraintEnd_toStartOfWithASIWidget:withNSString:);
  methods[43].selector = @selector(getLayoutConstraintEnd_toEndOfWithASIWidget:);
  methods[44].selector = @selector(setLayoutConstraintEnd_toEndOfWithASIWidget:withNSString:);
  methods[45].selector = @selector(getLayoutGoneMarginLeftWithASIWidget:);
  methods[46].selector = @selector(setLayoutGoneMarginLeftWithASIWidget:withNSString:);
  methods[47].selector = @selector(getLayoutGoneMarginTopWithASIWidget:);
  methods[48].selector = @selector(setLayoutGoneMarginTopWithASIWidget:withNSString:);
  methods[49].selector = @selector(getLayoutGoneMarginRightWithASIWidget:);
  methods[50].selector = @selector(setLayoutGoneMarginRightWithASIWidget:withNSString:);
  methods[51].selector = @selector(getLayoutGoneMarginBottomWithASIWidget:);
  methods[52].selector = @selector(setLayoutGoneMarginBottomWithASIWidget:withNSString:);
  methods[53].selector = @selector(getLayoutGoneMarginStartWithASIWidget:);
  methods[54].selector = @selector(setLayoutGoneMarginStartWithASIWidget:withNSString:);
  methods[55].selector = @selector(getLayoutGoneMarginEndWithASIWidget:);
  methods[56].selector = @selector(setLayoutGoneMarginEndWithASIWidget:withNSString:);
  methods[57].selector = @selector(getLayoutGoneMarginBaselineWithASIWidget:);
  methods[58].selector = @selector(setLayoutGoneMarginBaselineWithASIWidget:withNSString:);
  methods[59].selector = @selector(getLayoutMarginBaselineWithASIWidget:);
  methods[60].selector = @selector(setLayoutMarginBaselineWithASIWidget:withNSString:);
  methods[61].selector = @selector(getLayoutConstraintWidthWithASIWidget:);
  methods[62].selector = @selector(setLayoutConstraintWidthWithASIWidget:withNSString:);
  methods[63].selector = @selector(getLayoutConstraintHeightWithASIWidget:);
  methods[64].selector = @selector(setLayoutConstraintHeightWithASIWidget:withNSString:);
  methods[65].selector = @selector(isLayoutConstrainedWidthWithASIWidget:);
  methods[66].selector = @selector(setLayoutConstrainedWidthWithASIWidget:withBoolean:);
  methods[67].selector = @selector(isLayoutConstrainedHeightWithASIWidget:);
  methods[68].selector = @selector(setLayoutConstrainedHeightWithASIWidget:withBoolean:);
  methods[69].selector = @selector(getLayoutConstraintHorizontal_biasWithASIWidget:);
  methods[70].selector = @selector(setLayoutConstraintHorizontal_biasWithASIWidget:withFloat:);
  methods[71].selector = @selector(getLayoutConstraintVertical_biasWithASIWidget:);
  methods[72].selector = @selector(setLayoutConstraintVertical_biasWithASIWidget:withFloat:);
  methods[73].selector = @selector(getLayoutConstraintWidth_defaultWithASIWidget:);
  methods[74].selector = @selector(setLayoutConstraintWidth_defaultWithASIWidget:withNSString:);
  methods[75].selector = @selector(getLayoutConstraintHeight_defaultWithASIWidget:);
  methods[76].selector = @selector(setLayoutConstraintHeight_defaultWithASIWidget:withNSString:);
  methods[77].selector = @selector(getLayoutConstraintWidth_minWithASIWidget:);
  methods[78].selector = @selector(setLayoutConstraintWidth_minWithASIWidget:withNSString:);
  methods[79].selector = @selector(getLayoutConstraintWidth_maxWithASIWidget:);
  methods[80].selector = @selector(setLayoutConstraintWidth_maxWithASIWidget:withNSString:);
  methods[81].selector = @selector(getLayoutConstraintWidth_percentWithASIWidget:);
  methods[82].selector = @selector(setLayoutConstraintWidth_percentWithASIWidget:withFloat:);
  methods[83].selector = @selector(getLayoutConstraintHeight_minWithASIWidget:);
  methods[84].selector = @selector(setLayoutConstraintHeight_minWithASIWidget:withNSString:);
  methods[85].selector = @selector(getLayoutConstraintHeight_maxWithASIWidget:);
  methods[86].selector = @selector(setLayoutConstraintHeight_maxWithASIWidget:withNSString:);
  methods[87].selector = @selector(getLayoutConstraintHeight_percentWithASIWidget:);
  methods[88].selector = @selector(setLayoutConstraintHeight_percentWithASIWidget:withFloat:);
  methods[89].selector = @selector(getLayoutConstraintDimensionRatioWithASIWidget:);
  methods[90].selector = @selector(setLayoutConstraintDimensionRatioWithASIWidget:withNSString:);
  methods[91].selector = @selector(getLayoutConstraintHorizontal_weightWithASIWidget:);
  methods[92].selector = @selector(setLayoutConstraintHorizontal_weightWithASIWidget:withFloat:);
  methods[93].selector = @selector(getLayoutConstraintVertical_weightWithASIWidget:);
  methods[94].selector = @selector(setLayoutConstraintVertical_weightWithASIWidget:withFloat:);
  methods[95].selector = @selector(getLayoutConstraintHorizontal_chainStyleWithASIWidget:);
  methods[96].selector = @selector(setLayoutConstraintHorizontal_chainStyleWithASIWidget:withNSString:);
  methods[97].selector = @selector(getLayoutConstraintVertical_chainStyleWithASIWidget:);
  methods[98].selector = @selector(setLayoutConstraintVertical_chainStyleWithASIWidget:withNSString:);
  methods[99].selector = @selector(getLayoutEditor_absoluteXWithASIWidget:);
  methods[100].selector = @selector(setLayoutEditor_absoluteXWithASIWidget:withNSString:);
  methods[101].selector = @selector(getLayoutEditor_absoluteYWithASIWidget:);
  methods[102].selector = @selector(setLayoutEditor_absoluteYWithASIWidget:withNSString:);
  methods[103].selector = @selector(getLayoutConstraintTagWithASIWidget:);
  methods[104].selector = @selector(setLayoutConstraintTagWithASIWidget:withNSString:);
  methods[105].selector = @selector(getLayoutWrapBehaviorInParentWithASIWidget:);
  methods[106].selector = @selector(setLayoutWrapBehaviorInParentWithASIWidget:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASConstraintLayoutImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASConstraintLayoutImpl;", "getLayoutOrientation", "LASIWidget;", "setLayoutOrientation", "LASIWidget;LNSString;", "getLayoutConstraintCircle", "setLayoutConstraintCircle", "getLayoutConstraintCircleRadius", "setLayoutConstraintCircleRadius", "getLayoutConstraintCircleAngle", "setLayoutConstraintCircleAngle", "LASIWidget;F", "getLayoutConstraintGuide_begin", "setLayoutConstraintGuide_begin", "getLayoutConstraintGuide_end", "setLayoutConstraintGuide_end", "getLayoutConstraintGuide_percent", "setLayoutConstraintGuide_percent", "getLayoutConstraintLeft_toLeftOf", "setLayoutConstraintLeft_toLeftOf", "getLayoutConstraintLeft_toRightOf", "setLayoutConstraintLeft_toRightOf", "getLayoutConstraintRight_toLeftOf", "setLayoutConstraintRight_toLeftOf", "getLayoutConstraintRight_toRightOf", "setLayoutConstraintRight_toRightOf", "getLayoutConstraintTop_toTopOf", "setLayoutConstraintTop_toTopOf", "getLayoutConstraintTop_toBottomOf", "setLayoutConstraintTop_toBottomOf", "getLayoutConstraintBottom_toTopOf", "setLayoutConstraintBottom_toTopOf", "getLayoutConstraintBottom_toBottomOf", "setLayoutConstraintBottom_toBottomOf", "getLayoutConstraintBaseline_toBaselineOf", "setLayoutConstraintBaseline_toBaselineOf", "getLayoutConstraintBaseline_toTopOf", "setLayoutConstraintBaseline_toTopOf", "getLayoutConstraintBaseline_toBottomOf", "setLayoutConstraintBaseline_toBottomOf", "getLayoutConstraintStart_toEndOf", "setLayoutConstraintStart_toEndOf", "getLayoutConstraintStart_toStartOf", "setLayoutConstraintStart_toStartOf", "getLayoutConstraintEnd_toStartOf", "setLayoutConstraintEnd_toStartOf", "getLayoutConstraintEnd_toEndOf", "setLayoutConstraintEnd_toEndOf", "getLayoutGoneMarginLeft", "setLayoutGoneMarginLeft", "getLayoutGoneMarginTop", "setLayoutGoneMarginTop", "getLayoutGoneMarginRight", "setLayoutGoneMarginRight", "getLayoutGoneMarginBottom", "setLayoutGoneMarginBottom", "getLayoutGoneMarginStart", "setLayoutGoneMarginStart", "getLayoutGoneMarginEnd", "setLayoutGoneMarginEnd", "getLayoutGoneMarginBaseline", "setLayoutGoneMarginBaseline", "getLayoutMarginBaseline", "setLayoutMarginBaseline", "getLayoutConstraintWidth", "setLayoutConstraintWidth", "getLayoutConstraintHeight", "setLayoutConstraintHeight", "isLayoutConstrainedWidth", "setLayoutConstrainedWidth", "LASIWidget;Z", "isLayoutConstrainedHeight", "setLayoutConstrainedHeight", "getLayoutConstraintHorizontal_bias", "setLayoutConstraintHorizontal_bias", "getLayoutConstraintVertical_bias", "setLayoutConstraintVertical_bias", "getLayoutConstraintWidth_default", "setLayoutConstraintWidth_default", "getLayoutConstraintHeight_default", "setLayoutConstraintHeight_default", "getLayoutConstraintWidth_min", "setLayoutConstraintWidth_min", "getLayoutConstraintWidth_max", "setLayoutConstraintWidth_max", "getLayoutConstraintWidth_percent", "setLayoutConstraintWidth_percent", "getLayoutConstraintHeight_min", "setLayoutConstraintHeight_min", "getLayoutConstraintHeight_max", "setLayoutConstraintHeight_max", "getLayoutConstraintHeight_percent", "setLayoutConstraintHeight_percent", "getLayoutConstraintDimensionRatio", "setLayoutConstraintDimensionRatio", "getLayoutConstraintHorizontal_weight", "setLayoutConstraintHorizontal_weight", "getLayoutConstraintVertical_weight", "setLayoutConstraintVertical_weight", "getLayoutConstraintHorizontal_chainStyle", "setLayoutConstraintHorizontal_chainStyle", "getLayoutConstraintVertical_chainStyle", "setLayoutConstraintVertical_chainStyle", "getLayoutEditor_absoluteX", "setLayoutEditor_absoluteX", "getLayoutEditor_absoluteY", "setLayoutEditor_absoluteY", "getLayoutConstraintTag", "setLayoutConstraintTag", "getLayoutWrapBehaviorInParent", "setLayoutWrapBehaviorInParent" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_ConstraintLayoutParamsBean = { "ConstraintLayoutParamsBean", "com.ashera.constraintlayout", ptrTable, methods, fields, 7, 0x1, 107, 1, 0, -1, -1, -1, -1 };
  return &_ASConstraintLayoutImpl_ConstraintLayoutParamsBean;
}

@end

void ASConstraintLayoutImpl_ConstraintLayoutParamsBean_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl_ConstraintLayoutParamsBean *self, ASConstraintLayoutImpl *outer$) {
  self->this$0_ = outer$;
  ASViewGroupImpl_ViewGroupParamsBean_init(self);
}

ASConstraintLayoutImpl_ConstraintLayoutParamsBean *new_ASConstraintLayoutImpl_ConstraintLayoutParamsBean_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_ConstraintLayoutParamsBean, initWithASConstraintLayoutImpl_, outer$)
}

ASConstraintLayoutImpl_ConstraintLayoutParamsBean *create_ASConstraintLayoutImpl_ConstraintLayoutParamsBean_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_ConstraintLayoutParamsBean, initWithASConstraintLayoutImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_ConstraintLayoutParamsBean)

@implementation ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder

- (instancetype)initWithASConstraintLayoutImpl:(ASConstraintLayoutImpl *)outer$ {
  ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder_initWithASConstraintLayoutImpl_(self, outer$);
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutOrientation {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_orientation"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutOrientation {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_orientation"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutOrientationWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_orientation"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintCircle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintCircle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintCircle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintCircle"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintCircleWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintCircle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintCircleRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintCircleRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintCircleRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintCircleRadius"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintCircleRadiusWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintCircleRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintCircleAngle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintCircleAngle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintCircleAngle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintCircleAngle"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintCircleAngleWithFloat:(jfloat)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintCircleAngle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangFloat_valueOfWithFloat_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintGuide_begin {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintGuide_begin"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintGuide_begin {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintGuide_begin"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintGuide_beginWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintGuide_begin"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintGuide_end {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintGuide_end"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintGuide_end {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintGuide_end"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintGuide_endWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintGuide_end"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintGuide_percent {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintGuide_percent"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintGuide_percent {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintGuide_percent"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintGuide_percentWithFloat:(jfloat)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintGuide_percent"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangFloat_valueOfWithFloat_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintLeft_toLeftOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintLeft_toLeftOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintLeft_toLeftOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintLeft_toLeftOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintLeft_toLeftOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintLeft_toLeftOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintLeft_toRightOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintLeft_toRightOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintLeft_toRightOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintLeft_toRightOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintLeft_toRightOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintLeft_toRightOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintRight_toLeftOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintRight_toLeftOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintRight_toLeftOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintRight_toLeftOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintRight_toLeftOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintRight_toLeftOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintRight_toRightOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintRight_toRightOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintRight_toRightOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintRight_toRightOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintRight_toRightOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintRight_toRightOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintTop_toTopOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintTop_toTopOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintTop_toTopOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintTop_toTopOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintTop_toTopOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintTop_toTopOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintTop_toBottomOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintTop_toBottomOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintTop_toBottomOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintTop_toBottomOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintTop_toBottomOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintTop_toBottomOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintBottom_toTopOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBottom_toTopOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintBottom_toTopOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBottom_toTopOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintBottom_toTopOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBottom_toTopOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintBottom_toBottomOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBottom_toBottomOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintBottom_toBottomOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBottom_toBottomOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintBottom_toBottomOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBottom_toBottomOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintBaseline_toBaselineOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBaseline_toBaselineOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintBaseline_toBaselineOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBaseline_toBaselineOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintBaseline_toBaselineOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBaseline_toBaselineOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintBaseline_toTopOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBaseline_toTopOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintBaseline_toTopOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBaseline_toTopOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintBaseline_toTopOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBaseline_toTopOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintBaseline_toBottomOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBaseline_toBottomOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintBaseline_toBottomOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBaseline_toBottomOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintBaseline_toBottomOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintBaseline_toBottomOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintStart_toEndOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintStart_toEndOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintStart_toEndOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintStart_toEndOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintStart_toEndOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintStart_toEndOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintStart_toStartOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintStart_toStartOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintStart_toStartOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintStart_toStartOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintStart_toStartOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintStart_toStartOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintEnd_toStartOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintEnd_toStartOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintEnd_toStartOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintEnd_toStartOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintEnd_toStartOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintEnd_toStartOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintEnd_toEndOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintEnd_toEndOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintEnd_toEndOf {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintEnd_toEndOf"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintEnd_toEndOfWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintEnd_toEndOf"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutGoneMarginLeft {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginLeft"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutGoneMarginLeft {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginLeft"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutGoneMarginLeftWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginLeft"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutGoneMarginTop {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginTop"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutGoneMarginTop {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginTop"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutGoneMarginTopWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginTop"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutGoneMarginRight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginRight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutGoneMarginRight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginRight"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutGoneMarginRightWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginRight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutGoneMarginBottom {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginBottom"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutGoneMarginBottom {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginBottom"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutGoneMarginBottomWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginBottom"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutGoneMarginStart {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginStart"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutGoneMarginStart {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginStart"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutGoneMarginStartWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginStart"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutGoneMarginEnd {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginEnd"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutGoneMarginEnd {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginEnd"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutGoneMarginEndWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginEnd"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutGoneMarginBaseline {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginBaseline"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutGoneMarginBaseline {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginBaseline"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutGoneMarginBaselineWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_goneMarginBaseline"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutMarginBaseline {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_marginBaseline"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutMarginBaseline {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_marginBaseline"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutMarginBaselineWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_marginBaseline"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintHeight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintHeight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintHeightWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstrainedWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constrainedWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)isLayoutConstrainedWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constrainedWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstrainedWidthWithBoolean:(jboolean)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constrainedWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangBoolean_valueOfWithBoolean_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstrainedHeight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constrainedHeight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)isLayoutConstrainedHeight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constrainedHeight"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstrainedHeightWithBoolean:(jboolean)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constrainedHeight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangBoolean_valueOfWithBoolean_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintHorizontal_bias {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHorizontal_bias"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintHorizontal_bias {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHorizontal_bias"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintHorizontal_biasWithFloat:(jfloat)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHorizontal_bias"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangFloat_valueOfWithFloat_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintVertical_bias {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintVertical_bias"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintVertical_bias {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintVertical_bias"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintVertical_biasWithFloat:(jfloat)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintVertical_bias"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangFloat_valueOfWithFloat_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintWidth_default {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_default"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintWidth_default {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_default"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintWidth_defaultWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_default"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintHeight_default {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_default"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintHeight_default {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_default"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintHeight_defaultWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_default"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintWidth_min {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_min"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintWidth_min {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_min"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintWidth_minWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_min"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintWidth_max {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_max"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintWidth_max {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_max"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintWidth_maxWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_max"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintWidth_percent {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_percent"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintWidth_percent {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_percent"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintWidth_percentWithFloat:(jfloat)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintWidth_percent"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangFloat_valueOfWithFloat_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintHeight_min {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_min"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintHeight_min {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_min"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintHeight_minWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_min"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintHeight_max {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_max"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintHeight_max {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_max"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintHeight_maxWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_max"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintHeight_percent {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_percent"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintHeight_percent {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_percent"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintHeight_percentWithFloat:(jfloat)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHeight_percent"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangFloat_valueOfWithFloat_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintDimensionRatio {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintDimensionRatio"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintDimensionRatio {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintDimensionRatio"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintDimensionRatioWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintDimensionRatio"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintHorizontal_weight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHorizontal_weight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintHorizontal_weight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHorizontal_weight"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintHorizontal_weightWithFloat:(jfloat)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHorizontal_weight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangFloat_valueOfWithFloat_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintVertical_weight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintVertical_weight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintVertical_weight {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintVertical_weight"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintVertical_weightWithFloat:(jfloat)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintVertical_weight"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:JavaLangFloat_valueOfWithFloat_(value)];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintHorizontal_chainStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHorizontal_chainStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintHorizontal_chainStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHorizontal_chainStyle"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintHorizontal_chainStyleWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintHorizontal_chainStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintVertical_chainStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintVertical_chainStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintVertical_chainStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintVertical_chainStyle"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintVertical_chainStyleWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintVertical_chainStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutEditor_absoluteX {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_editor_absoluteX"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutEditor_absoluteX {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_editor_absoluteX"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutEditor_absoluteXWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_editor_absoluteX"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutEditor_absoluteY {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_editor_absoluteY"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutEditor_absoluteY {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_editor_absoluteY"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutEditor_absoluteYWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_editor_absoluteY"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutConstraintTag {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintTag"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutConstraintTag {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintTag"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutConstraintTagWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_constraintTag"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)tryGetLayoutWrapBehaviorInParent {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_wrapBehaviorInParent"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getLayoutWrapBehaviorInParent {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_wrapBehaviorInParent"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *)setLayoutWrapBehaviorInParentWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"layout_wrapBehaviorInParent"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 9, 6, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 10, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 11, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 12, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 13, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 14, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 15, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 16, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 17, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 18, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 19, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 20, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 21, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 22, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 23, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 24, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 25, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 26, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 27, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 28, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 29, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 30, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 31, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 32, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 33, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 34, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 35, 36, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 37, 36, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 38, 6, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 39, 6, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 40, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 41, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 42, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 43, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 44, 6, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 45, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 46, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 47, 6, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 48, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 49, 6, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 50, 6, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 51, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 52, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 53, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 54, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 55, 2, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;", 0x1, 56, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASConstraintLayoutImpl:);
  methods[1].selector = @selector(tryGetLayoutOrientation);
  methods[2].selector = @selector(getLayoutOrientation);
  methods[3].selector = @selector(setLayoutOrientationWithNSString:);
  methods[4].selector = @selector(tryGetLayoutConstraintCircle);
  methods[5].selector = @selector(getLayoutConstraintCircle);
  methods[6].selector = @selector(setLayoutConstraintCircleWithNSString:);
  methods[7].selector = @selector(tryGetLayoutConstraintCircleRadius);
  methods[8].selector = @selector(getLayoutConstraintCircleRadius);
  methods[9].selector = @selector(setLayoutConstraintCircleRadiusWithNSString:);
  methods[10].selector = @selector(tryGetLayoutConstraintCircleAngle);
  methods[11].selector = @selector(getLayoutConstraintCircleAngle);
  methods[12].selector = @selector(setLayoutConstraintCircleAngleWithFloat:);
  methods[13].selector = @selector(tryGetLayoutConstraintGuide_begin);
  methods[14].selector = @selector(getLayoutConstraintGuide_begin);
  methods[15].selector = @selector(setLayoutConstraintGuide_beginWithNSString:);
  methods[16].selector = @selector(tryGetLayoutConstraintGuide_end);
  methods[17].selector = @selector(getLayoutConstraintGuide_end);
  methods[18].selector = @selector(setLayoutConstraintGuide_endWithNSString:);
  methods[19].selector = @selector(tryGetLayoutConstraintGuide_percent);
  methods[20].selector = @selector(getLayoutConstraintGuide_percent);
  methods[21].selector = @selector(setLayoutConstraintGuide_percentWithFloat:);
  methods[22].selector = @selector(tryGetLayoutConstraintLeft_toLeftOf);
  methods[23].selector = @selector(getLayoutConstraintLeft_toLeftOf);
  methods[24].selector = @selector(setLayoutConstraintLeft_toLeftOfWithNSString:);
  methods[25].selector = @selector(tryGetLayoutConstraintLeft_toRightOf);
  methods[26].selector = @selector(getLayoutConstraintLeft_toRightOf);
  methods[27].selector = @selector(setLayoutConstraintLeft_toRightOfWithNSString:);
  methods[28].selector = @selector(tryGetLayoutConstraintRight_toLeftOf);
  methods[29].selector = @selector(getLayoutConstraintRight_toLeftOf);
  methods[30].selector = @selector(setLayoutConstraintRight_toLeftOfWithNSString:);
  methods[31].selector = @selector(tryGetLayoutConstraintRight_toRightOf);
  methods[32].selector = @selector(getLayoutConstraintRight_toRightOf);
  methods[33].selector = @selector(setLayoutConstraintRight_toRightOfWithNSString:);
  methods[34].selector = @selector(tryGetLayoutConstraintTop_toTopOf);
  methods[35].selector = @selector(getLayoutConstraintTop_toTopOf);
  methods[36].selector = @selector(setLayoutConstraintTop_toTopOfWithNSString:);
  methods[37].selector = @selector(tryGetLayoutConstraintTop_toBottomOf);
  methods[38].selector = @selector(getLayoutConstraintTop_toBottomOf);
  methods[39].selector = @selector(setLayoutConstraintTop_toBottomOfWithNSString:);
  methods[40].selector = @selector(tryGetLayoutConstraintBottom_toTopOf);
  methods[41].selector = @selector(getLayoutConstraintBottom_toTopOf);
  methods[42].selector = @selector(setLayoutConstraintBottom_toTopOfWithNSString:);
  methods[43].selector = @selector(tryGetLayoutConstraintBottom_toBottomOf);
  methods[44].selector = @selector(getLayoutConstraintBottom_toBottomOf);
  methods[45].selector = @selector(setLayoutConstraintBottom_toBottomOfWithNSString:);
  methods[46].selector = @selector(tryGetLayoutConstraintBaseline_toBaselineOf);
  methods[47].selector = @selector(getLayoutConstraintBaseline_toBaselineOf);
  methods[48].selector = @selector(setLayoutConstraintBaseline_toBaselineOfWithNSString:);
  methods[49].selector = @selector(tryGetLayoutConstraintBaseline_toTopOf);
  methods[50].selector = @selector(getLayoutConstraintBaseline_toTopOf);
  methods[51].selector = @selector(setLayoutConstraintBaseline_toTopOfWithNSString:);
  methods[52].selector = @selector(tryGetLayoutConstraintBaseline_toBottomOf);
  methods[53].selector = @selector(getLayoutConstraintBaseline_toBottomOf);
  methods[54].selector = @selector(setLayoutConstraintBaseline_toBottomOfWithNSString:);
  methods[55].selector = @selector(tryGetLayoutConstraintStart_toEndOf);
  methods[56].selector = @selector(getLayoutConstraintStart_toEndOf);
  methods[57].selector = @selector(setLayoutConstraintStart_toEndOfWithNSString:);
  methods[58].selector = @selector(tryGetLayoutConstraintStart_toStartOf);
  methods[59].selector = @selector(getLayoutConstraintStart_toStartOf);
  methods[60].selector = @selector(setLayoutConstraintStart_toStartOfWithNSString:);
  methods[61].selector = @selector(tryGetLayoutConstraintEnd_toStartOf);
  methods[62].selector = @selector(getLayoutConstraintEnd_toStartOf);
  methods[63].selector = @selector(setLayoutConstraintEnd_toStartOfWithNSString:);
  methods[64].selector = @selector(tryGetLayoutConstraintEnd_toEndOf);
  methods[65].selector = @selector(getLayoutConstraintEnd_toEndOf);
  methods[66].selector = @selector(setLayoutConstraintEnd_toEndOfWithNSString:);
  methods[67].selector = @selector(tryGetLayoutGoneMarginLeft);
  methods[68].selector = @selector(getLayoutGoneMarginLeft);
  methods[69].selector = @selector(setLayoutGoneMarginLeftWithNSString:);
  methods[70].selector = @selector(tryGetLayoutGoneMarginTop);
  methods[71].selector = @selector(getLayoutGoneMarginTop);
  methods[72].selector = @selector(setLayoutGoneMarginTopWithNSString:);
  methods[73].selector = @selector(tryGetLayoutGoneMarginRight);
  methods[74].selector = @selector(getLayoutGoneMarginRight);
  methods[75].selector = @selector(setLayoutGoneMarginRightWithNSString:);
  methods[76].selector = @selector(tryGetLayoutGoneMarginBottom);
  methods[77].selector = @selector(getLayoutGoneMarginBottom);
  methods[78].selector = @selector(setLayoutGoneMarginBottomWithNSString:);
  methods[79].selector = @selector(tryGetLayoutGoneMarginStart);
  methods[80].selector = @selector(getLayoutGoneMarginStart);
  methods[81].selector = @selector(setLayoutGoneMarginStartWithNSString:);
  methods[82].selector = @selector(tryGetLayoutGoneMarginEnd);
  methods[83].selector = @selector(getLayoutGoneMarginEnd);
  methods[84].selector = @selector(setLayoutGoneMarginEndWithNSString:);
  methods[85].selector = @selector(tryGetLayoutGoneMarginBaseline);
  methods[86].selector = @selector(getLayoutGoneMarginBaseline);
  methods[87].selector = @selector(setLayoutGoneMarginBaselineWithNSString:);
  methods[88].selector = @selector(tryGetLayoutMarginBaseline);
  methods[89].selector = @selector(getLayoutMarginBaseline);
  methods[90].selector = @selector(setLayoutMarginBaselineWithNSString:);
  methods[91].selector = @selector(tryGetLayoutConstraintWidth);
  methods[92].selector = @selector(getLayoutConstraintWidth);
  methods[93].selector = @selector(setLayoutConstraintWidthWithNSString:);
  methods[94].selector = @selector(tryGetLayoutConstraintHeight);
  methods[95].selector = @selector(getLayoutConstraintHeight);
  methods[96].selector = @selector(setLayoutConstraintHeightWithNSString:);
  methods[97].selector = @selector(tryGetLayoutConstrainedWidth);
  methods[98].selector = @selector(isLayoutConstrainedWidth);
  methods[99].selector = @selector(setLayoutConstrainedWidthWithBoolean:);
  methods[100].selector = @selector(tryGetLayoutConstrainedHeight);
  methods[101].selector = @selector(isLayoutConstrainedHeight);
  methods[102].selector = @selector(setLayoutConstrainedHeightWithBoolean:);
  methods[103].selector = @selector(tryGetLayoutConstraintHorizontal_bias);
  methods[104].selector = @selector(getLayoutConstraintHorizontal_bias);
  methods[105].selector = @selector(setLayoutConstraintHorizontal_biasWithFloat:);
  methods[106].selector = @selector(tryGetLayoutConstraintVertical_bias);
  methods[107].selector = @selector(getLayoutConstraintVertical_bias);
  methods[108].selector = @selector(setLayoutConstraintVertical_biasWithFloat:);
  methods[109].selector = @selector(tryGetLayoutConstraintWidth_default);
  methods[110].selector = @selector(getLayoutConstraintWidth_default);
  methods[111].selector = @selector(setLayoutConstraintWidth_defaultWithNSString:);
  methods[112].selector = @selector(tryGetLayoutConstraintHeight_default);
  methods[113].selector = @selector(getLayoutConstraintHeight_default);
  methods[114].selector = @selector(setLayoutConstraintHeight_defaultWithNSString:);
  methods[115].selector = @selector(tryGetLayoutConstraintWidth_min);
  methods[116].selector = @selector(getLayoutConstraintWidth_min);
  methods[117].selector = @selector(setLayoutConstraintWidth_minWithNSString:);
  methods[118].selector = @selector(tryGetLayoutConstraintWidth_max);
  methods[119].selector = @selector(getLayoutConstraintWidth_max);
  methods[120].selector = @selector(setLayoutConstraintWidth_maxWithNSString:);
  methods[121].selector = @selector(tryGetLayoutConstraintWidth_percent);
  methods[122].selector = @selector(getLayoutConstraintWidth_percent);
  methods[123].selector = @selector(setLayoutConstraintWidth_percentWithFloat:);
  methods[124].selector = @selector(tryGetLayoutConstraintHeight_min);
  methods[125].selector = @selector(getLayoutConstraintHeight_min);
  methods[126].selector = @selector(setLayoutConstraintHeight_minWithNSString:);
  methods[127].selector = @selector(tryGetLayoutConstraintHeight_max);
  methods[128].selector = @selector(getLayoutConstraintHeight_max);
  methods[129].selector = @selector(setLayoutConstraintHeight_maxWithNSString:);
  methods[130].selector = @selector(tryGetLayoutConstraintHeight_percent);
  methods[131].selector = @selector(getLayoutConstraintHeight_percent);
  methods[132].selector = @selector(setLayoutConstraintHeight_percentWithFloat:);
  methods[133].selector = @selector(tryGetLayoutConstraintDimensionRatio);
  methods[134].selector = @selector(getLayoutConstraintDimensionRatio);
  methods[135].selector = @selector(setLayoutConstraintDimensionRatioWithNSString:);
  methods[136].selector = @selector(tryGetLayoutConstraintHorizontal_weight);
  methods[137].selector = @selector(getLayoutConstraintHorizontal_weight);
  methods[138].selector = @selector(setLayoutConstraintHorizontal_weightWithFloat:);
  methods[139].selector = @selector(tryGetLayoutConstraintVertical_weight);
  methods[140].selector = @selector(getLayoutConstraintVertical_weight);
  methods[141].selector = @selector(setLayoutConstraintVertical_weightWithFloat:);
  methods[142].selector = @selector(tryGetLayoutConstraintHorizontal_chainStyle);
  methods[143].selector = @selector(getLayoutConstraintHorizontal_chainStyle);
  methods[144].selector = @selector(setLayoutConstraintHorizontal_chainStyleWithNSString:);
  methods[145].selector = @selector(tryGetLayoutConstraintVertical_chainStyle);
  methods[146].selector = @selector(getLayoutConstraintVertical_chainStyle);
  methods[147].selector = @selector(setLayoutConstraintVertical_chainStyleWithNSString:);
  methods[148].selector = @selector(tryGetLayoutEditor_absoluteX);
  methods[149].selector = @selector(getLayoutEditor_absoluteX);
  methods[150].selector = @selector(setLayoutEditor_absoluteXWithNSString:);
  methods[151].selector = @selector(tryGetLayoutEditor_absoluteY);
  methods[152].selector = @selector(getLayoutEditor_absoluteY);
  methods[153].selector = @selector(setLayoutEditor_absoluteYWithNSString:);
  methods[154].selector = @selector(tryGetLayoutConstraintTag);
  methods[155].selector = @selector(getLayoutConstraintTag);
  methods[156].selector = @selector(setLayoutConstraintTagWithNSString:);
  methods[157].selector = @selector(tryGetLayoutWrapBehaviorInParent);
  methods[158].selector = @selector(getLayoutWrapBehaviorInParent);
  methods[159].selector = @selector(setLayoutWrapBehaviorInParentWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LASConstraintLayoutImpl;", "setLayoutOrientation", "LNSString;", "setLayoutConstraintCircle", "setLayoutConstraintCircleRadius", "setLayoutConstraintCircleAngle", "F", "setLayoutConstraintGuide_begin", "setLayoutConstraintGuide_end", "setLayoutConstraintGuide_percent", "setLayoutConstraintLeft_toLeftOf", "setLayoutConstraintLeft_toRightOf", "setLayoutConstraintRight_toLeftOf", "setLayoutConstraintRight_toRightOf", "setLayoutConstraintTop_toTopOf", "setLayoutConstraintTop_toBottomOf", "setLayoutConstraintBottom_toTopOf", "setLayoutConstraintBottom_toBottomOf", "setLayoutConstraintBaseline_toBaselineOf", "setLayoutConstraintBaseline_toTopOf", "setLayoutConstraintBaseline_toBottomOf", "setLayoutConstraintStart_toEndOf", "setLayoutConstraintStart_toStartOf", "setLayoutConstraintEnd_toStartOf", "setLayoutConstraintEnd_toEndOf", "setLayoutGoneMarginLeft", "setLayoutGoneMarginTop", "setLayoutGoneMarginRight", "setLayoutGoneMarginBottom", "setLayoutGoneMarginStart", "setLayoutGoneMarginEnd", "setLayoutGoneMarginBaseline", "setLayoutMarginBaseline", "setLayoutConstraintWidth", "setLayoutConstraintHeight", "setLayoutConstrainedWidth", "Z", "setLayoutConstrainedHeight", "setLayoutConstraintHorizontal_bias", "setLayoutConstraintVertical_bias", "setLayoutConstraintWidth_default", "setLayoutConstraintHeight_default", "setLayoutConstraintWidth_min", "setLayoutConstraintWidth_max", "setLayoutConstraintWidth_percent", "setLayoutConstraintHeight_min", "setLayoutConstraintHeight_max", "setLayoutConstraintHeight_percent", "setLayoutConstraintDimensionRatio", "setLayoutConstraintHorizontal_weight", "setLayoutConstraintVertical_weight", "setLayoutConstraintHorizontal_chainStyle", "setLayoutConstraintVertical_chainStyle", "setLayoutEditor_absoluteX", "setLayoutEditor_absoluteY", "setLayoutConstraintTag", "setLayoutWrapBehaviorInParent", "Lcom/ashera/layout/ViewGroupImpl$ViewGroupCommandParamsBuilder<Lcom/ashera/constraintlayout/ConstraintLayoutImpl$ConstraintLayoutCommandParamsBuilder;>;" };
  static const J2ObjcClassInfo _ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder = { "ConstraintLayoutCommandParamsBuilder", "com.ashera.constraintlayout", ptrTable, methods, NULL, 7, 0x1, 160, 0, 0, -1, -1, 57, -1 };
  return &_ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder;
}

@end

void ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *self, ASConstraintLayoutImpl *outer$) {
  ASViewGroupImpl_ViewGroupCommandParamsBuilder_init(self);
}

ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *new_ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_NEW_IMPL(ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder, initWithASConstraintLayoutImpl_, outer$)
}

ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder *create_ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder_initWithASConstraintLayoutImpl_(ASConstraintLayoutImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder, initWithASConstraintLayoutImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASConstraintLayoutImpl_ConstraintLayoutCommandParamsBuilder)
