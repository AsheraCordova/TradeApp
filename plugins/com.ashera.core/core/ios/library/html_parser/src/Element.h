//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\html_parser\src\repackaged\org\ccil\cowan\tagsoup\Element.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Element")
#ifdef RESTRICT_Element
#define INCLUDE_ALL_Element 0
#else
#define INCLUDE_ALL_Element 1
#endif
#undef RESTRICT_Element

#if !defined (TSElement_) && (INCLUDE_ALL_Element || defined(INCLUDE_TSElement))
#define TSElement_

@class TSAttributesImpl;
@class TSElementType;

/*!
 @brief The internal representation of an actual element (not an element type).
 An Element has an element type, attributes, and a successor Element
 for use in constructing stacks and queues of Elements.
 - seealso: ElementType
 - seealso: AttributesImpl
 */
@interface TSElement : NSObject

#pragma mark Public

/*!
 @brief Return an Element from a specified ElementType.
 @param type The element type of the newly constructed element
 @param defaultAttributes True if default attributes are wanted
 */
- (instancetype)initWithTSElementType:(TSElementType *)type
                          withBoolean:(jboolean)defaultAttributes;

/*!
 @brief Make this element anonymous.
 Remove any <tt>id</tt> or <tt>name</tt> attribute present
 	in the element's attributes.
 */
- (void)anonymize;

/*!
 @brief Return the attributes as an AttributesImpl object.
 Returning an AttributesImpl makes the attributes mutable.
 @return The attributes
 - seealso: AttributesImpl
 */
- (TSAttributesImpl *)atts;

/*!
 @brief Return true if the type of this element can contain the type of
 	another element.
 Convenience method.
 @param other The other element
 */
- (jboolean)canContainWithTSElement:(TSElement *)other;

/*!
 @brief Clean the attributes of this element.
 Attributes with null name (the name was ill-formed)
 	or null value (the attribute was present in the element type but
 	not in this actual element) are removed.
 */
- (void)clean;

/*!
 @brief Return the flags vector of the element's type.
 Convenience method.
 @return The flags vector
 */
- (jint)flags;

/*!
 @brief Return true if this element has been preclosed.
 */
- (jboolean)isPreclosed;

/*!
 @brief Return the local name of the element's type.
 Convenience method.
 @return The element type local name
 */
- (NSString *)localName;

/*!
 @brief Return the member-of vector of the element's type.
 Convenience method.
 @return The member-of vector
 */
- (jint)memberOf;

/*!
 @brief Return the content model vector of the element's type.
 Convenience method.
 @return The content model vector
 */
- (jint)model;

/*!
 @brief Return the name of the element's type.
 Convenience method.
 @return The element type name
 */
- (NSString *)name;

/*!
 @brief Return the namespace name of the element's type.
 Convenience method.
 @return The element type namespace name
 */
- (NSString *)namespace__;

/*!
 @brief Return the next element in an element stack or queue.
 @return The next element
 */
- (TSElement *)next;

/*!
 @brief Return the parent element type of the element's type.
 Convenience method.
 @return The parent element type
 */
- (TSElementType *)parent;

/*!
 @brief Force this element to preclosed status, meaning that an end-tag has
 	been seen but the element cannot yet be closed for structural reasons.
 */
- (void)preclose;

/*!
 @brief Set an attribute and its value into this element.
 @param name The attribute name (Qname)
 @param type The attribute type
 @param value The attribute value
 */
- (void)setAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)type
                    withNSString:(NSString *)value;

/*!
 @brief Change the next element in an element stack or queue.
 @param next The new next element
 */
- (void)setNextWithTSElement:(TSElement *)next;

/*!
 @brief Return the element type.
 @return The element type.
 */
- (TSElementType *)type;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(TSElement)

FOUNDATION_EXPORT void TSElement_initWithTSElementType_withBoolean_(TSElement *self, TSElementType *type, jboolean defaultAttributes);

FOUNDATION_EXPORT TSElement *new_TSElement_initWithTSElementType_withBoolean_(TSElementType *type, jboolean defaultAttributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT TSElement *create_TSElement_initWithTSElementType_withBoolean_(TSElementType *type, jboolean defaultAttributes);

J2OBJC_TYPE_LITERAL_HEADER(TSElement)

@compatibility_alias RepackagedOrgCcilCowanTagsoupElement TSElement;

#endif

#pragma pop_macro("INCLUDE_ALL_Element")
