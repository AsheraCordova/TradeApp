//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\motion\utils\TypedValues.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "TypedValues.h"


@interface ADXTypedValues : NSObject

@end

NSString *ADXTypedValues_S_CUSTOM = @"CUSTOM";

@implementation ADXTypedValues

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 0, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 0, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 0, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setValueWithInt:withInt:);
  methods[1].selector = @selector(setValueWithInt:withFloat:);
  methods[2].selector = @selector(setValueWithInt:withNSString:);
  methods[3].selector = @selector(setValueWithInt:withBoolean:);
  methods[4].selector = @selector(getIdWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "S_CUSTOM", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "BOOLEAN_MASK", "I", .constantValue.asInt = ADXTypedValues_BOOLEAN_MASK, 0x19, -1, -1, -1, -1 },
    { "INT_MASK", "I", .constantValue.asInt = ADXTypedValues_INT_MASK, 0x19, -1, -1, -1, -1 },
    { "FLOAT_MASK", "I", .constantValue.asInt = ADXTypedValues_FLOAT_MASK, 0x19, -1, -1, -1, -1 },
    { "STRING_MASK", "I", .constantValue.asInt = ADXTypedValues_STRING_MASK, 0x19, -1, -1, -1, -1 },
    { "TYPE_FRAME_POSITION", "I", .constantValue.asInt = ADXTypedValues_TYPE_FRAME_POSITION, 0x19, -1, -1, -1, -1 },
    { "TYPE_TARGET", "I", .constantValue.asInt = ADXTypedValues_TYPE_TARGET, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setValue", "II", "IF", "ILNSString;", "IZ", "getId", "LNSString;", &ADXTypedValues_S_CUSTOM, "LADXTypedValues_Attributes;LADXTypedValues_Cycle;LADXTypedValues_Trigger;LADXTypedValues_Position;LADXTypedValues_Motion;LADXTypedValues_Custom;" };
  static const J2ObjcClassInfo _ADXTypedValues = { "TypedValues", "androidx.constraintlayout.core.motion.utils", ptrTable, methods, fields, 7, 0x609, 5, 7, -1, 8, -1, -1, -1 };
  return &_ADXTypedValues;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXTypedValues)

J2OBJC_INITIALIZED_DEFN(ADXTypedValues_Attributes)

NSString *ADXTypedValues_Attributes_S_CURVE_FIT = @"curveFit";
NSString *ADXTypedValues_Attributes_S_VISIBILITY = @"visibility";
NSString *ADXTypedValues_Attributes_S_ALPHA = @"alpha";
NSString *ADXTypedValues_Attributes_S_TRANSLATION_X = @"translationX";
NSString *ADXTypedValues_Attributes_S_TRANSLATION_Y = @"translationY";
NSString *ADXTypedValues_Attributes_S_TRANSLATION_Z = @"translationZ";
NSString *ADXTypedValues_Attributes_S_ELEVATION = @"elevation";
NSString *ADXTypedValues_Attributes_S_ROTATION_X = @"rotationX";
NSString *ADXTypedValues_Attributes_S_ROTATION_Y = @"rotationY";
NSString *ADXTypedValues_Attributes_S_ROTATION_Z = @"rotationZ";
NSString *ADXTypedValues_Attributes_S_SCALE_X = @"scaleX";
NSString *ADXTypedValues_Attributes_S_SCALE_Y = @"scaleY";
NSString *ADXTypedValues_Attributes_S_PIVOT_X = @"pivotX";
NSString *ADXTypedValues_Attributes_S_PIVOT_Y = @"pivotY";
NSString *ADXTypedValues_Attributes_S_PROGRESS = @"progress";
NSString *ADXTypedValues_Attributes_S_PATH_ROTATE = @"pathRotate";
NSString *ADXTypedValues_Attributes_S_EASING = @"easing";
NSString *ADXTypedValues_Attributes_S_CUSTOM = @"CUSTOM";
NSString *ADXTypedValues_Attributes_S_FRAME = @"frame";
NSString *ADXTypedValues_Attributes_S_TARGET = @"target";
NSString *ADXTypedValues_Attributes_S_PIVOT_TARGET = @"pivotTarget";
IOSObjectArray *ADXTypedValues_Attributes_KEY_WORDS;

@implementation ADXTypedValues_Attributes

+ (jint)getIdWithNSString:(NSString *)name {
  return ADXTypedValues_Attributes_getIdWithNSString_(name);
}

+ (jint)getTypeWithInt:(jint)name {
  return ADXTypedValues_Attributes_getTypeWithInt_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getIdWithNSString:);
  methods[1].selector = @selector(getTypeWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_CURVE_FIT", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_CURVE_FIT, 0x19, -1, -1, -1, -1 },
    { "TYPE_VISIBILITY", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_VISIBILITY, 0x19, -1, -1, -1, -1 },
    { "TYPE_ALPHA", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_ALPHA, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRANSLATION_X", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_TRANSLATION_X, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRANSLATION_Y", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_TRANSLATION_Y, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRANSLATION_Z", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_TRANSLATION_Z, 0x19, -1, -1, -1, -1 },
    { "TYPE_ELEVATION", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_ELEVATION, 0x19, -1, -1, -1, -1 },
    { "TYPE_ROTATION_X", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_ROTATION_X, 0x19, -1, -1, -1, -1 },
    { "TYPE_ROTATION_Y", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_ROTATION_Y, 0x19, -1, -1, -1, -1 },
    { "TYPE_ROTATION_Z", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_ROTATION_Z, 0x19, -1, -1, -1, -1 },
    { "TYPE_SCALE_X", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_SCALE_X, 0x19, -1, -1, -1, -1 },
    { "TYPE_SCALE_Y", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_SCALE_Y, 0x19, -1, -1, -1, -1 },
    { "TYPE_PIVOT_X", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_PIVOT_X, 0x19, -1, -1, -1, -1 },
    { "TYPE_PIVOT_Y", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_PIVOT_Y, 0x19, -1, -1, -1, -1 },
    { "TYPE_PROGRESS", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_PROGRESS, 0x19, -1, -1, -1, -1 },
    { "TYPE_PATH_ROTATE", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_PATH_ROTATE, 0x19, -1, -1, -1, -1 },
    { "TYPE_EASING", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_EASING, 0x19, -1, -1, -1, -1 },
    { "TYPE_PIVOT_TARGET", "I", .constantValue.asInt = ADXTypedValues_Attributes_TYPE_PIVOT_TARGET, 0x19, -1, -1, -1, -1 },
    { "S_CURVE_FIT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "S_VISIBILITY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "S_ALPHA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "S_TRANSLATION_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "S_TRANSLATION_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "S_TRANSLATION_Z", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "S_ELEVATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "S_ROTATION_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "S_ROTATION_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "S_ROTATION_Z", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "S_SCALE_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "S_SCALE_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "S_PIVOT_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "S_PIVOT_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "S_PROGRESS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "S_PATH_ROTATE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "S_EASING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "S_CUSTOM", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "S_FRAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "S_TARGET", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "S_PIVOT_TARGET", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "KEY_WORDS", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
  };
  static const void *ptrTable[] = { "getId", "LNSString;", "getType", "I", &ADXTypedValues_Attributes_S_CURVE_FIT, &ADXTypedValues_Attributes_S_VISIBILITY, &ADXTypedValues_Attributes_S_ALPHA, &ADXTypedValues_Attributes_S_TRANSLATION_X, &ADXTypedValues_Attributes_S_TRANSLATION_Y, &ADXTypedValues_Attributes_S_TRANSLATION_Z, &ADXTypedValues_Attributes_S_ELEVATION, &ADXTypedValues_Attributes_S_ROTATION_X, &ADXTypedValues_Attributes_S_ROTATION_Y, &ADXTypedValues_Attributes_S_ROTATION_Z, &ADXTypedValues_Attributes_S_SCALE_X, &ADXTypedValues_Attributes_S_SCALE_Y, &ADXTypedValues_Attributes_S_PIVOT_X, &ADXTypedValues_Attributes_S_PIVOT_Y, &ADXTypedValues_Attributes_S_PROGRESS, &ADXTypedValues_Attributes_S_PATH_ROTATE, &ADXTypedValues_Attributes_S_EASING, &ADXTypedValues_Attributes_S_CUSTOM, &ADXTypedValues_Attributes_S_FRAME, &ADXTypedValues_Attributes_S_TARGET, &ADXTypedValues_Attributes_S_PIVOT_TARGET, &ADXTypedValues_Attributes_KEY_WORDS, "LADXTypedValues;" };
  static const J2ObjcClassInfo _ADXTypedValues_Attributes = { "Attributes", "androidx.constraintlayout.core.motion.utils", ptrTable, methods, fields, 7, 0x609, 2, 40, 26, -1, -1, -1, -1 };
  return &_ADXTypedValues_Attributes;
}

+ (void)initialize {
  if (self == [ADXTypedValues_Attributes class]) {
    JreStrongAssignAndConsume(&ADXTypedValues_Attributes_KEY_WORDS, [IOSObjectArray newArrayWithObjects:(id[]){ ADXTypedValues_Attributes_S_CURVE_FIT, ADXTypedValues_Attributes_S_VISIBILITY, ADXTypedValues_Attributes_S_ALPHA, ADXTypedValues_Attributes_S_TRANSLATION_X, ADXTypedValues_Attributes_S_TRANSLATION_Y, ADXTypedValues_Attributes_S_TRANSLATION_Z, ADXTypedValues_Attributes_S_ELEVATION, ADXTypedValues_Attributes_S_ROTATION_X, ADXTypedValues_Attributes_S_ROTATION_Y, ADXTypedValues_Attributes_S_ROTATION_Z, ADXTypedValues_Attributes_S_SCALE_X, ADXTypedValues_Attributes_S_SCALE_Y, ADXTypedValues_Attributes_S_PIVOT_X, ADXTypedValues_Attributes_S_PIVOT_Y, ADXTypedValues_Attributes_S_PROGRESS, ADXTypedValues_Attributes_S_PATH_ROTATE, ADXTypedValues_Attributes_S_EASING, ADXTypedValues_Attributes_S_CUSTOM, ADXTypedValues_Attributes_S_FRAME, ADXTypedValues_Attributes_S_TARGET, ADXTypedValues_Attributes_S_PIVOT_TARGET } count:21 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(ADXTypedValues_Attributes)
  }
}

@end

jint ADXTypedValues_Attributes_getIdWithNSString_(NSString *name) {
  ADXTypedValues_Attributes_initialize();
  switch (JreIndexOfStr(name, (id[]){ ADXTypedValues_Attributes_S_CURVE_FIT, ADXTypedValues_Attributes_S_VISIBILITY, ADXTypedValues_Attributes_S_ALPHA, ADXTypedValues_Attributes_S_TRANSLATION_X, ADXTypedValues_Attributes_S_TRANSLATION_Y, ADXTypedValues_Attributes_S_TRANSLATION_Z, ADXTypedValues_Attributes_S_ELEVATION, ADXTypedValues_Attributes_S_ROTATION_X, ADXTypedValues_Attributes_S_ROTATION_Y, ADXTypedValues_Attributes_S_ROTATION_Z, ADXTypedValues_Attributes_S_SCALE_X, ADXTypedValues_Attributes_S_SCALE_Y, ADXTypedValues_Attributes_S_PIVOT_X, ADXTypedValues_Attributes_S_PIVOT_Y, ADXTypedValues_Attributes_S_PROGRESS, ADXTypedValues_Attributes_S_PATH_ROTATE, ADXTypedValues_Attributes_S_EASING, ADXTypedValues_Attributes_S_FRAME, ADXTypedValues_Attributes_S_TARGET, ADXTypedValues_Attributes_S_PIVOT_TARGET }, 20)) {
    case 0:
    return ADXTypedValues_Attributes_TYPE_CURVE_FIT;
    case 1:
    return ADXTypedValues_Attributes_TYPE_VISIBILITY;
    case 2:
    return ADXTypedValues_Attributes_TYPE_ALPHA;
    case 3:
    return ADXTypedValues_Attributes_TYPE_TRANSLATION_X;
    case 4:
    return ADXTypedValues_Attributes_TYPE_TRANSLATION_Y;
    case 5:
    return ADXTypedValues_Attributes_TYPE_TRANSLATION_Z;
    case 6:
    return ADXTypedValues_Attributes_TYPE_ELEVATION;
    case 7:
    return ADXTypedValues_Attributes_TYPE_ROTATION_X;
    case 8:
    return ADXTypedValues_Attributes_TYPE_ROTATION_Y;
    case 9:
    return ADXTypedValues_Attributes_TYPE_ROTATION_Z;
    case 10:
    return ADXTypedValues_Attributes_TYPE_SCALE_X;
    case 11:
    return ADXTypedValues_Attributes_TYPE_SCALE_Y;
    case 12:
    return ADXTypedValues_Attributes_TYPE_PIVOT_X;
    case 13:
    return ADXTypedValues_Attributes_TYPE_PIVOT_Y;
    case 14:
    return ADXTypedValues_Attributes_TYPE_PROGRESS;
    case 15:
    return ADXTypedValues_Attributes_TYPE_PATH_ROTATE;
    case 16:
    return ADXTypedValues_Attributes_TYPE_EASING;
    case 17:
    return ADXTypedValues_TYPE_FRAME_POSITION;
    case 18:
    return ADXTypedValues_TYPE_TARGET;
    case 19:
    return ADXTypedValues_Attributes_TYPE_PIVOT_TARGET;
  }
  return -1;
}

jint ADXTypedValues_Attributes_getTypeWithInt_(jint name) {
  ADXTypedValues_Attributes_initialize();
  switch (name) {
    case ADXTypedValues_Attributes_TYPE_CURVE_FIT:
    case ADXTypedValues_Attributes_TYPE_VISIBILITY:
    case ADXTypedValues_TYPE_FRAME_POSITION:
    return ADXTypedValues_INT_MASK;
    case ADXTypedValues_Attributes_TYPE_ALPHA:
    case ADXTypedValues_Attributes_TYPE_TRANSLATION_X:
    case ADXTypedValues_Attributes_TYPE_TRANSLATION_Y:
    case ADXTypedValues_Attributes_TYPE_TRANSLATION_Z:
    case ADXTypedValues_Attributes_TYPE_ELEVATION:
    case ADXTypedValues_Attributes_TYPE_ROTATION_X:
    case ADXTypedValues_Attributes_TYPE_ROTATION_Y:
    case ADXTypedValues_Attributes_TYPE_ROTATION_Z:
    case ADXTypedValues_Attributes_TYPE_SCALE_X:
    case ADXTypedValues_Attributes_TYPE_SCALE_Y:
    case ADXTypedValues_Attributes_TYPE_PIVOT_X:
    case ADXTypedValues_Attributes_TYPE_PIVOT_Y:
    case ADXTypedValues_Attributes_TYPE_PROGRESS:
    case ADXTypedValues_Attributes_TYPE_PATH_ROTATE:
    return ADXTypedValues_FLOAT_MASK;
    case ADXTypedValues_Attributes_TYPE_EASING:
    case ADXTypedValues_TYPE_TARGET:
    case ADXTypedValues_Attributes_TYPE_PIVOT_TARGET:
    return ADXTypedValues_STRING_MASK;
  }
  return -1;
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXTypedValues_Attributes)

J2OBJC_INITIALIZED_DEFN(ADXTypedValues_Cycle)

NSString *ADXTypedValues_Cycle_S_CURVE_FIT = @"curveFit";
NSString *ADXTypedValues_Cycle_S_VISIBILITY = @"visibility";
NSString *ADXTypedValues_Cycle_S_ALPHA = @"alpha";
NSString *ADXTypedValues_Cycle_S_TRANSLATION_X = @"translationX";
NSString *ADXTypedValues_Cycle_S_TRANSLATION_Y = @"translationY";
NSString *ADXTypedValues_Cycle_S_TRANSLATION_Z = @"translationZ";
NSString *ADXTypedValues_Cycle_S_ELEVATION = @"elevation";
NSString *ADXTypedValues_Cycle_S_ROTATION_X = @"rotationX";
NSString *ADXTypedValues_Cycle_S_ROTATION_Y = @"rotationY";
NSString *ADXTypedValues_Cycle_S_ROTATION_Z = @"rotationZ";
NSString *ADXTypedValues_Cycle_S_SCALE_X = @"scaleX";
NSString *ADXTypedValues_Cycle_S_SCALE_Y = @"scaleY";
NSString *ADXTypedValues_Cycle_S_PIVOT_X = @"pivotX";
NSString *ADXTypedValues_Cycle_S_PIVOT_Y = @"pivotY";
NSString *ADXTypedValues_Cycle_S_PROGRESS = @"progress";
NSString *ADXTypedValues_Cycle_S_PATH_ROTATE = @"pathRotate";
NSString *ADXTypedValues_Cycle_S_EASING = @"easing";
NSString *ADXTypedValues_Cycle_S_WAVE_SHAPE = @"waveShape";
NSString *ADXTypedValues_Cycle_S_CUSTOM_WAVE_SHAPE = @"customWave";
NSString *ADXTypedValues_Cycle_S_WAVE_PERIOD = @"period";
NSString *ADXTypedValues_Cycle_S_WAVE_OFFSET = @"offset";
NSString *ADXTypedValues_Cycle_S_WAVE_PHASE = @"phase";
IOSObjectArray *ADXTypedValues_Cycle_KEY_WORDS;

@implementation ADXTypedValues_Cycle

+ (jint)getIdWithNSString:(NSString *)name {
  return ADXTypedValues_Cycle_getIdWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getIdWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_CURVE_FIT", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_CURVE_FIT, 0x19, -1, -1, -1, -1 },
    { "TYPE_VISIBILITY", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_VISIBILITY, 0x19, -1, -1, -1, -1 },
    { "TYPE_ALPHA", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_ALPHA, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRANSLATION_X", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_TRANSLATION_X, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRANSLATION_Y", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_TRANSLATION_Y, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRANSLATION_Z", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_TRANSLATION_Z, 0x19, -1, -1, -1, -1 },
    { "TYPE_ELEVATION", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_ELEVATION, 0x19, -1, -1, -1, -1 },
    { "TYPE_ROTATION_X", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_ROTATION_X, 0x19, -1, -1, -1, -1 },
    { "TYPE_ROTATION_Y", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_ROTATION_Y, 0x19, -1, -1, -1, -1 },
    { "TYPE_ROTATION_Z", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_ROTATION_Z, 0x19, -1, -1, -1, -1 },
    { "TYPE_SCALE_X", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_SCALE_X, 0x19, -1, -1, -1, -1 },
    { "TYPE_SCALE_Y", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_SCALE_Y, 0x19, -1, -1, -1, -1 },
    { "TYPE_PIVOT_X", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_PIVOT_X, 0x19, -1, -1, -1, -1 },
    { "TYPE_PIVOT_Y", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_PIVOT_Y, 0x19, -1, -1, -1, -1 },
    { "TYPE_PROGRESS", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_PROGRESS, 0x19, -1, -1, -1, -1 },
    { "TYPE_PATH_ROTATE", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_PATH_ROTATE, 0x19, -1, -1, -1, -1 },
    { "TYPE_EASING", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_EASING, 0x19, -1, -1, -1, -1 },
    { "TYPE_WAVE_SHAPE", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_WAVE_SHAPE, 0x19, -1, -1, -1, -1 },
    { "TYPE_CUSTOM_WAVE_SHAPE", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_CUSTOM_WAVE_SHAPE, 0x19, -1, -1, -1, -1 },
    { "TYPE_WAVE_PERIOD", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_WAVE_PERIOD, 0x19, -1, -1, -1, -1 },
    { "TYPE_WAVE_OFFSET", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_WAVE_OFFSET, 0x19, -1, -1, -1, -1 },
    { "TYPE_WAVE_PHASE", "I", .constantValue.asInt = ADXTypedValues_Cycle_TYPE_WAVE_PHASE, 0x19, -1, -1, -1, -1 },
    { "S_CURVE_FIT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "S_VISIBILITY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "S_ALPHA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "S_TRANSLATION_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "S_TRANSLATION_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "S_TRANSLATION_Z", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "S_ELEVATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "S_ROTATION_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "S_ROTATION_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "S_ROTATION_Z", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "S_SCALE_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "S_SCALE_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "S_PIVOT_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "S_PIVOT_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "S_PROGRESS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "S_PATH_ROTATE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "S_EASING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "S_WAVE_SHAPE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "S_CUSTOM_WAVE_SHAPE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "S_WAVE_PERIOD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "S_WAVE_OFFSET", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "S_WAVE_PHASE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "KEY_WORDS", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
  };
  static const void *ptrTable[] = { "getId", "LNSString;", &ADXTypedValues_Cycle_S_CURVE_FIT, &ADXTypedValues_Cycle_S_VISIBILITY, &ADXTypedValues_Cycle_S_ALPHA, &ADXTypedValues_Cycle_S_TRANSLATION_X, &ADXTypedValues_Cycle_S_TRANSLATION_Y, &ADXTypedValues_Cycle_S_TRANSLATION_Z, &ADXTypedValues_Cycle_S_ELEVATION, &ADXTypedValues_Cycle_S_ROTATION_X, &ADXTypedValues_Cycle_S_ROTATION_Y, &ADXTypedValues_Cycle_S_ROTATION_Z, &ADXTypedValues_Cycle_S_SCALE_X, &ADXTypedValues_Cycle_S_SCALE_Y, &ADXTypedValues_Cycle_S_PIVOT_X, &ADXTypedValues_Cycle_S_PIVOT_Y, &ADXTypedValues_Cycle_S_PROGRESS, &ADXTypedValues_Cycle_S_PATH_ROTATE, &ADXTypedValues_Cycle_S_EASING, &ADXTypedValues_Cycle_S_WAVE_SHAPE, &ADXTypedValues_Cycle_S_CUSTOM_WAVE_SHAPE, &ADXTypedValues_Cycle_S_WAVE_PERIOD, &ADXTypedValues_Cycle_S_WAVE_OFFSET, &ADXTypedValues_Cycle_S_WAVE_PHASE, &ADXTypedValues_Cycle_KEY_WORDS, "LADXTypedValues;" };
  static const J2ObjcClassInfo _ADXTypedValues_Cycle = { "Cycle", "androidx.constraintlayout.core.motion.utils", ptrTable, methods, fields, 7, 0x609, 1, 45, 25, -1, -1, -1, -1 };
  return &_ADXTypedValues_Cycle;
}

+ (void)initialize {
  if (self == [ADXTypedValues_Cycle class]) {
    JreStrongAssignAndConsume(&ADXTypedValues_Cycle_KEY_WORDS, [IOSObjectArray newArrayWithObjects:(id[]){ ADXTypedValues_Cycle_S_CURVE_FIT, ADXTypedValues_Cycle_S_VISIBILITY, ADXTypedValues_Cycle_S_ALPHA, ADXTypedValues_Cycle_S_TRANSLATION_X, ADXTypedValues_Cycle_S_TRANSLATION_Y, ADXTypedValues_Cycle_S_TRANSLATION_Z, ADXTypedValues_Cycle_S_ELEVATION, ADXTypedValues_Cycle_S_ROTATION_X, ADXTypedValues_Cycle_S_ROTATION_Y, ADXTypedValues_Cycle_S_ROTATION_Z, ADXTypedValues_Cycle_S_SCALE_X, ADXTypedValues_Cycle_S_SCALE_Y, ADXTypedValues_Cycle_S_PIVOT_X, ADXTypedValues_Cycle_S_PIVOT_Y, ADXTypedValues_Cycle_S_PROGRESS, ADXTypedValues_Cycle_S_PATH_ROTATE, ADXTypedValues_Cycle_S_EASING, ADXTypedValues_Cycle_S_WAVE_SHAPE, ADXTypedValues_Cycle_S_CUSTOM_WAVE_SHAPE, ADXTypedValues_Cycle_S_WAVE_PERIOD, ADXTypedValues_Cycle_S_WAVE_OFFSET, ADXTypedValues_Cycle_S_WAVE_PHASE } count:22 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(ADXTypedValues_Cycle)
  }
}

@end

jint ADXTypedValues_Cycle_getIdWithNSString_(NSString *name) {
  ADXTypedValues_Cycle_initialize();
  switch (JreIndexOfStr(name, (id[]){ ADXTypedValues_Cycle_S_CURVE_FIT, ADXTypedValues_Cycle_S_VISIBILITY, ADXTypedValues_Cycle_S_ALPHA, ADXTypedValues_Cycle_S_TRANSLATION_X, ADXTypedValues_Cycle_S_TRANSLATION_Y, ADXTypedValues_Cycle_S_TRANSLATION_Z, ADXTypedValues_Cycle_S_ROTATION_X, ADXTypedValues_Cycle_S_ROTATION_Y, ADXTypedValues_Cycle_S_ROTATION_Z, ADXTypedValues_Cycle_S_SCALE_X, ADXTypedValues_Cycle_S_SCALE_Y, ADXTypedValues_Cycle_S_PIVOT_X, ADXTypedValues_Cycle_S_PIVOT_Y, ADXTypedValues_Cycle_S_PROGRESS, ADXTypedValues_Cycle_S_PATH_ROTATE, ADXTypedValues_Cycle_S_EASING }, 16)) {
    case 0:
    return ADXTypedValues_Cycle_TYPE_CURVE_FIT;
    case 1:
    return ADXTypedValues_Cycle_TYPE_VISIBILITY;
    case 2:
    return ADXTypedValues_Cycle_TYPE_ALPHA;
    case 3:
    return ADXTypedValues_Cycle_TYPE_TRANSLATION_X;
    case 4:
    return ADXTypedValues_Cycle_TYPE_TRANSLATION_Y;
    case 5:
    return ADXTypedValues_Cycle_TYPE_TRANSLATION_Z;
    case 6:
    return ADXTypedValues_Cycle_TYPE_ROTATION_X;
    case 7:
    return ADXTypedValues_Cycle_TYPE_ROTATION_Y;
    case 8:
    return ADXTypedValues_Cycle_TYPE_ROTATION_Z;
    case 9:
    return ADXTypedValues_Cycle_TYPE_SCALE_X;
    case 10:
    return ADXTypedValues_Cycle_TYPE_SCALE_Y;
    case 11:
    return ADXTypedValues_Cycle_TYPE_PIVOT_X;
    case 12:
    return ADXTypedValues_Cycle_TYPE_PIVOT_Y;
    case 13:
    return ADXTypedValues_Cycle_TYPE_PROGRESS;
    case 14:
    return ADXTypedValues_Cycle_TYPE_PATH_ROTATE;
    case 15:
    return ADXTypedValues_Cycle_TYPE_EASING;
  }
  return -1;
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXTypedValues_Cycle)

J2OBJC_INITIALIZED_DEFN(ADXTypedValues_Trigger)

NSString *ADXTypedValues_Trigger_VIEW_TRANSITION_ON_CROSS = @"viewTransitionOnCross";
NSString *ADXTypedValues_Trigger_VIEW_TRANSITION_ON_POSITIVE_CROSS = @"viewTransitionOnPositiveCross";
NSString *ADXTypedValues_Trigger_VIEW_TRANSITION_ON_NEGATIVE_CROSS = @"viewTransitionOnNegativeCross";
NSString *ADXTypedValues_Trigger_POST_LAYOUT = @"postLayout";
NSString *ADXTypedValues_Trigger_TRIGGER_SLACK = @"triggerSlack";
NSString *ADXTypedValues_Trigger_TRIGGER_COLLISION_VIEW = @"triggerCollisionView";
NSString *ADXTypedValues_Trigger_TRIGGER_COLLISION_ID = @"triggerCollisionId";
NSString *ADXTypedValues_Trigger_TRIGGER_ID = @"triggerID";
NSString *ADXTypedValues_Trigger_POSITIVE_CROSS = @"positiveCross";
NSString *ADXTypedValues_Trigger_NEGATIVE_CROSS = @"negativeCross";
NSString *ADXTypedValues_Trigger_TRIGGER_RECEIVER = @"triggerReceiver";
NSString *ADXTypedValues_Trigger_CROSS = @"CROSS";
IOSObjectArray *ADXTypedValues_Trigger_KEY_WORDS;

@implementation ADXTypedValues_Trigger

+ (jint)getIdWithNSString:(NSString *)name {
  return ADXTypedValues_Trigger_getIdWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getIdWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VIEW_TRANSITION_ON_CROSS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "VIEW_TRANSITION_ON_POSITIVE_CROSS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "VIEW_TRANSITION_ON_NEGATIVE_CROSS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "POST_LAYOUT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "TRIGGER_SLACK", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "TRIGGER_COLLISION_VIEW", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "TRIGGER_COLLISION_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "TRIGGER_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "POSITIVE_CROSS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "NEGATIVE_CROSS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "TRIGGER_RECEIVER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "CROSS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "KEY_WORDS", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "TYPE_VIEW_TRANSITION_ON_CROSS", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_VIEW_TRANSITION_ON_CROSS, 0x19, -1, -1, -1, -1 },
    { "TYPE_VIEW_TRANSITION_ON_POSITIVE_CROSS", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_VIEW_TRANSITION_ON_POSITIVE_CROSS, 0x19, -1, -1, -1, -1 },
    { "TYPE_VIEW_TRANSITION_ON_NEGATIVE_CROSS", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_VIEW_TRANSITION_ON_NEGATIVE_CROSS, 0x19, -1, -1, -1, -1 },
    { "TYPE_POST_LAYOUT", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_POST_LAYOUT, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRIGGER_SLACK", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_TRIGGER_SLACK, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRIGGER_COLLISION_VIEW", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_TRIGGER_COLLISION_VIEW, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRIGGER_COLLISION_ID", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_TRIGGER_COLLISION_ID, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRIGGER_ID", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_TRIGGER_ID, 0x19, -1, -1, -1, -1 },
    { "TYPE_POSITIVE_CROSS", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_POSITIVE_CROSS, 0x19, -1, -1, -1, -1 },
    { "TYPE_NEGATIVE_CROSS", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_NEGATIVE_CROSS, 0x19, -1, -1, -1, -1 },
    { "TYPE_TRIGGER_RECEIVER", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_TRIGGER_RECEIVER, 0x19, -1, -1, -1, -1 },
    { "TYPE_CROSS", "I", .constantValue.asInt = ADXTypedValues_Trigger_TYPE_CROSS, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getId", "LNSString;", &ADXTypedValues_Trigger_VIEW_TRANSITION_ON_CROSS, &ADXTypedValues_Trigger_VIEW_TRANSITION_ON_POSITIVE_CROSS, &ADXTypedValues_Trigger_VIEW_TRANSITION_ON_NEGATIVE_CROSS, &ADXTypedValues_Trigger_POST_LAYOUT, &ADXTypedValues_Trigger_TRIGGER_SLACK, &ADXTypedValues_Trigger_TRIGGER_COLLISION_VIEW, &ADXTypedValues_Trigger_TRIGGER_COLLISION_ID, &ADXTypedValues_Trigger_TRIGGER_ID, &ADXTypedValues_Trigger_POSITIVE_CROSS, &ADXTypedValues_Trigger_NEGATIVE_CROSS, &ADXTypedValues_Trigger_TRIGGER_RECEIVER, &ADXTypedValues_Trigger_CROSS, &ADXTypedValues_Trigger_KEY_WORDS, "LADXTypedValues;" };
  static const J2ObjcClassInfo _ADXTypedValues_Trigger = { "Trigger", "androidx.constraintlayout.core.motion.utils", ptrTable, methods, fields, 7, 0x609, 1, 25, 15, -1, -1, -1, -1 };
  return &_ADXTypedValues_Trigger;
}

+ (void)initialize {
  if (self == [ADXTypedValues_Trigger class]) {
    JreStrongAssignAndConsume(&ADXTypedValues_Trigger_KEY_WORDS, [IOSObjectArray newArrayWithObjects:(id[]){ ADXTypedValues_Trigger_VIEW_TRANSITION_ON_CROSS, ADXTypedValues_Trigger_VIEW_TRANSITION_ON_POSITIVE_CROSS, ADXTypedValues_Trigger_VIEW_TRANSITION_ON_NEGATIVE_CROSS, ADXTypedValues_Trigger_POST_LAYOUT, ADXTypedValues_Trigger_TRIGGER_SLACK, ADXTypedValues_Trigger_TRIGGER_COLLISION_VIEW, ADXTypedValues_Trigger_TRIGGER_COLLISION_ID, ADXTypedValues_Trigger_TRIGGER_ID, ADXTypedValues_Trigger_POSITIVE_CROSS, ADXTypedValues_Trigger_NEGATIVE_CROSS, ADXTypedValues_Trigger_TRIGGER_RECEIVER, ADXTypedValues_Trigger_CROSS } count:12 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(ADXTypedValues_Trigger)
  }
}

@end

jint ADXTypedValues_Trigger_getIdWithNSString_(NSString *name) {
  ADXTypedValues_Trigger_initialize();
  switch (JreIndexOfStr(name, (id[]){ ADXTypedValues_Trigger_VIEW_TRANSITION_ON_CROSS, ADXTypedValues_Trigger_VIEW_TRANSITION_ON_POSITIVE_CROSS, ADXTypedValues_Trigger_VIEW_TRANSITION_ON_NEGATIVE_CROSS, ADXTypedValues_Trigger_POST_LAYOUT, ADXTypedValues_Trigger_TRIGGER_SLACK, ADXTypedValues_Trigger_TRIGGER_COLLISION_VIEW, ADXTypedValues_Trigger_TRIGGER_COLLISION_ID, ADXTypedValues_Trigger_TRIGGER_ID, ADXTypedValues_Trigger_POSITIVE_CROSS, ADXTypedValues_Trigger_NEGATIVE_CROSS, ADXTypedValues_Trigger_TRIGGER_RECEIVER, ADXTypedValues_Trigger_CROSS }, 12)) {
    case 0:
    return ADXTypedValues_Trigger_TYPE_VIEW_TRANSITION_ON_CROSS;
    case 1:
    return ADXTypedValues_Trigger_TYPE_VIEW_TRANSITION_ON_POSITIVE_CROSS;
    case 2:
    return ADXTypedValues_Trigger_TYPE_VIEW_TRANSITION_ON_NEGATIVE_CROSS;
    case 3:
    return ADXTypedValues_Trigger_TYPE_POST_LAYOUT;
    case 4:
    return ADXTypedValues_Trigger_TYPE_TRIGGER_SLACK;
    case 5:
    return ADXTypedValues_Trigger_TYPE_TRIGGER_COLLISION_VIEW;
    case 6:
    return ADXTypedValues_Trigger_TYPE_TRIGGER_COLLISION_ID;
    case 7:
    return ADXTypedValues_Trigger_TYPE_TRIGGER_ID;
    case 8:
    return ADXTypedValues_Trigger_TYPE_POSITIVE_CROSS;
    case 9:
    return ADXTypedValues_Trigger_TYPE_NEGATIVE_CROSS;
    case 10:
    return ADXTypedValues_Trigger_TYPE_TRIGGER_RECEIVER;
    case 11:
    return ADXTypedValues_Trigger_TYPE_CROSS;
  }
  return -1;
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXTypedValues_Trigger)

J2OBJC_INITIALIZED_DEFN(ADXTypedValues_Position)

NSString *ADXTypedValues_Position_S_TRANSITION_EASING = @"transitionEasing";
NSString *ADXTypedValues_Position_S_DRAWPATH = @"drawPath";
NSString *ADXTypedValues_Position_S_PERCENT_WIDTH = @"percentWidth";
NSString *ADXTypedValues_Position_S_PERCENT_HEIGHT = @"percentHeight";
NSString *ADXTypedValues_Position_S_SIZE_PERCENT = @"sizePercent";
NSString *ADXTypedValues_Position_S_PERCENT_X = @"percentX";
NSString *ADXTypedValues_Position_S_PERCENT_Y = @"percentY";
IOSObjectArray *ADXTypedValues_Position_KEY_WORDS;

@implementation ADXTypedValues_Position

+ (jint)getIdWithNSString:(NSString *)name {
  return ADXTypedValues_Position_getIdWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getIdWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "S_TRANSITION_EASING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "S_DRAWPATH", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "S_PERCENT_WIDTH", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "S_PERCENT_HEIGHT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "S_SIZE_PERCENT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "S_PERCENT_X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "S_PERCENT_Y", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "TYPE_TRANSITION_EASING", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_TRANSITION_EASING, 0x19, -1, -1, -1, -1 },
    { "TYPE_DRAWPATH", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_DRAWPATH, 0x19, -1, -1, -1, -1 },
    { "TYPE_PERCENT_WIDTH", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_PERCENT_WIDTH, 0x19, -1, -1, -1, -1 },
    { "TYPE_PERCENT_HEIGHT", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_PERCENT_HEIGHT, 0x19, -1, -1, -1, -1 },
    { "TYPE_SIZE_PERCENT", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_SIZE_PERCENT, 0x19, -1, -1, -1, -1 },
    { "TYPE_PERCENT_X", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_PERCENT_X, 0x19, -1, -1, -1, -1 },
    { "TYPE_PERCENT_Y", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_PERCENT_Y, 0x19, -1, -1, -1, -1 },
    { "TYPE_CURVE_FIT", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_CURVE_FIT, 0x19, -1, -1, -1, -1 },
    { "TYPE_PATH_MOTION_ARC", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_PATH_MOTION_ARC, 0x19, -1, -1, -1, -1 },
    { "TYPE_POSITION_TYPE", "I", .constantValue.asInt = ADXTypedValues_Position_TYPE_POSITION_TYPE, 0x19, -1, -1, -1, -1 },
    { "KEY_WORDS", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "getId", "LNSString;", &ADXTypedValues_Position_S_TRANSITION_EASING, &ADXTypedValues_Position_S_DRAWPATH, &ADXTypedValues_Position_S_PERCENT_WIDTH, &ADXTypedValues_Position_S_PERCENT_HEIGHT, &ADXTypedValues_Position_S_SIZE_PERCENT, &ADXTypedValues_Position_S_PERCENT_X, &ADXTypedValues_Position_S_PERCENT_Y, &ADXTypedValues_Position_KEY_WORDS, "LADXTypedValues;" };
  static const J2ObjcClassInfo _ADXTypedValues_Position = { "Position", "androidx.constraintlayout.core.motion.utils", ptrTable, methods, fields, 7, 0x609, 1, 18, 10, -1, -1, -1, -1 };
  return &_ADXTypedValues_Position;
}

+ (void)initialize {
  if (self == [ADXTypedValues_Position class]) {
    JreStrongAssignAndConsume(&ADXTypedValues_Position_KEY_WORDS, [IOSObjectArray newArrayWithObjects:(id[]){ ADXTypedValues_Position_S_TRANSITION_EASING, ADXTypedValues_Position_S_DRAWPATH, ADXTypedValues_Position_S_PERCENT_WIDTH, ADXTypedValues_Position_S_PERCENT_HEIGHT, ADXTypedValues_Position_S_SIZE_PERCENT, ADXTypedValues_Position_S_PERCENT_X, ADXTypedValues_Position_S_PERCENT_Y } count:7 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(ADXTypedValues_Position)
  }
}

@end

jint ADXTypedValues_Position_getIdWithNSString_(NSString *name) {
  ADXTypedValues_Position_initialize();
  switch (JreIndexOfStr(name, (id[]){ ADXTypedValues_Position_S_TRANSITION_EASING, ADXTypedValues_Position_S_DRAWPATH, ADXTypedValues_Position_S_PERCENT_WIDTH, ADXTypedValues_Position_S_PERCENT_HEIGHT, ADXTypedValues_Position_S_SIZE_PERCENT, ADXTypedValues_Position_S_PERCENT_X, ADXTypedValues_Position_S_PERCENT_Y }, 7)) {
    case 0:
    return ADXTypedValues_Position_TYPE_TRANSITION_EASING;
    case 1:
    return ADXTypedValues_Position_TYPE_DRAWPATH;
    case 2:
    return ADXTypedValues_Position_TYPE_PERCENT_WIDTH;
    case 3:
    return ADXTypedValues_Position_TYPE_PERCENT_HEIGHT;
    case 4:
    return ADXTypedValues_Position_TYPE_SIZE_PERCENT;
    case 5:
    return ADXTypedValues_Position_TYPE_PERCENT_X;
    case 6:
    return ADXTypedValues_Position_TYPE_PERCENT_Y;
  }
  return -1;
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXTypedValues_Position)

J2OBJC_INITIALIZED_DEFN(ADXTypedValues_Motion)

NSString *ADXTypedValues_Motion_S_STAGGER = @"Stagger";
NSString *ADXTypedValues_Motion_S_PATH_ROTATE = @"PathRotate";
NSString *ADXTypedValues_Motion_S_QUANTIZE_MOTION_PHASE = @"QuantizeMotionPhase";
NSString *ADXTypedValues_Motion_S_EASING = @"TransitionEasing";
NSString *ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR = @"QuantizeInterpolator";
NSString *ADXTypedValues_Motion_S_ANIMATE_RELATIVE_TO = @"AnimateRelativeTo";
NSString *ADXTypedValues_Motion_S_ANIMATE_CIRCLEANGLE_TO = @"AnimateCircleAngleTo";
NSString *ADXTypedValues_Motion_S_PATHMOTION_ARC = @"PathMotionArc";
NSString *ADXTypedValues_Motion_S_DRAW_PATH = @"DrawPath";
NSString *ADXTypedValues_Motion_S_POLAR_RELATIVETO = @"PolarRelativeTo";
NSString *ADXTypedValues_Motion_S_QUANTIZE_MOTIONSTEPS = @"QuantizeMotionSteps";
NSString *ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR_TYPE = @"QuantizeInterpolatorType";
NSString *ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR_ID = @"QuantizeInterpolatorID";
IOSObjectArray *ADXTypedValues_Motion_KEY_WORDS;

@implementation ADXTypedValues_Motion

+ (jint)getIdWithNSString:(NSString *)name {
  return ADXTypedValues_Motion_getIdWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getIdWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "S_STAGGER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "S_PATH_ROTATE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "S_QUANTIZE_MOTION_PHASE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "S_EASING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "S_QUANTIZE_INTERPOLATOR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "S_ANIMATE_RELATIVE_TO", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "S_ANIMATE_CIRCLEANGLE_TO", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "S_PATHMOTION_ARC", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "S_DRAW_PATH", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "S_POLAR_RELATIVETO", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "S_QUANTIZE_MOTIONSTEPS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "S_QUANTIZE_INTERPOLATOR_TYPE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "S_QUANTIZE_INTERPOLATOR_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "KEY_WORDS", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "TYPE_STAGGER", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_STAGGER, 0x19, -1, -1, -1, -1 },
    { "TYPE_PATH_ROTATE", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_PATH_ROTATE, 0x19, -1, -1, -1, -1 },
    { "TYPE_QUANTIZE_MOTION_PHASE", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_QUANTIZE_MOTION_PHASE, 0x19, -1, -1, -1, -1 },
    { "TYPE_EASING", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_EASING, 0x19, -1, -1, -1, -1 },
    { "TYPE_QUANTIZE_INTERPOLATOR", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_QUANTIZE_INTERPOLATOR, 0x19, -1, -1, -1, -1 },
    { "TYPE_ANIMATE_RELATIVE_TO", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_ANIMATE_RELATIVE_TO, 0x19, -1, -1, -1, -1 },
    { "TYPE_ANIMATE_CIRCLEANGLE_TO", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_ANIMATE_CIRCLEANGLE_TO, 0x19, -1, -1, -1, -1 },
    { "TYPE_PATHMOTION_ARC", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_PATHMOTION_ARC, 0x19, -1, -1, -1, -1 },
    { "TYPE_DRAW_PATH", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_DRAW_PATH, 0x19, -1, -1, -1, -1 },
    { "TYPE_POLAR_RELATIVETO", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_POLAR_RELATIVETO, 0x19, -1, -1, -1, -1 },
    { "TYPE_QUANTIZE_MOTIONSTEPS", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_QUANTIZE_MOTIONSTEPS, 0x19, -1, -1, -1, -1 },
    { "TYPE_QUANTIZE_INTERPOLATOR_TYPE", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_QUANTIZE_INTERPOLATOR_TYPE, 0x19, -1, -1, -1, -1 },
    { "TYPE_QUANTIZE_INTERPOLATOR_ID", "I", .constantValue.asInt = ADXTypedValues_Motion_TYPE_QUANTIZE_INTERPOLATOR_ID, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getId", "LNSString;", &ADXTypedValues_Motion_S_STAGGER, &ADXTypedValues_Motion_S_PATH_ROTATE, &ADXTypedValues_Motion_S_QUANTIZE_MOTION_PHASE, &ADXTypedValues_Motion_S_EASING, &ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR, &ADXTypedValues_Motion_S_ANIMATE_RELATIVE_TO, &ADXTypedValues_Motion_S_ANIMATE_CIRCLEANGLE_TO, &ADXTypedValues_Motion_S_PATHMOTION_ARC, &ADXTypedValues_Motion_S_DRAW_PATH, &ADXTypedValues_Motion_S_POLAR_RELATIVETO, &ADXTypedValues_Motion_S_QUANTIZE_MOTIONSTEPS, &ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR_TYPE, &ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR_ID, &ADXTypedValues_Motion_KEY_WORDS, "LADXTypedValues;" };
  static const J2ObjcClassInfo _ADXTypedValues_Motion = { "Motion", "androidx.constraintlayout.core.motion.utils", ptrTable, methods, fields, 7, 0x609, 1, 27, 16, -1, -1, -1, -1 };
  return &_ADXTypedValues_Motion;
}

+ (void)initialize {
  if (self == [ADXTypedValues_Motion class]) {
    JreStrongAssignAndConsume(&ADXTypedValues_Motion_KEY_WORDS, [IOSObjectArray newArrayWithObjects:(id[]){ ADXTypedValues_Motion_S_STAGGER, ADXTypedValues_Motion_S_PATH_ROTATE, ADXTypedValues_Motion_S_QUANTIZE_MOTION_PHASE, ADXTypedValues_Motion_S_EASING, ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR, ADXTypedValues_Motion_S_ANIMATE_RELATIVE_TO, ADXTypedValues_Motion_S_ANIMATE_CIRCLEANGLE_TO, ADXTypedValues_Motion_S_PATHMOTION_ARC, ADXTypedValues_Motion_S_DRAW_PATH, ADXTypedValues_Motion_S_POLAR_RELATIVETO, ADXTypedValues_Motion_S_QUANTIZE_MOTIONSTEPS, ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR_TYPE, ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR_ID } count:13 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(ADXTypedValues_Motion)
  }
}

@end

jint ADXTypedValues_Motion_getIdWithNSString_(NSString *name) {
  ADXTypedValues_Motion_initialize();
  switch (JreIndexOfStr(name, (id[]){ ADXTypedValues_Motion_S_STAGGER, ADXTypedValues_Motion_S_PATH_ROTATE, ADXTypedValues_Motion_S_QUANTIZE_MOTION_PHASE, ADXTypedValues_Motion_S_EASING, ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR, ADXTypedValues_Motion_S_ANIMATE_RELATIVE_TO, ADXTypedValues_Motion_S_ANIMATE_CIRCLEANGLE_TO, ADXTypedValues_Motion_S_PATHMOTION_ARC, ADXTypedValues_Motion_S_DRAW_PATH, ADXTypedValues_Motion_S_POLAR_RELATIVETO, ADXTypedValues_Motion_S_QUANTIZE_MOTIONSTEPS, ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR_TYPE, ADXTypedValues_Motion_S_QUANTIZE_INTERPOLATOR_ID }, 13)) {
    case 0:
    return ADXTypedValues_Motion_TYPE_STAGGER;
    case 1:
    return ADXTypedValues_Motion_TYPE_PATH_ROTATE;
    case 2:
    return ADXTypedValues_Motion_TYPE_QUANTIZE_MOTION_PHASE;
    case 3:
    return ADXTypedValues_Motion_TYPE_EASING;
    case 4:
    return ADXTypedValues_Motion_TYPE_QUANTIZE_INTERPOLATOR;
    case 5:
    return ADXTypedValues_Motion_TYPE_ANIMATE_RELATIVE_TO;
    case 6:
    return ADXTypedValues_Motion_TYPE_ANIMATE_CIRCLEANGLE_TO;
    case 7:
    return ADXTypedValues_Motion_TYPE_PATHMOTION_ARC;
    case 8:
    return ADXTypedValues_Motion_TYPE_DRAW_PATH;
    case 9:
    return ADXTypedValues_Motion_TYPE_POLAR_RELATIVETO;
    case 10:
    return ADXTypedValues_Motion_TYPE_QUANTIZE_MOTIONSTEPS;
    case 11:
    return ADXTypedValues_Motion_TYPE_QUANTIZE_INTERPOLATOR_TYPE;
    case 12:
    return ADXTypedValues_Motion_TYPE_QUANTIZE_INTERPOLATOR_ID;
  }
  return -1;
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXTypedValues_Motion)

J2OBJC_INITIALIZED_DEFN(ADXTypedValues_Custom)

NSString *ADXTypedValues_Custom_S_INT = @"integer";
NSString *ADXTypedValues_Custom_S_FLOAT = @"float";
NSString *ADXTypedValues_Custom_S_COLOR = @"color";
NSString *ADXTypedValues_Custom_S_STRING = @"string";
NSString *ADXTypedValues_Custom_S_BOOLEAN = @"boolean";
NSString *ADXTypedValues_Custom_S_DIMENSION = @"dimension";
NSString *ADXTypedValues_Custom_S_REFERENCE = @"refrence";
IOSObjectArray *ADXTypedValues_Custom_KEY_WORDS;

@implementation ADXTypedValues_Custom

+ (jint)getIdWithNSString:(NSString *)name {
  return ADXTypedValues_Custom_getIdWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getIdWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "S_INT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "S_FLOAT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "S_COLOR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "S_STRING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "S_BOOLEAN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "S_DIMENSION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "S_REFERENCE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "KEY_WORDS", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "TYPE_INT", "I", .constantValue.asInt = ADXTypedValues_Custom_TYPE_INT, 0x19, -1, -1, -1, -1 },
    { "TYPE_FLOAT", "I", .constantValue.asInt = ADXTypedValues_Custom_TYPE_FLOAT, 0x19, -1, -1, -1, -1 },
    { "TYPE_COLOR", "I", .constantValue.asInt = ADXTypedValues_Custom_TYPE_COLOR, 0x19, -1, -1, -1, -1 },
    { "TYPE_STRING", "I", .constantValue.asInt = ADXTypedValues_Custom_TYPE_STRING, 0x19, -1, -1, -1, -1 },
    { "TYPE_BOOLEAN", "I", .constantValue.asInt = ADXTypedValues_Custom_TYPE_BOOLEAN, 0x19, -1, -1, -1, -1 },
    { "TYPE_DIMENSION", "I", .constantValue.asInt = ADXTypedValues_Custom_TYPE_DIMENSION, 0x19, -1, -1, -1, -1 },
    { "TYPE_REFERENCE", "I", .constantValue.asInt = ADXTypedValues_Custom_TYPE_REFERENCE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getId", "LNSString;", &ADXTypedValues_Custom_S_INT, &ADXTypedValues_Custom_S_FLOAT, &ADXTypedValues_Custom_S_COLOR, &ADXTypedValues_Custom_S_STRING, &ADXTypedValues_Custom_S_BOOLEAN, &ADXTypedValues_Custom_S_DIMENSION, &ADXTypedValues_Custom_S_REFERENCE, &ADXTypedValues_Custom_KEY_WORDS, "LADXTypedValues;" };
  static const J2ObjcClassInfo _ADXTypedValues_Custom = { "Custom", "androidx.constraintlayout.core.motion.utils", ptrTable, methods, fields, 7, 0x609, 1, 15, 10, -1, -1, -1, -1 };
  return &_ADXTypedValues_Custom;
}

+ (void)initialize {
  if (self == [ADXTypedValues_Custom class]) {
    JreStrongAssignAndConsume(&ADXTypedValues_Custom_KEY_WORDS, [IOSObjectArray newArrayWithObjects:(id[]){ ADXTypedValues_Custom_S_FLOAT, ADXTypedValues_Custom_S_COLOR, ADXTypedValues_Custom_S_STRING, ADXTypedValues_Custom_S_BOOLEAN, ADXTypedValues_Custom_S_DIMENSION, ADXTypedValues_Custom_S_REFERENCE } count:6 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(ADXTypedValues_Custom)
  }
}

@end

jint ADXTypedValues_Custom_getIdWithNSString_(NSString *name) {
  ADXTypedValues_Custom_initialize();
  switch (JreIndexOfStr(name, (id[]){ ADXTypedValues_Custom_S_INT, ADXTypedValues_Custom_S_FLOAT, ADXTypedValues_Custom_S_COLOR, ADXTypedValues_Custom_S_STRING, ADXTypedValues_Custom_S_BOOLEAN, ADXTypedValues_Custom_S_DIMENSION, ADXTypedValues_Custom_S_REFERENCE }, 7)) {
    case 0:
    return ADXTypedValues_Custom_TYPE_INT;
    case 1:
    return ADXTypedValues_Custom_TYPE_FLOAT;
    case 2:
    return ADXTypedValues_Custom_TYPE_COLOR;
    case 3:
    return ADXTypedValues_Custom_TYPE_STRING;
    case 4:
    return ADXTypedValues_Custom_TYPE_BOOLEAN;
    case 5:
    return ADXTypedValues_Custom_TYPE_DIMENSION;
    case 6:
    return ADXTypedValues_Custom_TYPE_REFERENCE;
  }
  return -1;
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXTypedValues_Custom)
