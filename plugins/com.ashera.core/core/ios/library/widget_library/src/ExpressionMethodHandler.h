//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\model\ExpressionMethodHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ExpressionMethodHandler")
#ifdef RESTRICT_ExpressionMethodHandler
#define INCLUDE_ALL_ExpressionMethodHandler 0
#else
#define INCLUDE_ALL_ExpressionMethodHandler 1
#endif
#undef RESTRICT_ExpressionMethodHandler

#if !defined (ASExpressionMethodHandler_) && (INCLUDE_ALL_ExpressionMethodHandler || defined(INCLUDE_ASExpressionMethodHandler))
#define ASExpressionMethodHandler_

@protocol ASIWidget;

@interface ASExpressionMethodHandler : NSObject

#pragma mark Public

- (instancetype)init;

+ (id)getValueWithNSString:(NSString *)methodName
                    withId:(id)obj
             withASIWidget:(id<ASIWidget>)widget;

+ (jboolean)isVisibleWithId:(id)obj;

@end

J2OBJC_EMPTY_STATIC_INIT(ASExpressionMethodHandler)

FOUNDATION_EXPORT void ASExpressionMethodHandler_init(ASExpressionMethodHandler *self);

FOUNDATION_EXPORT ASExpressionMethodHandler *new_ASExpressionMethodHandler_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASExpressionMethodHandler *create_ASExpressionMethodHandler_init(void);

FOUNDATION_EXPORT id ASExpressionMethodHandler_getValueWithNSString_withId_withASIWidget_(NSString *methodName, id obj, id<ASIWidget> widget);

FOUNDATION_EXPORT jboolean ASExpressionMethodHandler_isVisibleWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(ASExpressionMethodHandler)

@compatibility_alias ComAsheraModelExpressionMethodHandler ASExpressionMethodHandler;

#endif

#pragma pop_macro("INCLUDE_ALL_ExpressionMethodHandler")
