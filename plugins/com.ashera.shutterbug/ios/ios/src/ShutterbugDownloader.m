//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSShutterBugPlugin\src\main\java\com\applidium\shutterbug\downloader\ShutterbugDownloader.java
//

#include "AsyncTask.h"
#include "DownloadRequest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ShutterbugDownloader.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/lang/Void.h"
#include "java/net/HttpURLConnection.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"

@class JavaIoInputStream;


@interface APShutterbugDownloader () {
 @public
  NSString *mUrl_;
  id<APShutterbugDownloader_ShutterbugDownloaderListener> mListener_;
  IOSByteArray *mImageData_;
  APDownloadRequest *mDownloadRequest_;
  ADAsyncTask *mCurrentTask_;
}

@end

J2OBJC_FIELD_SETTER(APShutterbugDownloader, mUrl_, NSString *)
J2OBJC_FIELD_SETTER(APShutterbugDownloader, mListener_, id<APShutterbugDownloader_ShutterbugDownloaderListener>)
J2OBJC_FIELD_SETTER(APShutterbugDownloader, mImageData_, IOSByteArray *)
J2OBJC_FIELD_SETTER(APShutterbugDownloader, mDownloadRequest_, APDownloadRequest *)
J2OBJC_FIELD_SETTER(APShutterbugDownloader, mCurrentTask_, ADAsyncTask *)

inline jint APShutterbugDownloader_get_TIMEOUT(void);
#define APShutterbugDownloader_TIMEOUT 30000
J2OBJC_STATIC_FIELD_CONSTANT(APShutterbugDownloader, TIMEOUT, jint)

@interface APShutterbugDownloader_ShutterbugDownloaderListener : NSObject

@end

@interface APShutterbugDownloader_1 : ADAsyncTask {
 @public
  APShutterbugDownloader *this$0_;
}

- (instancetype)initWithAPShutterbugDownloader:(APShutterbugDownloader *)outer$;

- (JavaIoInputStream *)doInBackgroundWithNSObjectArray:(IOSObjectArray *)params;

- (void)onPostExecuteWithId:(JavaIoInputStream *)inputStream;

@end

J2OBJC_EMPTY_STATIC_INIT(APShutterbugDownloader_1)

__attribute__((unused)) static void APShutterbugDownloader_1_initWithAPShutterbugDownloader_(APShutterbugDownloader_1 *self, APShutterbugDownloader *outer$);

__attribute__((unused)) static APShutterbugDownloader_1 *new_APShutterbugDownloader_1_initWithAPShutterbugDownloader_(APShutterbugDownloader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static APShutterbugDownloader_1 *create_APShutterbugDownloader_1_initWithAPShutterbugDownloader_(APShutterbugDownloader *outer$);

@implementation APShutterbugDownloader

- (instancetype)initWithNSString:(NSString *)url
withAPShutterbugDownloader_ShutterbugDownloaderListener:(id<APShutterbugDownloader_ShutterbugDownloaderListener>)listener
           withAPDownloadRequest:(APDownloadRequest *)downloadRequest {
  APShutterbugDownloader_initWithNSString_withAPShutterbugDownloader_ShutterbugDownloaderListener_withAPDownloadRequest_(self, url, listener, downloadRequest);
  return self;
}

- (NSString *)getUrl {
  return mUrl_;
}

- (id<APShutterbugDownloader_ShutterbugDownloaderListener>)getListener {
  return mListener_;
}

- (IOSByteArray *)getImageData {
  return mImageData_;
}

- (APDownloadRequest *)getDownloadRequest {
  return mDownloadRequest_;
}

- (void)start {
  mCurrentTask_ = [new_APShutterbugDownloader_1_initWithAPShutterbugDownloader_(self) executeWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:JavaLangVoid_class_()]];
}

- (void)cancel {
  if (mCurrentTask_ != nil) {
    [mCurrentTask_ cancelWithBoolean:true];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAPShutterbugDownloader_ShutterbugDownloaderListener;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAPDownloadRequest;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withAPShutterbugDownloader_ShutterbugDownloaderListener:withAPDownloadRequest:);
  methods[1].selector = @selector(getUrl);
  methods[2].selector = @selector(getListener);
  methods[3].selector = @selector(getImageData);
  methods[4].selector = @selector(getDownloadRequest);
  methods[5].selector = @selector(start);
  methods[6].selector = @selector(cancel);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mUrl_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mListener_", "LAPShutterbugDownloader_ShutterbugDownloaderListener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mImageData_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mDownloadRequest_", "LAPDownloadRequest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "TIMEOUT", "I", .constantValue.asInt = APShutterbugDownloader_TIMEOUT, 0x1a, -1, -1, -1, -1 },
    { "mCurrentTask_", "LADAsyncTask;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LAPShutterbugDownloader_ShutterbugDownloaderListener;LAPDownloadRequest;", "Lr/android/os/AsyncTask<Ljava/lang/Void;Ljava/lang/Void;Ljava/io/InputStream;>;", "LAPShutterbugDownloader_ShutterbugDownloaderListener;" };
  static const J2ObjcClassInfo _APShutterbugDownloader = { "ShutterbugDownloader", "com.applidium.shutterbug.downloader", ptrTable, methods, fields, 7, 0x1, 7, 6, -1, 2, -1, -1, -1 };
  return &_APShutterbugDownloader;
}

@end

void APShutterbugDownloader_initWithNSString_withAPShutterbugDownloader_ShutterbugDownloaderListener_withAPDownloadRequest_(APShutterbugDownloader *self, NSString *url, id<APShutterbugDownloader_ShutterbugDownloaderListener> listener, APDownloadRequest *downloadRequest) {
  NSObject_init(self);
  self->mUrl_ = url;
  self->mListener_ = listener;
  self->mDownloadRequest_ = downloadRequest;
}

APShutterbugDownloader *new_APShutterbugDownloader_initWithNSString_withAPShutterbugDownloader_ShutterbugDownloaderListener_withAPDownloadRequest_(NSString *url, id<APShutterbugDownloader_ShutterbugDownloaderListener> listener, APDownloadRequest *downloadRequest) {
  J2OBJC_NEW_IMPL(APShutterbugDownloader, initWithNSString_withAPShutterbugDownloader_ShutterbugDownloaderListener_withAPDownloadRequest_, url, listener, downloadRequest)
}

APShutterbugDownloader *create_APShutterbugDownloader_initWithNSString_withAPShutterbugDownloader_ShutterbugDownloaderListener_withAPDownloadRequest_(NSString *url, id<APShutterbugDownloader_ShutterbugDownloaderListener> listener, APDownloadRequest *downloadRequest) {
  J2OBJC_CREATE_IMPL(APShutterbugDownloader, initWithNSString_withAPShutterbugDownloader_ShutterbugDownloaderListener_withAPDownloadRequest_, url, listener, downloadRequest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(APShutterbugDownloader)

@implementation APShutterbugDownloader_ShutterbugDownloaderListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onImageDownloadSuccessWithAPShutterbugDownloader:withJavaIoInputStream:withAPDownloadRequest:);
  methods[1].selector = @selector(onImageDownloadFailureWithAPShutterbugDownloader:withAPDownloadRequest:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onImageDownloadSuccess", "LAPShutterbugDownloader;LJavaIoInputStream;LAPDownloadRequest;", "onImageDownloadFailure", "LAPShutterbugDownloader;LAPDownloadRequest;", "LAPShutterbugDownloader;" };
  static const J2ObjcClassInfo _APShutterbugDownloader_ShutterbugDownloaderListener = { "ShutterbugDownloaderListener", "com.applidium.shutterbug.downloader", ptrTable, methods, NULL, 7, 0x609, 2, 0, 4, -1, -1, -1, -1 };
  return &_APShutterbugDownloader_ShutterbugDownloaderListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(APShutterbugDownloader_ShutterbugDownloaderListener)

@implementation APShutterbugDownloader_1

- (instancetype)initWithAPShutterbugDownloader:(APShutterbugDownloader *)outer$ {
  APShutterbugDownloader_1_initWithAPShutterbugDownloader_(self, outer$);
  return self;
}

- (JavaIoInputStream *)doInBackgroundWithNSObjectArray:(IOSObjectArray *)params {
  @try {
    jlong t0 = JavaLangSystem_currentTimeMillis();
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"starting download ", this$0_->mUrl_)];
    JavaNetURL *imageUrl = new_JavaNetURL_initWithNSString_(this$0_->mUrl_);
    JavaNetHttpURLConnection *connection = (JavaNetHttpURLConnection *) cast_chk([imageUrl openConnection], [JavaNetHttpURLConnection class]);
    [((JavaNetHttpURLConnection *) nil_chk(connection)) setConnectTimeoutWithInt:APShutterbugDownloader_TIMEOUT];
    [connection setReadTimeoutWithInt:APShutterbugDownloader_TIMEOUT];
    [connection setInstanceFollowRedirectsWithBoolean:true];
    JavaIoInputStream *inputStream = [connection getInputStream];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$CJ", @"end download ", this$0_->mUrl_, ' ', (JavaLangSystem_currentTimeMillis() - t0))];
    return inputStream;
  }
  @catch (JavaIoIOException *e) {
    [e printStackTrace];
  }
  return nil;
}

- (void)onPostExecuteWithId:(JavaIoInputStream *)inputStream {
  if ([self isCancelled]) {
    inputStream = nil;
  }
  if (inputStream != nil) {
    [((id<APShutterbugDownloader_ShutterbugDownloaderListener>) nil_chk(this$0_->mListener_)) onImageDownloadSuccessWithAPShutterbugDownloader:this$0_ withJavaIoInputStream:inputStream withAPDownloadRequest:this$0_->mDownloadRequest_];
  }
  else {
    [((id<APShutterbugDownloader_ShutterbugDownloaderListener>) nil_chk(this$0_->mListener_)) onImageDownloadFailureWithAPShutterbugDownloader:this$0_ withAPDownloadRequest:this$0_->mDownloadRequest_];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x84, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithAPShutterbugDownloader:);
  methods[1].selector = @selector(doInBackgroundWithNSObjectArray:);
  methods[2].selector = @selector(onPostExecuteWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LAPShutterbugDownloader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAPShutterbugDownloader;", "doInBackground", "[LJavaLangVoid;", "onPostExecute", "LJavaIoInputStream;", "start", "Lr/android/os/AsyncTask<Ljava/lang/Void;Ljava/lang/Void;Ljava/io/InputStream;>;" };
  static const J2ObjcClassInfo _APShutterbugDownloader_1 = { "", "com.applidium.shutterbug.downloader", ptrTable, methods, fields, 7, 0x8010, 3, 1, 0, -1, 5, 6, -1 };
  return &_APShutterbugDownloader_1;
}

@end

void APShutterbugDownloader_1_initWithAPShutterbugDownloader_(APShutterbugDownloader_1 *self, APShutterbugDownloader *outer$) {
  self->this$0_ = outer$;
  ADAsyncTask_init(self);
}

APShutterbugDownloader_1 *new_APShutterbugDownloader_1_initWithAPShutterbugDownloader_(APShutterbugDownloader *outer$) {
  J2OBJC_NEW_IMPL(APShutterbugDownloader_1, initWithAPShutterbugDownloader_, outer$)
}

APShutterbugDownloader_1 *create_APShutterbugDownloader_1_initWithAPShutterbugDownloader_(APShutterbugDownloader *outer$) {
  J2OBJC_CREATE_IMPL(APShutterbugDownloader_1, initWithAPShutterbugDownloader_, outer$)
}
