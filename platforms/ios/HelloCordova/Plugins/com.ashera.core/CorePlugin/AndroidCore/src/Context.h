//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\content\Context.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Context")
#ifdef RESTRICT_Context
#define INCLUDE_ALL_Context 0
#else
#define INCLUDE_ALL_Context 1
#endif
#undef RESTRICT_Context

#if !defined (ADContext_) && (INCLUDE_ALL_Context || defined(INCLUDE_ADContext))
#define ADContext_

@class ADApplicationInfo;
@class ADAssetManager;
@class ADBroadcastReceiver;
@class ADContentResolver;
@class ADDrawable;
@class ADIntentFilter;
@class ADPackageManager;
@class ADResources;
@class IOSClass;
@class JavaIoFile;

@interface ADContext : NSObject

#pragma mark Public

- (instancetype)init;

- (ADContext *)getApplicationContext;

- (ADApplicationInfo *)getApplicationInfo;

- (ADAssetManager *)getAssets;

- (JavaIoFile *)getCacheDir;

- (ADContentResolver *)getContentResolver;

- (JavaIoFile *)getDirWithNSString:(NSString *)string
                           withInt:(jint)modePrivate;

- (ADDrawable *)getDrawableWithInt:(jint)resId;

- (JavaIoFile *)getExternalFilesDirWithId:(id)object;

- (ADPackageManager *)getPackageManager;

- (NSString *)getPackageName;

- (ADResources *)getResources;

- (id)getSystemServiceWithIOSClass:(IOSClass *)class1;

- (void)registerReceiverWithADBroadcastReceiver:(ADBroadcastReceiver *)telephonyReceiver
                             withADIntentFilter:(ADIntentFilter *)intentFilter;

- (void)unregisterReceiverWithADBroadcastReceiver:(ADBroadcastReceiver *)telephonyReceiver;

@end

J2OBJC_STATIC_INIT(ADContext)

inline jint ADContext_get_MODE_PRIVATE(void);
#define ADContext_MODE_PRIVATE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADContext, MODE_PRIVATE, jint)

inline IOSClass *ADContext_get_ACTIVITY_SERVICE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSClass *ADContext_ACTIVITY_SERVICE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADContext, ACTIVITY_SERVICE, IOSClass *)

FOUNDATION_EXPORT void ADContext_init(ADContext *self);

FOUNDATION_EXPORT ADContext *new_ADContext_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADContext *create_ADContext_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADContext)

@compatibility_alias RAndroidContentContext ADContext;

#endif

#pragma pop_macro("INCLUDE_ALL_Context")
