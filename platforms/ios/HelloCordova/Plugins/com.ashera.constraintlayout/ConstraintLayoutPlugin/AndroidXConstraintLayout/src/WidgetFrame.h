//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\state\WidgetFrame.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_WidgetFrame")
#ifdef RESTRICT_WidgetFrame
#define INCLUDE_ALL_WidgetFrame 0
#else
#define INCLUDE_ALL_WidgetFrame 1
#endif
#undef RESTRICT_WidgetFrame

#if !defined (ADXWidgetFrame_) && (INCLUDE_ALL_WidgetFrame || defined(INCLUDE_ADXWidgetFrame))
#define ADXWidgetFrame_

@class ADXCLElement;
@class ADXConstraintWidget;
@class ADXCustomVariable;
@class ADXTransition;
@class JavaLangStringBuilder;
@class JavaUtilHashMap;
@protocol JavaUtilSet;

/*!
 @brief Utility class to encapsulate layout of a widget
 */
@interface ADXWidgetFrame : NSObject {
 @public
  __unsafe_unretained ADXConstraintWidget *widget_;
  jint left_;
  jint top_;
  jint right_;
  jint bottom_;
  jfloat pivotX_;
  jfloat pivotY_;
  jfloat rotationX_;
  jfloat rotationY_;
  jfloat rotationZ_;
  jfloat translationX_;
  jfloat translationY_;
  jfloat translationZ_;
  jfloat scaleX_;
  jfloat scaleY_;
  jfloat alpha_;
  jfloat interpolatedPos_;
  jint visibility_;
  JavaUtilHashMap *mCustom_;
  NSString *name_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithADXConstraintWidget:(ADXConstraintWidget *)widget;

- (instancetype)initWithADXWidgetFrame:(ADXWidgetFrame *)frame;

- (void)addCustomColorWithNSString:(NSString *)name
                           withInt:(jint)color;

- (void)addCustomFloatWithNSString:(NSString *)name
                         withFloat:(jfloat)value;

- (jfloat)centerX;

- (jfloat)centerY;

- (ADXCustomVariable *)getCustomAttributeWithNSString:(NSString *)name;

- (id<JavaUtilSet>)getCustomAttributeNames;

- (jint)getCustomColorWithNSString:(NSString *)name;

- (jfloat)getCustomFloatWithNSString:(NSString *)name;

- (jint)height;

+ (void)interpolateWithInt:(jint)parentWidth
                   withInt:(jint)parentHeight
        withADXWidgetFrame:(ADXWidgetFrame *)frame
        withADXWidgetFrame:(ADXWidgetFrame *)start
        withADXWidgetFrame:(ADXWidgetFrame *)end
         withADXTransition:(ADXTransition *)transition
                 withFloat:(jfloat)progress;

- (jboolean)isDefaultTransform;

- (JavaLangStringBuilder *)serializeWithJavaLangStringBuilder:(JavaLangStringBuilder *)ret;

/*!
 @brief If true also send the phone orientation
 @param ret
 @param sendPhoneOrientation
 */
- (JavaLangStringBuilder *)serializeWithJavaLangStringBuilder:(JavaLangStringBuilder *)ret
                                                  withBoolean:(jboolean)sendPhoneOrientation;

- (void)setCustomAttributeWithNSString:(NSString *)name
                               withInt:(jint)type
                           withBoolean:(jboolean)value;

- (void)setCustomAttributeWithNSString:(NSString *)name
                               withInt:(jint)type
                             withFloat:(jfloat)value;

- (void)setCustomAttributeWithNSString:(NSString *)name
                               withInt:(jint)type
                               withInt:(jint)value;

- (void)setCustomAttributeWithNSString:(NSString *)name
                               withInt:(jint)type
                          withNSString:(NSString *)value;

- (jboolean)setValueWithNSString:(NSString *)key
                withADXCLElement:(ADXCLElement *)value;

- (ADXWidgetFrame *)update;

- (ADXWidgetFrame *)updateWithADXConstraintWidget:(ADXConstraintWidget *)widget;

- (void)updateAttributesWithADXWidgetFrame:(ADXWidgetFrame *)frame;

- (jint)width;

#pragma mark Package-Private

- (void)logvWithNSString:(NSString *)str;

- (void)parseCustomWithADXCLElement:(ADXCLElement *)custom;

- (void)printCustomAttributes;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXWidgetFrame)

J2OBJC_FIELD_SETTER(ADXWidgetFrame, mCustom_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ADXWidgetFrame, name_, NSString *)

inline jfloat ADXWidgetFrame_get_phone_orientation(void);
inline jfloat ADXWidgetFrame_set_phone_orientation(jfloat value);
inline jfloat *ADXWidgetFrame_getRef_phone_orientation(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jfloat ADXWidgetFrame_phone_orientation;
J2OBJC_STATIC_FIELD_PRIMITIVE(ADXWidgetFrame, phone_orientation, jfloat)

FOUNDATION_EXPORT void ADXWidgetFrame_init(ADXWidgetFrame *self);

FOUNDATION_EXPORT ADXWidgetFrame *new_ADXWidgetFrame_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXWidgetFrame *create_ADXWidgetFrame_init(void);

FOUNDATION_EXPORT void ADXWidgetFrame_initWithADXConstraintWidget_(ADXWidgetFrame *self, ADXConstraintWidget *widget);

FOUNDATION_EXPORT ADXWidgetFrame *new_ADXWidgetFrame_initWithADXConstraintWidget_(ADXConstraintWidget *widget) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXWidgetFrame *create_ADXWidgetFrame_initWithADXConstraintWidget_(ADXConstraintWidget *widget);

FOUNDATION_EXPORT void ADXWidgetFrame_initWithADXWidgetFrame_(ADXWidgetFrame *self, ADXWidgetFrame *frame);

FOUNDATION_EXPORT ADXWidgetFrame *new_ADXWidgetFrame_initWithADXWidgetFrame_(ADXWidgetFrame *frame) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXWidgetFrame *create_ADXWidgetFrame_initWithADXWidgetFrame_(ADXWidgetFrame *frame);

FOUNDATION_EXPORT void ADXWidgetFrame_interpolateWithInt_withInt_withADXWidgetFrame_withADXWidgetFrame_withADXWidgetFrame_withADXTransition_withFloat_(jint parentWidth, jint parentHeight, ADXWidgetFrame *frame, ADXWidgetFrame *start, ADXWidgetFrame *end, ADXTransition *transition, jfloat progress);

J2OBJC_TYPE_LITERAL_HEADER(ADXWidgetFrame)

@compatibility_alias AndroidxConstraintlayoutCoreStateWidgetFrame ADXWidgetFrame;

#endif

#pragma pop_macro("INCLUDE_ALL_WidgetFrame")
