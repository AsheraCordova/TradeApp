//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\model\RectM.java
//

#include "J2ObjC_source.h"
#include "RectM.h"


@implementation ASRectM

- (instancetype)initWithInt:(jint)x
                    withInt:(jint)y
                    withInt:(jint)width
                    withInt:(jint)height {
  ASRectM_initWithInt_withInt_withInt_withInt_(self, x, y, width, height);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "width_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "height_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IIII" };
  static const J2ObjcClassInfo _ASRectM = { "RectM", "com.ashera.model", ptrTable, methods, fields, 7, 0x1, 1, 4, -1, -1, -1, -1, -1 };
  return &_ASRectM;
}

@end

void ASRectM_initWithInt_withInt_withInt_withInt_(ASRectM *self, jint x, jint y, jint width, jint height) {
  NSObject_init(self);
  self->x_ = x;
  self->y_ = y;
  self->width_ = width;
  self->height_ = height;
}

ASRectM *new_ASRectM_initWithInt_withInt_withInt_withInt_(jint x, jint y, jint width, jint height) {
  J2OBJC_NEW_IMPL(ASRectM, initWithInt_withInt_withInt_withInt_, x, y, width, height)
}

ASRectM *create_ASRectM_initWithInt_withInt_withInt_withInt_(jint x, jint y, jint width, jint height) {
  J2OBJC_CREATE_IMPL(ASRectM, initWithInt_withInt_withInt_withInt_, x, y, width, height)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASRectM)
