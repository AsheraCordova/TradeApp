//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\WidgetAttributeValue.java
//

#include "J2ObjC_source.h"
#include "WidgetAttributeValue.h"
#include "WidgetAttributeValueFilter.h"


@interface ASWidgetAttributeValue () {
 @public
  NSString *value_;
  NSString *orientation_;
  NSString *minWidth_;
  NSString *minHeight_;
  NSString *maxWidth_;
  NSString *maxHeight_;
  id<ASWidgetAttributeValueFilter> filter_;
}

@end

J2OBJC_FIELD_SETTER(ASWidgetAttributeValue, value_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttributeValue, orientation_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttributeValue, minWidth_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttributeValue, minHeight_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttributeValue, maxWidth_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttributeValue, maxHeight_, NSString *)
J2OBJC_FIELD_SETTER(ASWidgetAttributeValue, filter_, id<ASWidgetAttributeValueFilter>)

@interface ASWidgetAttributeValue_1 : NSObject < ASWidgetAttributeValueFilter >

- (instancetype)init;

- (NSString *)filterWithNSString:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ASWidgetAttributeValue_1)

__attribute__((unused)) static void ASWidgetAttributeValue_1_init(ASWidgetAttributeValue_1 *self);

__attribute__((unused)) static ASWidgetAttributeValue_1 *new_ASWidgetAttributeValue_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ASWidgetAttributeValue_1 *create_ASWidgetAttributeValue_1_init(void);

@implementation ASWidgetAttributeValue

- (id<ASWidgetAttributeValueFilter>)getFilter {
  return filter_;
}

- (void)setFilterWithASWidgetAttributeValueFilter:(id<ASWidgetAttributeValueFilter>)filter {
  JreStrongAssign(&self->filter_, filter);
}

- (NSString *)getValue {
  return [((id<ASWidgetAttributeValueFilter>) nil_chk(filter_)) filterWithNSString:value_];
}

- (void)setValueWithNSString:(NSString *)value {
  JreStrongAssign(&self->value_, value);
}

- (NSString *)getOrientation {
  return orientation_;
}

- (void)setOrientationWithNSString:(NSString *)orientation {
  JreStrongAssign(&self->orientation_, orientation);
}

- (NSString *)getMinWidth {
  return minWidth_;
}

- (void)setMinWidthWithNSString:(NSString *)minWidth {
  JreStrongAssign(&self->minWidth_, minWidth);
}

- (NSString *)getMinHeight {
  return minHeight_;
}

- (void)setMinHeightWithNSString:(NSString *)minHeight {
  JreStrongAssign(&self->minHeight_, minHeight);
}

- (NSString *)getMaxWidth {
  return maxWidth_;
}

- (void)setMaxWidthWithNSString:(NSString *)maxWidth {
  JreStrongAssign(&self->maxWidth_, maxWidth);
}

- (NSString *)getMaxHeight {
  return maxHeight_;
}

- (void)setMaxHeightWithNSString:(NSString *)maxHeight {
  JreStrongAssign(&self->maxHeight_, maxHeight);
}

- (instancetype)initWithNSString:(NSString *)value {
  ASWidgetAttributeValue_initWithNSString_(self, value);
  return self;
}

- (instancetype)initWithNSString:(NSString *)value
                    withNSString:(NSString *)orientation
                    withNSString:(NSString *)minWidth
                    withNSString:(NSString *)minHeight
                    withNSString:(NSString *)maxWidth
                    withNSString:(NSString *)maxHeight {
  ASWidgetAttributeValue_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_(self, value, orientation, minWidth, minHeight, maxWidth, maxHeight);
  return self;
}

- (NSString *)description {
  return JreStrcat("$$$$$$$$$$$", value_, @" o:", orientation_, @" mw:", minWidth_, @" mh:", minHeight_, @" mxw:", maxWidth_, @" mxh:", maxHeight_);
}

- (void)dealloc {
  RELEASE_(value_);
  RELEASE_(orientation_);
  RELEASE_(minWidth_);
  RELEASE_(minHeight_);
  RELEASE_(maxWidth_);
  RELEASE_(maxHeight_);
  RELEASE_(filter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LASWidgetAttributeValueFilter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getFilter);
  methods[1].selector = @selector(setFilterWithASWidgetAttributeValueFilter:);
  methods[2].selector = @selector(getValue);
  methods[3].selector = @selector(setValueWithNSString:);
  methods[4].selector = @selector(getOrientation);
  methods[5].selector = @selector(setOrientationWithNSString:);
  methods[6].selector = @selector(getMinWidth);
  methods[7].selector = @selector(setMinWidthWithNSString:);
  methods[8].selector = @selector(getMinHeight);
  methods[9].selector = @selector(setMinHeightWithNSString:);
  methods[10].selector = @selector(getMaxWidth);
  methods[11].selector = @selector(setMaxWidthWithNSString:);
  methods[12].selector = @selector(getMaxHeight);
  methods[13].selector = @selector(setMaxHeightWithNSString:);
  methods[14].selector = @selector(initWithNSString:);
  methods[15].selector = @selector(initWithNSString:withNSString:withNSString:withNSString:withNSString:withNSString:);
  methods[16].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "orientation_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "minWidth_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "minHeight_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxWidth_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxHeight_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "filter_", "LASWidgetAttributeValueFilter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setFilter", "LASWidgetAttributeValueFilter;", "setValue", "LNSString;", "setOrientation", "setMinWidth", "setMinHeight", "setMaxWidth", "setMaxHeight", "LNSString;LNSString;LNSString;LNSString;LNSString;LNSString;", "toString" };
  static const J2ObjcClassInfo _ASWidgetAttributeValue = { "WidgetAttributeValue", "com.ashera.widget", ptrTable, methods, fields, 7, 0x1, 17, 7, -1, -1, -1, -1, -1 };
  return &_ASWidgetAttributeValue;
}

@end

void ASWidgetAttributeValue_initWithNSString_(ASWidgetAttributeValue *self, NSString *value) {
  NSObject_init(self);
  JreStrongAssign(&self->orientation_, @"default");
  JreStrongAssignAndConsume(&self->filter_, new_ASWidgetAttributeValue_1_init());
  JreStrongAssign(&self->value_, value);
}

ASWidgetAttributeValue *new_ASWidgetAttributeValue_initWithNSString_(NSString *value) {
  J2OBJC_NEW_IMPL(ASWidgetAttributeValue, initWithNSString_, value)
}

ASWidgetAttributeValue *create_ASWidgetAttributeValue_initWithNSString_(NSString *value) {
  J2OBJC_CREATE_IMPL(ASWidgetAttributeValue, initWithNSString_, value)
}

void ASWidgetAttributeValue_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_(ASWidgetAttributeValue *self, NSString *value, NSString *orientation, NSString *minWidth, NSString *minHeight, NSString *maxWidth, NSString *maxHeight) {
  NSObject_init(self);
  JreStrongAssign(&self->orientation_, @"default");
  JreStrongAssignAndConsume(&self->filter_, new_ASWidgetAttributeValue_1_init());
  JreStrongAssign(&self->value_, value);
  JreStrongAssign(&self->orientation_, orientation);
  JreStrongAssign(&self->minWidth_, minWidth);
  JreStrongAssign(&self->minHeight_, minHeight);
  JreStrongAssign(&self->maxWidth_, maxWidth);
  JreStrongAssign(&self->maxHeight_, maxHeight);
}

ASWidgetAttributeValue *new_ASWidgetAttributeValue_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_(NSString *value, NSString *orientation, NSString *minWidth, NSString *minHeight, NSString *maxWidth, NSString *maxHeight) {
  J2OBJC_NEW_IMPL(ASWidgetAttributeValue, initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_, value, orientation, minWidth, minHeight, maxWidth, maxHeight)
}

ASWidgetAttributeValue *create_ASWidgetAttributeValue_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_(NSString *value, NSString *orientation, NSString *minWidth, NSString *minHeight, NSString *maxWidth, NSString *maxHeight) {
  J2OBJC_CREATE_IMPL(ASWidgetAttributeValue, initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_, value, orientation, minWidth, minHeight, maxWidth, maxHeight)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASWidgetAttributeValue)

@implementation ASWidgetAttributeValue_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASWidgetAttributeValue_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)filterWithNSString:(NSString *)value {
  return value;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(filterWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "filter", "LNSString;", "LASWidgetAttributeValue;" };
  static const J2ObjcClassInfo _ASWidgetAttributeValue_1 = { "", "com.ashera.widget", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 2, -1, -1, -1, -1 };
  return &_ASWidgetAttributeValue_1;
}

@end

void ASWidgetAttributeValue_1_init(ASWidgetAttributeValue_1 *self) {
  NSObject_init(self);
}

ASWidgetAttributeValue_1 *new_ASWidgetAttributeValue_1_init() {
  J2OBJC_NEW_IMPL(ASWidgetAttributeValue_1, init)
}

ASWidgetAttributeValue_1 *create_ASWidgetAttributeValue_1_init() {
  J2OBJC_CREATE_IMPL(ASWidgetAttributeValue_1, init)
}
