//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\com\xwray\groupie\Section.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Section")
#ifdef RESTRICT_Section
#define INCLUDE_ALL_Section 0
#else
#define INCLUDE_ALL_Section 1
#endif
#undef RESTRICT_Section

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADXSection_) && (INCLUDE_ALL_Section || defined(INCLUDE_ADXSection))
#define ADXSection_

#define RESTRICT_NestedGroup 1
#define INCLUDE_ADXNestedGroup 1
#include "NestedGroup.h"

@class ADXDiffUtil_DiffResult;
@protocol ADXRVGroup;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

/*!
 @brief A group which has a list of contents and an optional header and footer.
 */
@interface ADXSection : ADXNestedGroup

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)children;

- (instancetype)initWithADXRVGroup:(id<ADXRVGroup>)header;

- (instancetype)initWithADXRVGroup:(id<ADXRVGroup>)header
            withJavaUtilCollection:(id<JavaUtilCollection>)children;

- (void)addWithInt:(jint)position
    withADXRVGroup:(id<ADXRVGroup>)group;

- (void)addWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (void)addAllWithInt:(jint)position
withJavaUtilCollection:(id<JavaUtilCollection>)groups;

/*!
 @brief Remove all existing body content.
 */
- (void)clear;

- (id<ADXRVGroup>)getGroupWithInt:(jint)position;

- (jint)getGroupCount;

/*!
 @brief Get the list of all groups in this section, wrapped in a new <code>ArrayList</code>.This
  does <strong>not include headers, footers or placeholders</strong>.
 @return The list of all groups in this section, wrapped in a new <code>ArrayList</code>
 */
- (id<JavaUtilList>)getGroups;

- (jint)getPositionWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)onItemInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                             withInt:(jint)position;

- (void)onItemRangeInsertedWithADXRVGroup:(id<ADXRVGroup>)group
                                  withInt:(jint)positionStart
                                  withInt:(jint)itemCount;

- (void)onItemRangeRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                                 withInt:(jint)positionStart
                                 withInt:(jint)itemCount;

- (void)onItemRemovedWithADXRVGroup:(id<ADXRVGroup>)group
                            withInt:(jint)position;

- (void)removeWithADXRVGroup:(id<ADXRVGroup>)group;

- (void)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (void)removeFooter;

- (void)removeHeader;

- (void)removePlaceholder;

- (void)replaceAllWithJavaUtilCollection:(id<JavaUtilCollection>)groups;

- (void)setFooterWithADXRVGroup:(id<ADXRVGroup>)footer;

- (void)setHeaderWithADXRVGroup:(id<ADXRVGroup>)header;

- (void)setHideWhenEmptyWithBoolean:(jboolean)hide;

/*!
 @brief Optional.Set a placeholder for when the section's body is empty.
 <p>
  If setHideWhenEmpty(true) is set, then the empty placeholder will not be shown.
 @param placeholder A placeholder to be shown when there is no body content
 */
- (void)setPlaceholderWithADXRVGroup:(id<ADXRVGroup>)placeholder;

/*!
 @brief Replace all existing body content and dispatch fine-grained change notifications to the
  parent using DiffUtil.
 <p>
  Item comparisons are made using:
  - Item.isSameAs(Item otherItem) (are items the same?)
  - Item.hasSameContentAs() (are contents the same?) 
 <p>
  If you don't customize getId() or isSameAs() and hasSameContentAs(), the default implementations will return false,
  meaning your Group will consider every update a complete change of everything.
  This will default detectMoves to true.
 - seealso: #update(Collection, boolean)
 @param newBodyGroups The new content of the section
 */
- (void)updateWithJavaUtilCollection:(id<JavaUtilCollection>)newBodyGroups;

/*!
 @brief Replace all existing body content and dispatch fine-grained change notifications to the
  parent using DiffUtil.
 <p>
  Item comparisons are made using:
  - Item.isSameAs(Item otherItem) (are items the same?)
  - Item.hasSameContentAs() (are contents the same?) 
 <p>
  If you don't customize getId() or isSameAs() and hasSameContentAs(), the default implementations will return false,
  meaning your Group will consider every update a complete change of everything.
 @param newBodyGroups The new content of the section
 @param detectMoves is passed to <code>DiffUtil.calculateDiff(DiffUtil.Callback, boolean)</code> . Set to false if you
                      don't want DiffUtil to detect moved items.
 */
- (void)updateWithJavaUtilCollection:(id<JavaUtilCollection>)newBodyGroups
                         withBoolean:(jboolean)detectMoves;

/*!
 @brief Overloaded version of update method in which you can pass your own DiffUtil.DiffResult
 @param newBodyGroups The new content of the section
 @param diffResult
 */
- (void)updateWithJavaUtilCollection:(id<JavaUtilCollection>)newBodyGroups
          withADXDiffUtil_DiffResult:(ADXDiffUtil_DiffResult *)diffResult;

#pragma mark Protected

/*!
 @brief Whether a section's contents are visually empty
 */
- (jboolean)isEmpty;

- (void)refreshEmptyState;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSection)

FOUNDATION_EXPORT void ADXSection_init(ADXSection *self);

FOUNDATION_EXPORT ADXSection *new_ADXSection_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXSection *create_ADXSection_init(void);

FOUNDATION_EXPORT void ADXSection_initWithADXRVGroup_(ADXSection *self, id<ADXRVGroup> header);

FOUNDATION_EXPORT ADXSection *new_ADXSection_initWithADXRVGroup_(id<ADXRVGroup> header) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXSection *create_ADXSection_initWithADXRVGroup_(id<ADXRVGroup> header);

FOUNDATION_EXPORT void ADXSection_initWithJavaUtilCollection_(ADXSection *self, id<JavaUtilCollection> children);

FOUNDATION_EXPORT ADXSection *new_ADXSection_initWithJavaUtilCollection_(id<JavaUtilCollection> children) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXSection *create_ADXSection_initWithJavaUtilCollection_(id<JavaUtilCollection> children);

FOUNDATION_EXPORT void ADXSection_initWithADXRVGroup_withJavaUtilCollection_(ADXSection *self, id<ADXRVGroup> header, id<JavaUtilCollection> children);

FOUNDATION_EXPORT ADXSection *new_ADXSection_initWithADXRVGroup_withJavaUtilCollection_(id<ADXRVGroup> header, id<JavaUtilCollection> children) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXSection *create_ADXSection_initWithADXRVGroup_withJavaUtilCollection_(id<ADXRVGroup> header, id<JavaUtilCollection> children);

J2OBJC_TYPE_LITERAL_HEADER(ADXSection)

@compatibility_alias ComXwrayGroupieSection ADXSection;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Section")
