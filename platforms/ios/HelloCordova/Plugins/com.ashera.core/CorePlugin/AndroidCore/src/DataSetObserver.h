//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\database\DataSetObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DataSetObserver")
#ifdef RESTRICT_DataSetObserver
#define INCLUDE_ALL_DataSetObserver 0
#else
#define INCLUDE_ALL_DataSetObserver 1
#endif
#undef RESTRICT_DataSetObserver

#if !defined (ADDataSetObserver_) && (INCLUDE_ALL_DataSetObserver || defined(INCLUDE_ADDataSetObserver))
#define ADDataSetObserver_

/*!
 @brief Receives call backs when a data set has been changed, or made invalid.The typically data sets
  that are observed are <code>Cursor</code>s or <code>android.widget.Adapter</code>s.
 DataSetObserver must be implemented by objects which are added to a DataSetObservable.
 */
@interface ADDataSetObserver : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief This method is called when the entire data set has changed,
  most likely through a call to <code>Cursor.requery()</code> on a <code>Cursor</code>.
 */
- (void)onChanged;

/*!
 @brief This method is called when the entire data becomes invalid,
  most likely through a call to <code>Cursor.deactivate()</code> or <code>Cursor.close()</code> on a 
 <code>Cursor</code>.
 */
- (void)onInvalidated;

@end

J2OBJC_EMPTY_STATIC_INIT(ADDataSetObserver)

FOUNDATION_EXPORT void ADDataSetObserver_init(ADDataSetObserver *self);

J2OBJC_TYPE_LITERAL_HEADER(ADDataSetObserver)

@compatibility_alias RAndroidDatabaseDataSetObserver ADDataSetObserver;

#endif

#pragma pop_macro("INCLUDE_ALL_DataSetObserver")
