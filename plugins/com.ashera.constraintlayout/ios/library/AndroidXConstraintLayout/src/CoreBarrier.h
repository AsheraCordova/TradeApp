//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\widgets\CoreBarrier.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoreBarrier")
#ifdef RESTRICT_CoreBarrier
#define INCLUDE_ALL_CoreBarrier 0
#else
#define INCLUDE_ALL_CoreBarrier 1
#endif
#undef RESTRICT_CoreBarrier

#if !defined (ADXCoreBarrier_) && (INCLUDE_ALL_CoreBarrier || defined(INCLUDE_ADXCoreBarrier))
#define ADXCoreBarrier_

#define RESTRICT_HelperWidget 1
#define INCLUDE_ADXHelperWidget 1
#include "HelperWidget.h"

@class ADXConstraintWidget;
@class ADXLinearSystem;
@class JavaUtilHashMap;

/*!
 @brief A Barrier takes multiple widgets
 */
@interface ADXCoreBarrier : ADXHelperWidget {
 @public
  jboolean resolved_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)debugName;

/*!
 @brief Add this widget to the solver
 @param system the solver we want to add the widget to
 @param optimize true if <code>Optimizer.OPTIMIZATION_GRAPH</code>  is on
 */
- (void)addToSolverWithADXLinearSystem:(ADXLinearSystem *)system
                           withBoolean:(jboolean)optimize;

- (jboolean)allowedInBarrier;

/*!
 @brief Find if this barrier supports gone widgets.
 @return true if this barrier supports gone widgets, otherwise false
 */
- (jboolean)allowsGoneWidget;

- (jboolean)allSolved;

- (void)copy__WithADXConstraintWidget:(ADXConstraintWidget *)src
                  withJavaUtilHashMap:(JavaUtilHashMap *)map OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Find if this barrier supports gone widgets.
 @return true if this barrier supports gone widgets, otherwise false
 */
- (jboolean)getAllowsGoneWidget;

- (jint)getBarrierType;

- (jint)getMargin;

- (jint)getOrientation;

- (jboolean)isResolvedHorizontally;

- (jboolean)isResolvedVertically;

- (void)setAllowsGoneWidgetWithBoolean:(jboolean)allowsGoneWidget;

- (void)setBarrierTypeWithInt:(jint)barrierType;

- (void)setMarginWithInt:(jint)margin;

- (NSString *)description;

#pragma mark Protected

- (void)markWidgets;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXCoreBarrier)

inline jint ADXCoreBarrier_get_LEFT(void);
#define ADXCoreBarrier_LEFT 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXCoreBarrier, LEFT, jint)

inline jint ADXCoreBarrier_get_RIGHT(void);
#define ADXCoreBarrier_RIGHT 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXCoreBarrier, RIGHT, jint)

inline jint ADXCoreBarrier_get_TOP(void);
#define ADXCoreBarrier_TOP 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXCoreBarrier, TOP, jint)

inline jint ADXCoreBarrier_get_BOTTOM(void);
#define ADXCoreBarrier_BOTTOM 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXCoreBarrier, BOTTOM, jint)

FOUNDATION_EXPORT void ADXCoreBarrier_init(ADXCoreBarrier *self);

FOUNDATION_EXPORT ADXCoreBarrier *new_ADXCoreBarrier_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCoreBarrier *create_ADXCoreBarrier_init(void);

FOUNDATION_EXPORT void ADXCoreBarrier_initWithNSString_(ADXCoreBarrier *self, NSString *debugName);

FOUNDATION_EXPORT ADXCoreBarrier *new_ADXCoreBarrier_initWithNSString_(NSString *debugName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXCoreBarrier *create_ADXCoreBarrier_initWithNSString_(NSString *debugName);

J2OBJC_TYPE_LITERAL_HEADER(ADXCoreBarrier)

@compatibility_alias AndroidxConstraintlayoutCoreWidgetsCoreBarrier ADXCoreBarrier;

#endif

#pragma pop_macro("INCLUDE_ALL_CoreBarrier")
