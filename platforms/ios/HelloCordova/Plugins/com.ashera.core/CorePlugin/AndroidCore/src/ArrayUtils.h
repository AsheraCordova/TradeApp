//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\com\android\internal\util\ArrayUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ArrayUtils")
#ifdef RESTRICT_ArrayUtils
#define INCLUDE_ALL_ArrayUtils 0
#else
#define INCLUDE_ALL_ArrayUtils 1
#endif
#undef RESTRICT_ArrayUtils

#if !defined (ADArrayUtils_) && (INCLUDE_ALL_ArrayUtils || defined(INCLUDE_ADArrayUtils))
#define ADArrayUtils_

@class IOSIntArray;

@interface ADArrayUtils : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Throws <code>ArrayIndexOutOfBoundsException</code> if the index is out of bounds.
 @param len length of the array. Must be non-negative
 @param index the index to check
 @throw ArrayIndexOutOfBoundsExceptionif the <code>index</code> is out of bounds of the array
 */
+ (void)checkBoundsWithInt:(jint)len
                   withInt:(jint)index;

+ (IOSIntArray *)newUnpaddedIntArrayWithInt:(jint)initialCapacity OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADArrayUtils)

FOUNDATION_EXPORT void ADArrayUtils_init(ADArrayUtils *self);

FOUNDATION_EXPORT ADArrayUtils *new_ADArrayUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADArrayUtils *create_ADArrayUtils_init(void);

FOUNDATION_EXPORT void ADArrayUtils_checkBoundsWithInt_withInt_(jint len, jint index);

FOUNDATION_EXPORT IOSIntArray *ADArrayUtils_newUnpaddedIntArrayWithInt_(jint initialCapacity);

J2OBJC_TYPE_LITERAL_HEADER(ADArrayUtils)

@compatibility_alias RComAndroidInternalUtilArrayUtils ADArrayUtils;

#endif

#pragma pop_macro("INCLUDE_ALL_ArrayUtils")
