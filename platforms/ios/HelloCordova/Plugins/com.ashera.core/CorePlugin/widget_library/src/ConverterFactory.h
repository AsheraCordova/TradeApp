//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\converter\ConverterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ConverterFactory")
#ifdef RESTRICT_ConverterFactory
#define INCLUDE_ALL_ConverterFactory 0
#else
#define INCLUDE_ALL_ConverterFactory 1
#endif
#undef RESTRICT_ConverterFactory

#if !defined (ASConverterFactory_) && (INCLUDE_ALL_ConverterFactory || defined(INCLUDE_ASConverterFactory))
#define ASConverterFactory_

@class IOSObjectArray;
@protocol ASAttributeCommand;
@protocol ASIConverter;

@interface ASConverterFactory : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<ASIConverter>)getWithNSString:(NSString *)localname;

+ (id<ASAttributeCommand>)getCommandConverterWithNSString:(NSString *)localname
                                        withNSObjectArray:(IOSObjectArray *)args;

+ (void)register__WithNSString:(NSString *)localname
              withASIConverter:(id<ASIConverter>)converter;

+ (void)registerCommandConverterWithASAttributeCommand:(id<ASAttributeCommand>)converter;

@end

J2OBJC_STATIC_INIT(ASConverterFactory)

FOUNDATION_EXPORT void ASConverterFactory_init(ASConverterFactory *self);

FOUNDATION_EXPORT ASConverterFactory *new_ASConverterFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASConverterFactory *create_ASConverterFactory_init(void);

FOUNDATION_EXPORT id<ASIConverter> ASConverterFactory_getWithNSString_(NSString *localname);

FOUNDATION_EXPORT void ASConverterFactory_register__WithNSString_withASIConverter_(NSString *localname, id<ASIConverter> converter);

FOUNDATION_EXPORT id<ASAttributeCommand> ASConverterFactory_getCommandConverterWithNSString_withNSObjectArray_(NSString *localname, IOSObjectArray *args);

FOUNDATION_EXPORT void ASConverterFactory_registerCommandConverterWithASAttributeCommand_(id<ASAttributeCommand> converter);

J2OBJC_TYPE_LITERAL_HEADER(ASConverterFactory)

@compatibility_alias ComAsheraConverterConverterFactory ASConverterFactory;

#endif

#pragma pop_macro("INCLUDE_ALL_ConverterFactory")
