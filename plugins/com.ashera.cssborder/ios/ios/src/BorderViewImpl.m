//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSCSSBorderPlugin\src\main\java\com\ashera\cssborder\BorderViewImpl.java
//

#include "BorderViewImpl.h"
#include "IAttributable.h"
#include "IFragment.h"
#include "ILifeCycleDecorator.h"
#include "IOSObjectArray.h"
#include "IWidget.h"
#include "J2ObjC_source.h"
#include "View.h"
#include "ViewImpl.h"
#include "WidgetAttribute.h"
#include "WidgetFactory.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/util/Map.h"

#include <UIKit/UIKit.h>
#include "ASUIView.h"


#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ASBorderViewImpl () {
 @public
  id<ASIWidget> w_;
  ASBorderViewImpl_BorderViewCommandBuilder *builder_;
  ASBorderViewImpl_BorderViewBean *bean_;
}

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget;

@end

J2OBJC_FIELD_SETTER(ASBorderViewImpl, w_, id<ASIWidget>)
J2OBJC_FIELD_SETTER(ASBorderViewImpl, builder_, ASBorderViewImpl_BorderViewCommandBuilder *)
J2OBJC_FIELD_SETTER(ASBorderViewImpl, bean_, ASBorderViewImpl_BorderViewBean *)

__attribute__((unused)) static void ASBorderViewImpl_initWithASIWidget_(ASBorderViewImpl *self, id<ASIWidget> widget);

__attribute__((unused)) static ASBorderViewImpl *new_ASBorderViewImpl_initWithASIWidget_(id<ASIWidget> widget) NS_RETURNS_RETAINED;

__attribute__((unused)) static ASBorderViewImpl *create_ASBorderViewImpl_initWithASIWidget_(id<ASIWidget> widget);

@interface ASBorderViewImpl_BorderViewCommandBuilder () {
 @public
  ASBorderViewImpl *this$0_;
}

@end

@interface ASBorderViewImpl_BorderViewBean () {
 @public
  ASBorderViewImpl *this$0_;
}

@end

NSString *ASBorderViewImpl_LOCAL_NAME = @"BorderView";

@implementation ASBorderViewImpl

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget {
  ASBorderViewImpl_initWithASIWidget_(self, widget);
  return self;
}

- (NSString *)getLocalName {
  return ASBorderViewImpl_LOCAL_NAME;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASBorderViewImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<ASIAttributable>)newInstanceWithASIWidget:(id<ASIWidget>)widget {
  ASBorderViewImpl *newIntance = new_ASBorderViewImpl_initWithASIWidget_(widget);
  return newIntance;
}

- (void)loadAttributesWithNSString:(NSString *)localName {
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopLeftRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopRightRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomLeftRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomRightRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
}

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w_)) asWidget], [ADView class]);
  id nativeWidget = [((id<ASIWidget>) nil_chk(w_)) asNativeWidget];
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"borderWidth", @"borderColor", @"borderStyle", @"borderDashWidth", @"borderDashSpacing", @"borderRadius", @"borderTopWidth", @"borderTopColor", @"borderTopStyle", @"borderTopDashWidth", @"borderTopDashSpacing", @"borderTopLeftRadius", @"borderTopRightRadius", @"borderBottomWidth", @"borderBottomColor", @"borderBottomStyle", @"borderBottomDashWidth", @"borderBottomDashSpacing", @"borderBottomLeftRadius", @"borderBottomRightRadius", @"borderLeftWidth", @"borderLeftColor", @"borderLeftStyle", @"borderLeftDashWidth", @"borderLeftDashSpacing", @"borderRightWidth", @"borderRightColor", @"borderRightStyle", @"borderRightDashWidth", @"borderRightDashSpacing" }, 30)) {
    case 0:
    {
    }
    break;
    case 1:
    {
    }
    break;
    case 2:
    {
    }
    break;
    case 3:
    {
    }
    break;
    case 4:
    {
    }
    break;
    case 5:
    {
    }
    break;
    case 6:
    {
    }
    break;
    case 7:
    {
    }
    break;
    case 8:
    {
    }
    break;
    case 9:
    {
    }
    break;
    case 10:
    {
    }
    break;
    case 11:
    {
    }
    break;
    case 12:
    {
    }
    break;
    case 13:
    {
    }
    break;
    case 14:
    {
    }
    break;
    case 15:
    {
    }
    break;
    case 16:
    {
    }
    break;
    case 17:
    {
    }
    break;
    case 18:
    {
    }
    break;
    case 19:
    {
    }
    break;
    case 20:
    {
    }
    break;
    case 21:
    {
    }
    break;
    case 22:
    {
    }
    break;
    case 23:
    {
    }
    break;
    case 24:
    {
    }
    break;
    case 25:
    {
    }
    break;
    case 26:
    {
    }
    break;
    case 27:
    {
    }
    break;
    case 28:
    {
    }
    break;
    case 29:
    {
    }
    break;
    default:
    break;
  }
}

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w_)) asWidget], [ADView class]);
  id nativeWidget = [((id<ASIWidget>) nil_chk(w_)) asNativeWidget];
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"borderTopWidth", @"borderTopColor", @"borderTopStyle", @"borderTopDashWidth", @"borderTopDashSpacing", @"borderTopLeftRadius", @"borderTopRightRadius", @"borderBottomWidth", @"borderBottomColor", @"borderBottomStyle", @"borderBottomDashWidth", @"borderBottomDashSpacing", @"borderBottomLeftRadius", @"borderBottomRightRadius", @"borderLeftWidth", @"borderLeftColor", @"borderLeftStyle", @"borderLeftDashWidth", @"borderLeftDashSpacing", @"borderRightWidth", @"borderRightColor", @"borderRightStyle", @"borderRightDashWidth", @"borderRightDashSpacing" }, 24)) {
    case 0:
    {
      return nil;
    }
    case 1:
    {
      return nil;
    }
    case 2:
    {
      return nil;
    }
    case 3:
    {
      return nil;
    }
    case 4:
    {
      return nil;
    }
    case 5:
    {
      return nil;
    }
    case 6:
    {
      return nil;
    }
    case 7:
    {
      return nil;
    }
    case 8:
    {
      return nil;
    }
    case 9:
    {
      return nil;
    }
    case 10:
    {
      return nil;
    }
    case 11:
    {
      return nil;
    }
    case 12:
    {
      return nil;
    }
    case 13:
    {
      return nil;
    }
    case 14:
    {
      return nil;
    }
    case 15:
    {
      return nil;
    }
    case 16:
    {
      return nil;
    }
    case 17:
    {
      return nil;
    }
    case 18:
    {
      return nil;
    }
    case 19:
    {
      return nil;
    }
    case 20:
    {
      return nil;
    }
    case 21:
    {
      return nil;
    }
    case 22:
    {
      return nil;
    }
    case 23:
    {
      return nil;
    }
  }
  return nil;
}

- (ASBorderViewImpl_BorderViewBean *)getBean {
  if (bean_ == nil) {
    bean_ = new_ASBorderViewImpl_BorderViewBean_initWithASBorderViewImpl_(self);
  }
  return bean_;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)getBuilder {
  if (builder_ == nil) {
    builder_ = new_ASBorderViewImpl_BorderViewCommandBuilder_initWithASBorderViewImpl_(self);
  }
  return builder_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASIAttributable;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewBean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASIWidget:);
  methods[1].selector = @selector(getLocalName);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(newInstanceWithASIWidget:);
  methods[4].selector = @selector(loadAttributesWithNSString:);
  methods[5].selector = @selector(setAttributeWithASWidgetAttribute:withNSString:withId:withASILifeCycleDecorator:);
  methods[6].selector = @selector(getAttributeWithASWidgetAttribute:withASILifeCycleDecorator:);
  methods[7].selector = @selector(getBean);
  methods[8].selector = @selector(getBuilder);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOCAL_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "w_", "LASIWidget;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "builder_", "LASBorderViewImpl_BorderViewCommandBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bean_", "LASBorderViewImpl_BorderViewBean;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASIWidget;", "newInstance", "loadAttributes", "LNSString;", "setAttribute", "LASWidgetAttribute;LNSString;LNSObject;LASILifeCycleDecorator;", "getAttribute", "LASWidgetAttribute;LASILifeCycleDecorator;", &ASBorderViewImpl_LOCAL_NAME, "LASBorderViewImpl_BorderViewCommandBuilder;LASBorderViewImpl_BorderViewBean;" };
  static const J2ObjcClassInfo _ASBorderViewImpl = { "BorderViewImpl", "com.ashera.cssborder", ptrTable, methods, fields, 7, 0x1, 9, 4, -1, 9, -1, -1, -1 };
  return &_ASBorderViewImpl;
}

@end

void ASBorderViewImpl_initWithASIWidget_(ASBorderViewImpl *self, id<ASIWidget> widget) {
  NSObject_init(self);
  self->w_ = widget;
}

ASBorderViewImpl *new_ASBorderViewImpl_initWithASIWidget_(id<ASIWidget> widget) {
  J2OBJC_NEW_IMPL(ASBorderViewImpl, initWithASIWidget_, widget)
}

ASBorderViewImpl *create_ASBorderViewImpl_initWithASIWidget_(id<ASIWidget> widget) {
  J2OBJC_CREATE_IMPL(ASBorderViewImpl, initWithASIWidget_, widget)
}

void ASBorderViewImpl_init(ASBorderViewImpl *self) {
  NSObject_init(self);
}

ASBorderViewImpl *new_ASBorderViewImpl_init() {
  J2OBJC_NEW_IMPL(ASBorderViewImpl, init)
}

ASBorderViewImpl *create_ASBorderViewImpl_init() {
  J2OBJC_CREATE_IMPL(ASBorderViewImpl, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASBorderViewImpl)

@implementation ASBorderViewImpl_BorderViewCommandBuilder

- (instancetype)initWithASBorderViewImpl:(ASBorderViewImpl *)outer$ {
  ASBorderViewImpl_BorderViewCommandBuilder_initWithASBorderViewImpl_(self, outer$);
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)executeWithBoolean:(jboolean)setter {
  if (setter) {
    [((id<ASIWidget>) nil_chk(this$0_->w_)) executeCommandWithJavaUtilMap:command_ withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_SETTER_METHOD];
    [((id<ASIFragment>) nil_chk([((id<ASIWidget>) nil_chk(this$0_->w_)) getFragment])) remeasure];
  }
  [((id<ASIWidget>) nil_chk(this$0_->w_)) executeCommandWithJavaUtilMap:command_ withASIWidget_CommandCallBack:nil withInt:ASIWidget_COMMAND_EXEC_GETTER_METHOD];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderColorWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderColor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderStyleWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderDashWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderDashWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderDashSpacingWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderDashSpacing"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderRadiusWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderTopWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderTopWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderTopWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderTopColor {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopColor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderTopColor {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopColor"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderTopColorWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopColor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderTopStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderTopStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopStyle"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderTopStyleWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderTopDashWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopDashWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderTopDashWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopDashWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderTopDashWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopDashWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderTopDashSpacing {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopDashSpacing"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderTopDashSpacing {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopDashSpacing"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderTopDashSpacingWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopDashSpacing"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderTopLeftRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopLeftRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderTopLeftRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopLeftRadius"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderTopLeftRadiusWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopLeftRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderTopRightRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopRightRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderTopRightRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopRightRadius"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderTopRightRadiusWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderTopRightRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderBottomWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderBottomWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderBottomWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderBottomColor {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomColor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderBottomColor {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomColor"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderBottomColorWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomColor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderBottomStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderBottomStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomStyle"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderBottomStyleWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderBottomDashWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomDashWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderBottomDashWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomDashWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderBottomDashWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomDashWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderBottomDashSpacing {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomDashSpacing"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderBottomDashSpacing {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomDashSpacing"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderBottomDashSpacingWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomDashSpacing"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderBottomLeftRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomLeftRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderBottomLeftRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomLeftRadius"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderBottomLeftRadiusWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomLeftRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderBottomRightRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomRightRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderBottomRightRadius {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomRightRadius"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderBottomRightRadiusWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderBottomRightRadius"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderLeftWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderLeftWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderLeftWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderLeftColor {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftColor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderLeftColor {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftColor"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderLeftColorWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftColor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderLeftStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderLeftStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftStyle"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderLeftStyleWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderLeftDashWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftDashWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderLeftDashWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftDashWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderLeftDashWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftDashWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderLeftDashSpacing {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftDashSpacing"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderLeftDashSpacing {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftDashSpacing"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderLeftDashSpacingWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderLeftDashSpacing"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderRightWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderRightWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderRightWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderRightColor {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightColor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderRightColor {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightColor"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderRightColorWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightColor"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderRightStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderRightStyle {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightStyle"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderRightStyleWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightStyle"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderRightDashWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightDashWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderRightDashWidth {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightDashWidth"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderRightDashWidthWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightDashWidth"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)tryGetBorderRightDashSpacing {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightDashSpacing"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"getter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderGet" withId:JavaLangInteger_valueOfWithInt_(++orderGet_)];
  return self;
}

- (id)getBorderRightDashSpacing {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightDashSpacing"];
  return [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:@"commandReturnValue"];
}

- (ASBorderViewImpl_BorderViewCommandBuilder *)setBorderRightDashSpacingWithNSString:(NSString *)value {
  id<JavaUtilMap> attrs = [self initCommandWithNSString:@"borderRightDashSpacing"];
  (void) [((id<JavaUtilMap>) nil_chk(attrs)) putWithId:@"type" withId:@"attribute"];
  (void) [attrs putWithId:@"setter" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  (void) [attrs putWithId:@"orderSet" withId:JavaLangInteger_valueOfWithInt_(++orderSet_)];
  (void) [attrs putWithId:@"value" withId:value];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 7, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 8, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 9, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 10, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 11, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 12, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 13, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 14, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 15, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 16, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 17, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 18, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 19, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 20, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 21, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 22, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 23, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 24, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 25, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 26, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 27, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 28, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 29, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 30, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 31, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 32, 4, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASBorderViewImpl_BorderViewCommandBuilder;", 0x1, 33, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASBorderViewImpl:);
  methods[1].selector = @selector(executeWithBoolean:);
  methods[2].selector = @selector(setBorderWidthWithNSString:);
  methods[3].selector = @selector(setBorderColorWithNSString:);
  methods[4].selector = @selector(setBorderStyleWithNSString:);
  methods[5].selector = @selector(setBorderDashWidthWithNSString:);
  methods[6].selector = @selector(setBorderDashSpacingWithNSString:);
  methods[7].selector = @selector(setBorderRadiusWithNSString:);
  methods[8].selector = @selector(tryGetBorderTopWidth);
  methods[9].selector = @selector(getBorderTopWidth);
  methods[10].selector = @selector(setBorderTopWidthWithNSString:);
  methods[11].selector = @selector(tryGetBorderTopColor);
  methods[12].selector = @selector(getBorderTopColor);
  methods[13].selector = @selector(setBorderTopColorWithNSString:);
  methods[14].selector = @selector(tryGetBorderTopStyle);
  methods[15].selector = @selector(getBorderTopStyle);
  methods[16].selector = @selector(setBorderTopStyleWithNSString:);
  methods[17].selector = @selector(tryGetBorderTopDashWidth);
  methods[18].selector = @selector(getBorderTopDashWidth);
  methods[19].selector = @selector(setBorderTopDashWidthWithNSString:);
  methods[20].selector = @selector(tryGetBorderTopDashSpacing);
  methods[21].selector = @selector(getBorderTopDashSpacing);
  methods[22].selector = @selector(setBorderTopDashSpacingWithNSString:);
  methods[23].selector = @selector(tryGetBorderTopLeftRadius);
  methods[24].selector = @selector(getBorderTopLeftRadius);
  methods[25].selector = @selector(setBorderTopLeftRadiusWithNSString:);
  methods[26].selector = @selector(tryGetBorderTopRightRadius);
  methods[27].selector = @selector(getBorderTopRightRadius);
  methods[28].selector = @selector(setBorderTopRightRadiusWithNSString:);
  methods[29].selector = @selector(tryGetBorderBottomWidth);
  methods[30].selector = @selector(getBorderBottomWidth);
  methods[31].selector = @selector(setBorderBottomWidthWithNSString:);
  methods[32].selector = @selector(tryGetBorderBottomColor);
  methods[33].selector = @selector(getBorderBottomColor);
  methods[34].selector = @selector(setBorderBottomColorWithNSString:);
  methods[35].selector = @selector(tryGetBorderBottomStyle);
  methods[36].selector = @selector(getBorderBottomStyle);
  methods[37].selector = @selector(setBorderBottomStyleWithNSString:);
  methods[38].selector = @selector(tryGetBorderBottomDashWidth);
  methods[39].selector = @selector(getBorderBottomDashWidth);
  methods[40].selector = @selector(setBorderBottomDashWidthWithNSString:);
  methods[41].selector = @selector(tryGetBorderBottomDashSpacing);
  methods[42].selector = @selector(getBorderBottomDashSpacing);
  methods[43].selector = @selector(setBorderBottomDashSpacingWithNSString:);
  methods[44].selector = @selector(tryGetBorderBottomLeftRadius);
  methods[45].selector = @selector(getBorderBottomLeftRadius);
  methods[46].selector = @selector(setBorderBottomLeftRadiusWithNSString:);
  methods[47].selector = @selector(tryGetBorderBottomRightRadius);
  methods[48].selector = @selector(getBorderBottomRightRadius);
  methods[49].selector = @selector(setBorderBottomRightRadiusWithNSString:);
  methods[50].selector = @selector(tryGetBorderLeftWidth);
  methods[51].selector = @selector(getBorderLeftWidth);
  methods[52].selector = @selector(setBorderLeftWidthWithNSString:);
  methods[53].selector = @selector(tryGetBorderLeftColor);
  methods[54].selector = @selector(getBorderLeftColor);
  methods[55].selector = @selector(setBorderLeftColorWithNSString:);
  methods[56].selector = @selector(tryGetBorderLeftStyle);
  methods[57].selector = @selector(getBorderLeftStyle);
  methods[58].selector = @selector(setBorderLeftStyleWithNSString:);
  methods[59].selector = @selector(tryGetBorderLeftDashWidth);
  methods[60].selector = @selector(getBorderLeftDashWidth);
  methods[61].selector = @selector(setBorderLeftDashWidthWithNSString:);
  methods[62].selector = @selector(tryGetBorderLeftDashSpacing);
  methods[63].selector = @selector(getBorderLeftDashSpacing);
  methods[64].selector = @selector(setBorderLeftDashSpacingWithNSString:);
  methods[65].selector = @selector(tryGetBorderRightWidth);
  methods[66].selector = @selector(getBorderRightWidth);
  methods[67].selector = @selector(setBorderRightWidthWithNSString:);
  methods[68].selector = @selector(tryGetBorderRightColor);
  methods[69].selector = @selector(getBorderRightColor);
  methods[70].selector = @selector(setBorderRightColorWithNSString:);
  methods[71].selector = @selector(tryGetBorderRightStyle);
  methods[72].selector = @selector(getBorderRightStyle);
  methods[73].selector = @selector(setBorderRightStyleWithNSString:);
  methods[74].selector = @selector(tryGetBorderRightDashWidth);
  methods[75].selector = @selector(getBorderRightDashWidth);
  methods[76].selector = @selector(setBorderRightDashWidthWithNSString:);
  methods[77].selector = @selector(tryGetBorderRightDashSpacing);
  methods[78].selector = @selector(getBorderRightDashSpacing);
  methods[79].selector = @selector(setBorderRightDashSpacingWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASBorderViewImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASBorderViewImpl;", "execute", "Z", "setBorderWidth", "LNSString;", "setBorderColor", "setBorderStyle", "setBorderDashWidth", "setBorderDashSpacing", "setBorderRadius", "setBorderTopWidth", "setBorderTopColor", "setBorderTopStyle", "setBorderTopDashWidth", "setBorderTopDashSpacing", "setBorderTopLeftRadius", "setBorderTopRightRadius", "setBorderBottomWidth", "setBorderBottomColor", "setBorderBottomStyle", "setBorderBottomDashWidth", "setBorderBottomDashSpacing", "setBorderBottomLeftRadius", "setBorderBottomRightRadius", "setBorderLeftWidth", "setBorderLeftColor", "setBorderLeftStyle", "setBorderLeftDashWidth", "setBorderLeftDashSpacing", "setBorderRightWidth", "setBorderRightColor", "setBorderRightStyle", "setBorderRightDashWidth", "setBorderRightDashSpacing", "Lcom/ashera/layout/ViewImpl$ViewCommandBuilder<Lcom/ashera/cssborder/BorderViewImpl$BorderViewCommandBuilder;>;" };
  static const J2ObjcClassInfo _ASBorderViewImpl_BorderViewCommandBuilder = { "BorderViewCommandBuilder", "com.ashera.cssborder", ptrTable, methods, fields, 7, 0x1, 80, 1, 0, -1, -1, 34, -1 };
  return &_ASBorderViewImpl_BorderViewCommandBuilder;
}

@end

void ASBorderViewImpl_BorderViewCommandBuilder_initWithASBorderViewImpl_(ASBorderViewImpl_BorderViewCommandBuilder *self, ASBorderViewImpl *outer$) {
  self->this$0_ = outer$;
  ASViewImpl_ViewCommandBuilder_init(self);
}

ASBorderViewImpl_BorderViewCommandBuilder *new_ASBorderViewImpl_BorderViewCommandBuilder_initWithASBorderViewImpl_(ASBorderViewImpl *outer$) {
  J2OBJC_NEW_IMPL(ASBorderViewImpl_BorderViewCommandBuilder, initWithASBorderViewImpl_, outer$)
}

ASBorderViewImpl_BorderViewCommandBuilder *create_ASBorderViewImpl_BorderViewCommandBuilder_initWithASBorderViewImpl_(ASBorderViewImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASBorderViewImpl_BorderViewCommandBuilder, initWithASBorderViewImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASBorderViewImpl_BorderViewCommandBuilder)

@implementation ASBorderViewImpl_BorderViewBean

- (instancetype)initWithASBorderViewImpl:(ASBorderViewImpl *)outer$ {
  ASBorderViewImpl_BorderViewBean_initWithASBorderViewImpl_(self, outer$);
  return self;
}

- (void)setBorderWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderWidthWithNSString:value])) executeWithBoolean:true];
}

- (void)setBorderColorWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderColorWithNSString:value])) executeWithBoolean:true];
}

- (void)setBorderStyleWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderStyleWithNSString:value])) executeWithBoolean:true];
}

- (void)setBorderDashWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderDashWidthWithNSString:value])) executeWithBoolean:true];
}

- (void)setBorderDashSpacingWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderDashSpacingWithNSString:value])) executeWithBoolean:true];
}

- (void)setBorderRadiusWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderRadiusWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderTopWidth {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderTopWidth])) executeWithBoolean:false])) getBorderTopWidth];
}

- (void)setBorderTopWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderTopWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderTopColor {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderTopColor])) executeWithBoolean:false])) getBorderTopColor];
}

- (void)setBorderTopColorWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderTopColorWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderTopStyle {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderTopStyle])) executeWithBoolean:false])) getBorderTopStyle];
}

- (void)setBorderTopStyleWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderTopStyleWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderTopDashWidth {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderTopDashWidth])) executeWithBoolean:false])) getBorderTopDashWidth];
}

- (void)setBorderTopDashWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderTopDashWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderTopDashSpacing {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderTopDashSpacing])) executeWithBoolean:false])) getBorderTopDashSpacing];
}

- (void)setBorderTopDashSpacingWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderTopDashSpacingWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderTopLeftRadius {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderTopLeftRadius])) executeWithBoolean:false])) getBorderTopLeftRadius];
}

- (void)setBorderTopLeftRadiusWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderTopLeftRadiusWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderTopRightRadius {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderTopRightRadius])) executeWithBoolean:false])) getBorderTopRightRadius];
}

- (void)setBorderTopRightRadiusWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderTopRightRadiusWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderBottomWidth {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderBottomWidth])) executeWithBoolean:false])) getBorderBottomWidth];
}

- (void)setBorderBottomWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderBottomWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderBottomColor {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderBottomColor])) executeWithBoolean:false])) getBorderBottomColor];
}

- (void)setBorderBottomColorWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderBottomColorWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderBottomStyle {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderBottomStyle])) executeWithBoolean:false])) getBorderBottomStyle];
}

- (void)setBorderBottomStyleWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderBottomStyleWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderBottomDashWidth {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderBottomDashWidth])) executeWithBoolean:false])) getBorderBottomDashWidth];
}

- (void)setBorderBottomDashWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderBottomDashWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderBottomDashSpacing {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderBottomDashSpacing])) executeWithBoolean:false])) getBorderBottomDashSpacing];
}

- (void)setBorderBottomDashSpacingWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderBottomDashSpacingWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderBottomLeftRadius {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderBottomLeftRadius])) executeWithBoolean:false])) getBorderBottomLeftRadius];
}

- (void)setBorderBottomLeftRadiusWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderBottomLeftRadiusWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderBottomRightRadius {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderBottomRightRadius])) executeWithBoolean:false])) getBorderBottomRightRadius];
}

- (void)setBorderBottomRightRadiusWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderBottomRightRadiusWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderLeftWidth {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderLeftWidth])) executeWithBoolean:false])) getBorderLeftWidth];
}

- (void)setBorderLeftWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderLeftWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderLeftColor {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderLeftColor])) executeWithBoolean:false])) getBorderLeftColor];
}

- (void)setBorderLeftColorWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderLeftColorWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderLeftStyle {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderLeftStyle])) executeWithBoolean:false])) getBorderLeftStyle];
}

- (void)setBorderLeftStyleWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderLeftStyleWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderLeftDashWidth {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderLeftDashWidth])) executeWithBoolean:false])) getBorderLeftDashWidth];
}

- (void)setBorderLeftDashWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderLeftDashWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderLeftDashSpacing {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderLeftDashSpacing])) executeWithBoolean:false])) getBorderLeftDashSpacing];
}

- (void)setBorderLeftDashSpacingWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderLeftDashSpacingWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderRightWidth {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderRightWidth])) executeWithBoolean:false])) getBorderRightWidth];
}

- (void)setBorderRightWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderRightWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderRightColor {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderRightColor])) executeWithBoolean:false])) getBorderRightColor];
}

- (void)setBorderRightColorWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderRightColorWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderRightStyle {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderRightStyle])) executeWithBoolean:false])) getBorderRightStyle];
}

- (void)setBorderRightStyleWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderRightStyleWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderRightDashWidth {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderRightDashWidth])) executeWithBoolean:false])) getBorderRightDashWidth];
}

- (void)setBorderRightDashWidthWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderRightDashWidthWithNSString:value])) executeWithBoolean:true];
}

- (id)getBorderRightDashSpacing {
  return [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) tryGetBorderRightDashSpacing])) executeWithBoolean:false])) getBorderRightDashSpacing];
}

- (void)setBorderRightDashSpacingWithNSString:(NSString *)value {
  (void) [((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([((ASBorderViewImpl_BorderViewCommandBuilder *) nil_chk([this$0_ getBuilder])) reset])) setBorderRightDashSpacingWithNSString:value])) executeWithBoolean:true];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 30, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASBorderViewImpl:);
  methods[1].selector = @selector(setBorderWidthWithNSString:);
  methods[2].selector = @selector(setBorderColorWithNSString:);
  methods[3].selector = @selector(setBorderStyleWithNSString:);
  methods[4].selector = @selector(setBorderDashWidthWithNSString:);
  methods[5].selector = @selector(setBorderDashSpacingWithNSString:);
  methods[6].selector = @selector(setBorderRadiusWithNSString:);
  methods[7].selector = @selector(getBorderTopWidth);
  methods[8].selector = @selector(setBorderTopWidthWithNSString:);
  methods[9].selector = @selector(getBorderTopColor);
  methods[10].selector = @selector(setBorderTopColorWithNSString:);
  methods[11].selector = @selector(getBorderTopStyle);
  methods[12].selector = @selector(setBorderTopStyleWithNSString:);
  methods[13].selector = @selector(getBorderTopDashWidth);
  methods[14].selector = @selector(setBorderTopDashWidthWithNSString:);
  methods[15].selector = @selector(getBorderTopDashSpacing);
  methods[16].selector = @selector(setBorderTopDashSpacingWithNSString:);
  methods[17].selector = @selector(getBorderTopLeftRadius);
  methods[18].selector = @selector(setBorderTopLeftRadiusWithNSString:);
  methods[19].selector = @selector(getBorderTopRightRadius);
  methods[20].selector = @selector(setBorderTopRightRadiusWithNSString:);
  methods[21].selector = @selector(getBorderBottomWidth);
  methods[22].selector = @selector(setBorderBottomWidthWithNSString:);
  methods[23].selector = @selector(getBorderBottomColor);
  methods[24].selector = @selector(setBorderBottomColorWithNSString:);
  methods[25].selector = @selector(getBorderBottomStyle);
  methods[26].selector = @selector(setBorderBottomStyleWithNSString:);
  methods[27].selector = @selector(getBorderBottomDashWidth);
  methods[28].selector = @selector(setBorderBottomDashWidthWithNSString:);
  methods[29].selector = @selector(getBorderBottomDashSpacing);
  methods[30].selector = @selector(setBorderBottomDashSpacingWithNSString:);
  methods[31].selector = @selector(getBorderBottomLeftRadius);
  methods[32].selector = @selector(setBorderBottomLeftRadiusWithNSString:);
  methods[33].selector = @selector(getBorderBottomRightRadius);
  methods[34].selector = @selector(setBorderBottomRightRadiusWithNSString:);
  methods[35].selector = @selector(getBorderLeftWidth);
  methods[36].selector = @selector(setBorderLeftWidthWithNSString:);
  methods[37].selector = @selector(getBorderLeftColor);
  methods[38].selector = @selector(setBorderLeftColorWithNSString:);
  methods[39].selector = @selector(getBorderLeftStyle);
  methods[40].selector = @selector(setBorderLeftStyleWithNSString:);
  methods[41].selector = @selector(getBorderLeftDashWidth);
  methods[42].selector = @selector(setBorderLeftDashWidthWithNSString:);
  methods[43].selector = @selector(getBorderLeftDashSpacing);
  methods[44].selector = @selector(setBorderLeftDashSpacingWithNSString:);
  methods[45].selector = @selector(getBorderRightWidth);
  methods[46].selector = @selector(setBorderRightWidthWithNSString:);
  methods[47].selector = @selector(getBorderRightColor);
  methods[48].selector = @selector(setBorderRightColorWithNSString:);
  methods[49].selector = @selector(getBorderRightStyle);
  methods[50].selector = @selector(setBorderRightStyleWithNSString:);
  methods[51].selector = @selector(getBorderRightDashWidth);
  methods[52].selector = @selector(setBorderRightDashWidthWithNSString:);
  methods[53].selector = @selector(getBorderRightDashSpacing);
  methods[54].selector = @selector(setBorderRightDashSpacingWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LASBorderViewImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASBorderViewImpl;", "setBorderWidth", "LNSString;", "setBorderColor", "setBorderStyle", "setBorderDashWidth", "setBorderDashSpacing", "setBorderRadius", "setBorderTopWidth", "setBorderTopColor", "setBorderTopStyle", "setBorderTopDashWidth", "setBorderTopDashSpacing", "setBorderTopLeftRadius", "setBorderTopRightRadius", "setBorderBottomWidth", "setBorderBottomColor", "setBorderBottomStyle", "setBorderBottomDashWidth", "setBorderBottomDashSpacing", "setBorderBottomLeftRadius", "setBorderBottomRightRadius", "setBorderLeftWidth", "setBorderLeftColor", "setBorderLeftStyle", "setBorderLeftDashWidth", "setBorderLeftDashSpacing", "setBorderRightWidth", "setBorderRightColor", "setBorderRightStyle", "setBorderRightDashWidth", "setBorderRightDashSpacing" };
  static const J2ObjcClassInfo _ASBorderViewImpl_BorderViewBean = { "BorderViewBean", "com.ashera.cssborder", ptrTable, methods, fields, 7, 0x1, 55, 1, 0, -1, -1, -1, -1 };
  return &_ASBorderViewImpl_BorderViewBean;
}

@end

void ASBorderViewImpl_BorderViewBean_initWithASBorderViewImpl_(ASBorderViewImpl_BorderViewBean *self, ASBorderViewImpl *outer$) {
  self->this$0_ = outer$;
  ASViewImpl_ViewBean_initWithASIWidget_(self, outer$->w_);
}

ASBorderViewImpl_BorderViewBean *new_ASBorderViewImpl_BorderViewBean_initWithASBorderViewImpl_(ASBorderViewImpl *outer$) {
  J2OBJC_NEW_IMPL(ASBorderViewImpl_BorderViewBean, initWithASBorderViewImpl_, outer$)
}

ASBorderViewImpl_BorderViewBean *create_ASBorderViewImpl_BorderViewBean_initWithASBorderViewImpl_(ASBorderViewImpl *outer$) {
  J2OBJC_CREATE_IMPL(ASBorderViewImpl_BorderViewBean, initWithASBorderViewImpl_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASBorderViewImpl_BorderViewBean)
