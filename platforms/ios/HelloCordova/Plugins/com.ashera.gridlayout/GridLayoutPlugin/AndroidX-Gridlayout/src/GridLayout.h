//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidX-Gridlayout\src\main\java\androidx\gridlayout\widget\GridLayout.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GridLayout")
#ifdef RESTRICT_GridLayout
#define INCLUDE_ALL_GridLayout 0
#else
#define INCLUDE_ALL_GridLayout 1
#endif
#undef RESTRICT_GridLayout

#if !defined (ADXGridLayout_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout))
#define ADXGridLayout_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup 1
#include "ViewGroup.h"

@class ADView;
@class ADViewGroup_LayoutParams;
@class ADXGridLayout_Alignment;
@class ADXGridLayout_Axis;
@class ADXGridLayout_LayoutParams;
@class ADXGridLayout_Printer;
@class ADXGridLayout_Spec;
@class IOSIntArray;
@class IOSObjectArray;

@interface ADXGridLayout : ADViewGroup {
 @public
  ADXGridLayout_Axis *mHorizontalAxis_;
  ADXGridLayout_Axis *mVerticalAxis_;
  jint mOrientation_;
  jboolean mUseDefaultMargins_;
  jint mAlignmentMode_;
  jint mDefaultGap_;
  jint mLastLayoutParamsHashCode_;
  ADXGridLayout_Printer *LOG_PRINTER_;
  ADXGridLayout_Printer *mPrinter_;
}

#pragma mark Public

- (instancetype)init;

- (jint)getAlignmentMode;

- (jint)getColumnCount;

- (jint)getOrientation;

- (jint)getRowCount;

- (jboolean)getUseDefaultMargins;

- (jboolean)isColumnOrderPreserved;

- (jboolean)isRowOrderPreserved;

- (void)requestLayout;

- (void)setAlignmentModeWithInt:(jint)alignmentMode;

- (void)setColumnCountWithInt:(jint)columnCount;

- (void)setColumnOrderPreservedWithBoolean:(jboolean)columnOrderPreserved;

- (void)setOrientationWithInt:(jint)orientation;

- (void)setRowCountWithInt:(jint)rowCount;

- (void)setRowOrderPreservedWithBoolean:(jboolean)rowOrderPreserved;

- (void)setUseDefaultMarginsWithBoolean:(jboolean)useDefaultMargins;

+ (ADXGridLayout_Spec *)specWithInt:(jint)start;

+ (ADXGridLayout_Spec *)specWithInt:(jint)start
        withADXGridLayout_Alignment:(ADXGridLayout_Alignment *)alignment;

+ (ADXGridLayout_Spec *)specWithInt:(jint)start
        withADXGridLayout_Alignment:(ADXGridLayout_Alignment *)alignment
                          withFloat:(jfloat)weight;

+ (ADXGridLayout_Spec *)specWithInt:(jint)start
                          withFloat:(jfloat)weight;

+ (ADXGridLayout_Spec *)specWithInt:(jint)start
                            withInt:(jint)size;

+ (ADXGridLayout_Spec *)specWithInt:(jint)start
                            withInt:(jint)size
        withADXGridLayout_Alignment:(ADXGridLayout_Alignment *)alignment;

+ (ADXGridLayout_Spec *)specWithInt:(jint)start
                            withInt:(jint)size
        withADXGridLayout_Alignment:(ADXGridLayout_Alignment *)alignment
                          withFloat:(jfloat)weight;

+ (ADXGridLayout_Spec *)specWithInt:(jint)start
                            withInt:(jint)size
                          withFloat:(jfloat)weight;

#pragma mark Protected

- (jboolean)checkLayoutParamsWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)p;

- (ADXGridLayout_LayoutParams *)generateDefaultLayoutParams;

- (ADXGridLayout_LayoutParams *)generateLayoutParamsWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)lp;

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)left
                    withInt:(jint)top
                    withInt:(jint)right
                    withInt:(jint)bottom;

- (void)onMeasureWithInt:(jint)widthSpec
                 withInt:(jint)heightSpec;

#pragma mark Package-Private

+ (jint)adjustWithInt:(jint)measureSpec
              withInt:(jint)delta;

+ (IOSObjectArray *)appendWithNSObjectArray:(IOSObjectArray *)a
                          withNSObjectArray:(IOSObjectArray *)b;

+ (jboolean)canStretchWithInt:(jint)flexibility;

- (ADXGridLayout_LayoutParams *)getLayoutParamsWithADView:(ADView *)c;

- (jint)getMargin1WithADView:(ADView *)view
                 withBoolean:(jboolean)horizontal
                 withBoolean:(jboolean)leading;

- (jint)getMeasurementIncludingMarginWithADView:(ADView *)c
                                    withBoolean:(jboolean)horizontal;

+ (void)handleInvalidParamsWithNSString:(NSString *)msg;

+ (jint)max2WithIntArray:(IOSIntArray *)a
                 withInt:(jint)valueIfEmpty;

@end

J2OBJC_STATIC_INIT(ADXGridLayout)

J2OBJC_FIELD_SETTER(ADXGridLayout, mHorizontalAxis_, ADXGridLayout_Axis *)
J2OBJC_FIELD_SETTER(ADXGridLayout, mVerticalAxis_, ADXGridLayout_Axis *)
J2OBJC_FIELD_SETTER(ADXGridLayout, LOG_PRINTER_, ADXGridLayout_Printer *)
J2OBJC_FIELD_SETTER(ADXGridLayout, mPrinter_, ADXGridLayout_Printer *)

inline jint ADXGridLayout_get_HORIZONTAL(void);
#define ADXGridLayout_HORIZONTAL 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, HORIZONTAL, jint)

inline jint ADXGridLayout_get_VERTICAL(void);
#define ADXGridLayout_VERTICAL 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, VERTICAL, jint)

inline jint ADXGridLayout_get_UNDEFINED(void);
#define ADXGridLayout_UNDEFINED ((jint) 0x80000000)
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, UNDEFINED, jint)

inline jint ADXGridLayout_get_ALIGN_BOUNDS(void);
#define ADXGridLayout_ALIGN_BOUNDS 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, ALIGN_BOUNDS, jint)

inline jint ADXGridLayout_get_ALIGN_MARGINS(void);
#define ADXGridLayout_ALIGN_MARGINS 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, ALIGN_MARGINS, jint)

inline jint ADXGridLayout_get_MAX_SIZE(void);
#define ADXGridLayout_MAX_SIZE 100000
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, MAX_SIZE, jint)

inline jint ADXGridLayout_get_DEFAULT_CONTAINER_MARGIN(void);
#define ADXGridLayout_DEFAULT_CONTAINER_MARGIN 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, DEFAULT_CONTAINER_MARGIN, jint)

inline jint ADXGridLayout_get_UNINITIALIZED_HASH(void);
#define ADXGridLayout_UNINITIALIZED_HASH 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, UNINITIALIZED_HASH, jint)

inline jboolean ADXGridLayout_get_DEFAULT_ORDER_PRESERVED(void);
#define ADXGridLayout_DEFAULT_ORDER_PRESERVED true
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, DEFAULT_ORDER_PRESERVED, jboolean)

inline ADXGridLayout_Alignment *ADXGridLayout_get_UNDEFINED_ALIGNMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_UNDEFINED_ALIGNMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, UNDEFINED_ALIGNMENT, ADXGridLayout_Alignment *)

inline ADXGridLayout_Alignment *ADXGridLayout_get_TOP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_TOP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, TOP, ADXGridLayout_Alignment *)

inline ADXGridLayout_Alignment *ADXGridLayout_get_BOTTOM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_BOTTOM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, BOTTOM, ADXGridLayout_Alignment *)

inline ADXGridLayout_Alignment *ADXGridLayout_get_START(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_START;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, START, ADXGridLayout_Alignment *)

inline ADXGridLayout_Alignment *ADXGridLayout_get_END(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_END;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, END, ADXGridLayout_Alignment *)

inline ADXGridLayout_Alignment *ADXGridLayout_get_LEFT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_LEFT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, LEFT, ADXGridLayout_Alignment *)

inline ADXGridLayout_Alignment *ADXGridLayout_get_RIGHT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_RIGHT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, RIGHT, ADXGridLayout_Alignment *)

inline ADXGridLayout_Alignment *ADXGridLayout_get_CENTER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_CENTER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, CENTER, ADXGridLayout_Alignment *)

inline ADXGridLayout_Alignment *ADXGridLayout_get_BASELINE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_BASELINE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, BASELINE, ADXGridLayout_Alignment *)

inline ADXGridLayout_Alignment *ADXGridLayout_get_FILL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Alignment *ADXGridLayout_FILL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout, FILL, ADXGridLayout_Alignment *)

inline jint ADXGridLayout_get_INFLEXIBLE(void);
#define ADXGridLayout_INFLEXIBLE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, INFLEXIBLE, jint)

inline jint ADXGridLayout_get_CAN_STRETCH(void);
#define ADXGridLayout_CAN_STRETCH 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout, CAN_STRETCH, jint)

FOUNDATION_EXPORT jint ADXGridLayout_max2WithIntArray_withInt_(IOSIntArray *a, jint valueIfEmpty);

FOUNDATION_EXPORT IOSObjectArray *ADXGridLayout_appendWithNSObjectArray_withNSObjectArray_(IOSObjectArray *a, IOSObjectArray *b);

FOUNDATION_EXPORT void ADXGridLayout_handleInvalidParamsWithNSString_(NSString *msg);

FOUNDATION_EXPORT jint ADXGridLayout_adjustWithInt_withInt_(jint measureSpec, jint delta);

FOUNDATION_EXPORT ADXGridLayout_Spec *ADXGridLayout_specWithInt_withInt_withADXGridLayout_Alignment_withFloat_(jint start, jint size, ADXGridLayout_Alignment *alignment, jfloat weight);

FOUNDATION_EXPORT ADXGridLayout_Spec *ADXGridLayout_specWithInt_withADXGridLayout_Alignment_withFloat_(jint start, ADXGridLayout_Alignment *alignment, jfloat weight);

FOUNDATION_EXPORT ADXGridLayout_Spec *ADXGridLayout_specWithInt_withInt_withFloat_(jint start, jint size, jfloat weight);

FOUNDATION_EXPORT ADXGridLayout_Spec *ADXGridLayout_specWithInt_withFloat_(jint start, jfloat weight);

FOUNDATION_EXPORT ADXGridLayout_Spec *ADXGridLayout_specWithInt_withInt_withADXGridLayout_Alignment_(jint start, jint size, ADXGridLayout_Alignment *alignment);

FOUNDATION_EXPORT ADXGridLayout_Spec *ADXGridLayout_specWithInt_withADXGridLayout_Alignment_(jint start, ADXGridLayout_Alignment *alignment);

FOUNDATION_EXPORT ADXGridLayout_Spec *ADXGridLayout_specWithInt_withInt_(jint start, jint size);

FOUNDATION_EXPORT ADXGridLayout_Spec *ADXGridLayout_specWithInt_(jint start);

FOUNDATION_EXPORT jboolean ADXGridLayout_canStretchWithInt_(jint flexibility);

FOUNDATION_EXPORT void ADXGridLayout_init(ADXGridLayout *self);

FOUNDATION_EXPORT ADXGridLayout *new_ADXGridLayout_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout *create_ADXGridLayout_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout)

@compatibility_alias AndroidxGridlayoutWidgetGridLayout ADXGridLayout;

#endif

#if !defined (ADXGridLayout_Axis_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_Axis))
#define ADXGridLayout_Axis_

@class ADXGridLayout;
@class ADXGridLayout_PackedMap;
@class IOSIntArray;
@class IOSObjectArray;

@interface ADXGridLayout_Axis : NSObject {
 @public
  jboolean horizontal_;
  jint definedCount_;
  ADXGridLayout_PackedMap *groupBounds_;
  jboolean groupBoundsValid_;
  ADXGridLayout_PackedMap *forwardLinks_;
  jboolean forwardLinksValid_;
  ADXGridLayout_PackedMap *backwardLinks_;
  jboolean backwardLinksValid_;
  IOSIntArray *leadingMargins_;
  jboolean leadingMarginsValid_;
  IOSIntArray *trailingMargins_;
  jboolean trailingMarginsValid_;
  IOSObjectArray *arcs_;
  jboolean arcsValid_;
  IOSIntArray *locations_;
  jboolean locationsValid_;
  jboolean hasWeights_;
  jboolean hasWeightsValid_;
  IOSIntArray *deltas_;
  jboolean orderPreserved_;
}

#pragma mark Public

- (IOSObjectArray *)getArcs;

- (jint)getCount;

- (IOSIntArray *)getDeltas;

- (ADXGridLayout_PackedMap *)getGroupBounds;

- (IOSIntArray *)getLeadingMargins;

- (IOSIntArray *)getLocations;

- (jint)getMeasureWithInt:(jint)measureSpec;

- (IOSIntArray *)getTrailingMargins;

- (void)invalidateStructure;

- (void)invalidateValues;

- (jboolean)isOrderPreserved;

- (void)layoutWithInt:(jint)size;

- (void)setCountWithInt:(jint)count;

- (void)setOrderPreservedWithBoolean:(jboolean)orderPreserved;

#pragma mark Package-Private

- (instancetype)initWithADXGridLayout:(ADXGridLayout *)outer$
                          withBoolean:(jboolean)horizontal;

- (IOSObjectArray *)groupArcsByFirstVertexWithADXGridLayout_ArcArray:(IOSObjectArray *)arcs;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGridLayout_Axis)

J2OBJC_FIELD_SETTER(ADXGridLayout_Axis, groupBounds_, ADXGridLayout_PackedMap *)
J2OBJC_FIELD_SETTER(ADXGridLayout_Axis, forwardLinks_, ADXGridLayout_PackedMap *)
J2OBJC_FIELD_SETTER(ADXGridLayout_Axis, backwardLinks_, ADXGridLayout_PackedMap *)
J2OBJC_FIELD_SETTER(ADXGridLayout_Axis, leadingMargins_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ADXGridLayout_Axis, trailingMargins_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ADXGridLayout_Axis, arcs_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ADXGridLayout_Axis, locations_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ADXGridLayout_Axis, deltas_, IOSIntArray *)

inline jint ADXGridLayout_Axis_get_NEW(void);
#define ADXGridLayout_Axis_NEW 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout_Axis, NEW, jint)

inline jint ADXGridLayout_Axis_get_PENDING(void);
#define ADXGridLayout_Axis_PENDING 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout_Axis, PENDING, jint)

inline jint ADXGridLayout_Axis_get_COMPLETE(void);
#define ADXGridLayout_Axis_COMPLETE 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout_Axis, COMPLETE, jint)

FOUNDATION_EXPORT void ADXGridLayout_Axis_initWithADXGridLayout_withBoolean_(ADXGridLayout_Axis *self, ADXGridLayout *outer$, jboolean horizontal);

FOUNDATION_EXPORT ADXGridLayout_Axis *new_ADXGridLayout_Axis_initWithADXGridLayout_withBoolean_(ADXGridLayout *outer$, jboolean horizontal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_Axis *create_ADXGridLayout_Axis_initWithADXGridLayout_withBoolean_(ADXGridLayout *outer$, jboolean horizontal);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_Axis)

#endif

#if !defined (ADXGridLayout_LayoutParams_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_LayoutParams))
#define ADXGridLayout_LayoutParams_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup_MarginLayoutParams 1
#include "ViewGroup.h"

@class ADViewGroup_LayoutParams;
@class ADXGridLayout_Interval;
@class ADXGridLayout_Spec;

@interface ADXGridLayout_LayoutParams : ADViewGroup_MarginLayoutParams {
 @public
  ADXGridLayout_Spec *rowSpec_;
  ADXGridLayout_Spec *columnSpec_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)params;

- (instancetype)initWithADXGridLayout_LayoutParams:(ADXGridLayout_LayoutParams *)source;

- (instancetype)initWithADXGridLayout_Spec:(ADXGridLayout_Spec *)rowSpec
                    withADXGridLayout_Spec:(ADXGridLayout_Spec *)columnSpec;

#pragma mark Package-Private

- (void)setColumnSpecSpanWithADXGridLayout_Interval:(ADXGridLayout_Interval *)span;

- (void)setRowSpecSpanWithADXGridLayout_Interval:(ADXGridLayout_Interval *)span;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithADViewGroup_MarginLayoutParams:(ADViewGroup_MarginLayoutParams *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0
                    withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ADXGridLayout_LayoutParams)

J2OBJC_FIELD_SETTER(ADXGridLayout_LayoutParams, rowSpec_, ADXGridLayout_Spec *)
J2OBJC_FIELD_SETTER(ADXGridLayout_LayoutParams, columnSpec_, ADXGridLayout_Spec *)

FOUNDATION_EXPORT void ADXGridLayout_LayoutParams_initWithADXGridLayout_Spec_withADXGridLayout_Spec_(ADXGridLayout_LayoutParams *self, ADXGridLayout_Spec *rowSpec, ADXGridLayout_Spec *columnSpec);

FOUNDATION_EXPORT ADXGridLayout_LayoutParams *new_ADXGridLayout_LayoutParams_initWithADXGridLayout_Spec_withADXGridLayout_Spec_(ADXGridLayout_Spec *rowSpec, ADXGridLayout_Spec *columnSpec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_LayoutParams *create_ADXGridLayout_LayoutParams_initWithADXGridLayout_Spec_withADXGridLayout_Spec_(ADXGridLayout_Spec *rowSpec, ADXGridLayout_Spec *columnSpec);

FOUNDATION_EXPORT void ADXGridLayout_LayoutParams_init(ADXGridLayout_LayoutParams *self);

FOUNDATION_EXPORT ADXGridLayout_LayoutParams *new_ADXGridLayout_LayoutParams_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_LayoutParams *create_ADXGridLayout_LayoutParams_init(void);

FOUNDATION_EXPORT void ADXGridLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADXGridLayout_LayoutParams *self, ADViewGroup_LayoutParams *params);

FOUNDATION_EXPORT ADXGridLayout_LayoutParams *new_ADXGridLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_LayoutParams *create_ADXGridLayout_LayoutParams_initWithADViewGroup_LayoutParams_(ADViewGroup_LayoutParams *params);

FOUNDATION_EXPORT void ADXGridLayout_LayoutParams_initWithADXGridLayout_LayoutParams_(ADXGridLayout_LayoutParams *self, ADXGridLayout_LayoutParams *source);

FOUNDATION_EXPORT ADXGridLayout_LayoutParams *new_ADXGridLayout_LayoutParams_initWithADXGridLayout_LayoutParams_(ADXGridLayout_LayoutParams *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_LayoutParams *create_ADXGridLayout_LayoutParams_initWithADXGridLayout_LayoutParams_(ADXGridLayout_LayoutParams *source);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_LayoutParams)

#endif

#if !defined (ADXGridLayout_Arc_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_Arc))
#define ADXGridLayout_Arc_

@class ADXGridLayout_Interval;
@class ADXGridLayout_MutableInt;

@interface ADXGridLayout_Arc : NSObject {
 @public
  ADXGridLayout_Interval *span_;
  ADXGridLayout_MutableInt *value_;
  jboolean valid_;
}

#pragma mark Public

- (instancetype)initWithADXGridLayout_Interval:(ADXGridLayout_Interval *)span
                  withADXGridLayout_MutableInt:(ADXGridLayout_MutableInt *)value;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGridLayout_Arc)

J2OBJC_FIELD_SETTER(ADXGridLayout_Arc, span_, ADXGridLayout_Interval *)
J2OBJC_FIELD_SETTER(ADXGridLayout_Arc, value_, ADXGridLayout_MutableInt *)

FOUNDATION_EXPORT void ADXGridLayout_Arc_initWithADXGridLayout_Interval_withADXGridLayout_MutableInt_(ADXGridLayout_Arc *self, ADXGridLayout_Interval *span, ADXGridLayout_MutableInt *value);

FOUNDATION_EXPORT ADXGridLayout_Arc *new_ADXGridLayout_Arc_initWithADXGridLayout_Interval_withADXGridLayout_MutableInt_(ADXGridLayout_Interval *span, ADXGridLayout_MutableInt *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_Arc *create_ADXGridLayout_Arc_initWithADXGridLayout_Interval_withADXGridLayout_MutableInt_(ADXGridLayout_Interval *span, ADXGridLayout_MutableInt *value);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_Arc)

#endif

#if !defined (ADXGridLayout_MutableInt_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_MutableInt))
#define ADXGridLayout_MutableInt_

@interface ADXGridLayout_MutableInt : NSObject {
 @public
  jint value_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)value;

- (void)reset;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGridLayout_MutableInt)

FOUNDATION_EXPORT void ADXGridLayout_MutableInt_init(ADXGridLayout_MutableInt *self);

FOUNDATION_EXPORT ADXGridLayout_MutableInt *new_ADXGridLayout_MutableInt_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_MutableInt *create_ADXGridLayout_MutableInt_init(void);

FOUNDATION_EXPORT void ADXGridLayout_MutableInt_initWithInt_(ADXGridLayout_MutableInt *self, jint value);

FOUNDATION_EXPORT ADXGridLayout_MutableInt *new_ADXGridLayout_MutableInt_initWithInt_(jint value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_MutableInt *create_ADXGridLayout_MutableInt_initWithInt_(jint value);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_MutableInt)

#endif

#if !defined (ADXGridLayout_Assoc_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_Assoc))
#define ADXGridLayout_Assoc_

#define RESTRICT_JavaUtilArrayList 1
#define INCLUDE_JavaUtilArrayList 1
#include "java/util/ArrayList.h"

@class ADPair;
@class ADXGridLayout_PackedMap;
@class IOSClass;
@protocol JavaUtilCollection;

@interface ADXGridLayout_Assoc : JavaUtilArrayList

#pragma mark Public

- (ADPair *)getWithInt:(jint)arg0;

+ (ADXGridLayout_Assoc *)ofWithIOSClass:(IOSClass *)keyType
                           withIOSClass:(IOSClass *)valueType;

- (ADXGridLayout_PackedMap *)pack;

- (void)putWithId:(id)key
           withId:(id)value;

- (ADPair *)removeWithInt:(jint)arg0;

- (ADPair *)setWithInt:(jint)arg0
                withId:(ADPair *)arg1;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGridLayout_Assoc)

FOUNDATION_EXPORT ADXGridLayout_Assoc *ADXGridLayout_Assoc_ofWithIOSClass_withIOSClass_(IOSClass *keyType, IOSClass *valueType);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_Assoc)

#endif

#if !defined (ADXGridLayout_PackedMap_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_PackedMap))
#define ADXGridLayout_PackedMap_

@class IOSIntArray;
@class IOSObjectArray;

@interface ADXGridLayout_PackedMap : NSObject {
 @public
  IOSIntArray *index_;
  IOSObjectArray *keys_;
  IOSObjectArray *values_;
}

#pragma mark Public

- (id)getValueWithInt:(jint)i;

#pragma mark Package-Private

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)keys
                    withNSObjectArray:(IOSObjectArray *)values;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGridLayout_PackedMap)

J2OBJC_FIELD_SETTER(ADXGridLayout_PackedMap, index_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ADXGridLayout_PackedMap, keys_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ADXGridLayout_PackedMap, values_, IOSObjectArray *)

FOUNDATION_EXPORT void ADXGridLayout_PackedMap_initWithNSObjectArray_withNSObjectArray_(ADXGridLayout_PackedMap *self, IOSObjectArray *keys, IOSObjectArray *values);

FOUNDATION_EXPORT ADXGridLayout_PackedMap *new_ADXGridLayout_PackedMap_initWithNSObjectArray_withNSObjectArray_(IOSObjectArray *keys, IOSObjectArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_PackedMap *create_ADXGridLayout_PackedMap_initWithNSObjectArray_withNSObjectArray_(IOSObjectArray *keys, IOSObjectArray *values);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_PackedMap)

#endif

#if !defined (ADXGridLayout_Bounds_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_Bounds))
#define ADXGridLayout_Bounds_

@class ADView;
@class ADXGridLayout;
@class ADXGridLayout_Alignment;
@class ADXGridLayout_Axis;
@class ADXGridLayout_Spec;

@interface ADXGridLayout_Bounds : NSObject {
 @public
  jint before_;
  jint after_;
  jint flexibility_;
}

#pragma mark Public

- (NSString *)description;

#pragma mark Protected

- (jint)getOffsetWithADXGridLayout:(ADXGridLayout *)gl
                        withADView:(ADView *)c
       withADXGridLayout_Alignment:(ADXGridLayout_Alignment *)a
                           withInt:(jint)size
                       withBoolean:(jboolean)horizontal;

- (void)includeWithADXGridLayout:(ADXGridLayout *)gl
                      withADView:(ADView *)c
          withADXGridLayout_Spec:(ADXGridLayout_Spec *)spec
          withADXGridLayout_Axis:(ADXGridLayout_Axis *)axis
                         withInt:(jint)size;

- (void)includeWithInt:(jint)before
               withInt:(jint)after;

- (void)reset;

- (jint)sizeWithBoolean:(jboolean)min;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGridLayout_Bounds)

FOUNDATION_EXPORT void ADXGridLayout_Bounds_init(ADXGridLayout_Bounds *self);

FOUNDATION_EXPORT ADXGridLayout_Bounds *new_ADXGridLayout_Bounds_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_Bounds *create_ADXGridLayout_Bounds_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_Bounds)

#endif

#if !defined (ADXGridLayout_Interval_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_Interval))
#define ADXGridLayout_Interval_

@interface ADXGridLayout_Interval : NSObject {
 @public
  jint min_;
  jint max_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)min
                    withInt:(jint)max;

- (jboolean)isEqual:(id)that;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (ADXGridLayout_Interval *)inverse;

- (jint)size;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGridLayout_Interval)

FOUNDATION_EXPORT void ADXGridLayout_Interval_initWithInt_withInt_(ADXGridLayout_Interval *self, jint min, jint max);

FOUNDATION_EXPORT ADXGridLayout_Interval *new_ADXGridLayout_Interval_initWithInt_withInt_(jint min, jint max) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_Interval *create_ADXGridLayout_Interval_initWithInt_withInt_(jint min, jint max);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_Interval)

#endif

#if !defined (ADXGridLayout_Spec_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_Spec))
#define ADXGridLayout_Spec_

@class ADXGridLayout_Alignment;
@class ADXGridLayout_Interval;

@interface ADXGridLayout_Spec : NSObject {
 @public
  jboolean startDefined_;
  ADXGridLayout_Interval *span_;
  ADXGridLayout_Alignment *alignment_;
  jfloat weight_;
}

#pragma mark Public

- (jboolean)isEqual:(id)that;

- (ADXGridLayout_Alignment *)getAbsoluteAlignmentWithBoolean:(jboolean)horizontal;

- (NSUInteger)hash;

#pragma mark Package-Private

- (instancetype)initWithBoolean:(jboolean)startDefined
                        withInt:(jint)start
                        withInt:(jint)size
    withADXGridLayout_Alignment:(ADXGridLayout_Alignment *)alignment
                      withFloat:(jfloat)weight;

- (ADXGridLayout_Spec *)copyWriteAlignmentWithADXGridLayout_Alignment:(ADXGridLayout_Alignment *)alignment OBJC_METHOD_FAMILY_NONE;

- (ADXGridLayout_Spec *)copyWriteSpanWithADXGridLayout_Interval:(ADXGridLayout_Interval *)span OBJC_METHOD_FAMILY_NONE;

- (jint)getFlexibility;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ADXGridLayout_Spec)

J2OBJC_FIELD_SETTER(ADXGridLayout_Spec, span_, ADXGridLayout_Interval *)
J2OBJC_FIELD_SETTER(ADXGridLayout_Spec, alignment_, ADXGridLayout_Alignment *)

inline ADXGridLayout_Spec *ADXGridLayout_Spec_get_UNDEFINED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADXGridLayout_Spec *ADXGridLayout_Spec_UNDEFINED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXGridLayout_Spec, UNDEFINED, ADXGridLayout_Spec *)

inline jfloat ADXGridLayout_Spec_get_DEFAULT_WEIGHT(void);
#define ADXGridLayout_Spec_DEFAULT_WEIGHT 0.0f
J2OBJC_STATIC_FIELD_CONSTANT(ADXGridLayout_Spec, DEFAULT_WEIGHT, jfloat)

FOUNDATION_EXPORT void ADXGridLayout_Spec_initWithBoolean_withInt_withInt_withADXGridLayout_Alignment_withFloat_(ADXGridLayout_Spec *self, jboolean startDefined, jint start, jint size, ADXGridLayout_Alignment *alignment, jfloat weight);

FOUNDATION_EXPORT ADXGridLayout_Spec *new_ADXGridLayout_Spec_initWithBoolean_withInt_withInt_withADXGridLayout_Alignment_withFloat_(jboolean startDefined, jint start, jint size, ADXGridLayout_Alignment *alignment, jfloat weight) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_Spec *create_ADXGridLayout_Spec_initWithBoolean_withInt_withInt_withADXGridLayout_Alignment_withFloat_(jboolean startDefined, jint start, jint size, ADXGridLayout_Alignment *alignment, jfloat weight);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_Spec)

#endif

#if !defined (ADXGridLayout_Alignment_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_Alignment))
#define ADXGridLayout_Alignment_

@class ADView;
@class ADXGridLayout_Bounds;

@interface ADXGridLayout_Alignment : NSObject

#pragma mark Public

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)init;

- (jint)getAlignmentValueWithADView:(ADView *)view
                            withInt:(jint)viewSize
                            withInt:(jint)mode;

- (ADXGridLayout_Bounds *)getBounds;

- (NSString *)getDebugString;

- (jint)getGravityOffsetWithADView:(ADView *)view
                           withInt:(jint)cellDelta;

- (jint)getSizeInCellWithADView:(ADView *)view
                        withInt:(jint)viewSize
                        withInt:(jint)cellSize;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGridLayout_Alignment)

FOUNDATION_EXPORT void ADXGridLayout_Alignment_init(ADXGridLayout_Alignment *self);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_Alignment)

#endif

#if !defined (ADXGridLayout_Printer_) && (INCLUDE_ALL_GridLayout || defined(INCLUDE_ADXGridLayout_Printer))
#define ADXGridLayout_Printer_

@class ADXGridLayout;

@interface ADXGridLayout_Printer : NSObject

#pragma mark Package-Private

- (instancetype)initWithADXGridLayout:(ADXGridLayout *)outer$;

- (void)printlnWithNSString:(NSString *)str;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXGridLayout_Printer)

FOUNDATION_EXPORT void ADXGridLayout_Printer_initWithADXGridLayout_(ADXGridLayout_Printer *self, ADXGridLayout *outer$);

FOUNDATION_EXPORT ADXGridLayout_Printer *new_ADXGridLayout_Printer_initWithADXGridLayout_(ADXGridLayout *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXGridLayout_Printer *create_ADXGridLayout_Printer_initWithADXGridLayout_(ADXGridLayout *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADXGridLayout_Printer)

#endif

#pragma pop_macro("INCLUDE_ALL_GridLayout")
