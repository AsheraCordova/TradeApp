//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\widgets\analyzer\DependencyGraph.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DependencyGraph")
#ifdef RESTRICT_DependencyGraph
#define INCLUDE_ALL_DependencyGraph 0
#else
#define INCLUDE_ALL_DependencyGraph 1
#endif
#undef RESTRICT_DependencyGraph

#if !defined (ADXDependencyGraph_) && (INCLUDE_ALL_DependencyGraph || defined(INCLUDE_ADXDependencyGraph))
#define ADXDependencyGraph_

@class ADXConstraintWidgetContainer;
@class ADXConstraintWidget_DimensionBehaviour;
@class JavaUtilArrayList;
@protocol ADXBasicMeasure_Measurer;

@interface ADXDependencyGraph : NSObject {
 @public
  JavaUtilArrayList *mGroups_;
}

#pragma mark Public

- (instancetype)initWithADXConstraintWidgetContainer:(ADXConstraintWidgetContainer *)container;

- (void)buildGraph;

- (void)buildGraphWithJavaUtilArrayList:(JavaUtilArrayList *)runs;

/*!
 @brief Find and mark terminal widgets (trailing widgets) -- they are the only
  ones we need to care for wrap_content checks
 @param horizontalBehavior
 @param verticalBehavior
 */
- (void)defineTerminalWidgetsWithADXConstraintWidget_DimensionBehaviour:(ADXConstraintWidget_DimensionBehaviour *)horizontalBehavior
                             withADXConstraintWidget_DimensionBehaviour:(ADXConstraintWidget_DimensionBehaviour *)verticalBehavior;

/*!
 @brief Try to measure the layout by solving the graph of constraints directly
 @param optimizeWrap use the wrap_content optimizer
 @return true if all widgets have been resolved
 */
- (jboolean)directMeasureWithBoolean:(jboolean)optimizeWrap;

- (jboolean)directMeasureSetupWithBoolean:(jboolean)optimizeWrap;

- (jboolean)directMeasureWithOrientationWithBoolean:(jboolean)optimizeWrap
                                            withInt:(jint)orientation;

/*!
 @brief Invalidate the graph of constraints
 */
- (void)invalidateGraph;

/*!
 @brief Mark the widgets as needing to be remeasured
 */
- (void)invalidateMeasures;

- (void)measureWidgets;

- (void)setMeasurerWithADXBasicMeasure_Measurer:(id<ADXBasicMeasure_Measurer>)measurer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXDependencyGraph)

J2OBJC_FIELD_SETTER(ADXDependencyGraph, mGroups_, JavaUtilArrayList *)

FOUNDATION_EXPORT void ADXDependencyGraph_initWithADXConstraintWidgetContainer_(ADXDependencyGraph *self, ADXConstraintWidgetContainer *container);

FOUNDATION_EXPORT ADXDependencyGraph *new_ADXDependencyGraph_initWithADXConstraintWidgetContainer_(ADXConstraintWidgetContainer *container) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXDependencyGraph *create_ADXDependencyGraph_initWithADXConstraintWidgetContainer_(ADXConstraintWidgetContainer *container);

J2OBJC_TYPE_LITERAL_HEADER(ADXDependencyGraph)

@compatibility_alias AndroidxConstraintlayoutCoreWidgetsAnalyzerDependencyGraph ADXDependencyGraph;

#endif

#pragma pop_macro("INCLUDE_ALL_DependencyGraph")
