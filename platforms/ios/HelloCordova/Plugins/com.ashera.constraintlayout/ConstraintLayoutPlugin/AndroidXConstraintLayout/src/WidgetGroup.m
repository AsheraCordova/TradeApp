//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\widgets\analyzer\WidgetGroup.java
//

#include "Chain.h"
#include "ConstraintAnchor.h"
#include "ConstraintWidget.h"
#include "ConstraintWidgetContainer.h"
#include "J2ObjC_source.h"
#include "LinearSystem.h"
#include "WidgetGroup.h"
#include "java/lang/Exception.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/ArrayList.h"

@class JavaUtilArrayList;


@interface ADXWidgetGroup () {
 @public
  jint moveTo_;
}

- (NSString *)getOrientationString;

- (jint)measureWrapWithInt:(jint)orientation
   withADXConstraintWidget:(ADXConstraintWidget *)widget;

- (jint)solverMeasureWithADXLinearSystem:(ADXLinearSystem *)system
                   withJavaUtilArrayList:(JavaUtilArrayList *)widgets
                                 withInt:(jint)orientation;

- (jboolean)containsWithADXConstraintWidget:(ADXConstraintWidget *)widget;

@end

inline jboolean ADXWidgetGroup_get_DEBUG(void);
#define ADXWidgetGroup_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(ADXWidgetGroup, DEBUG, jboolean)

__attribute__((unused)) static NSString *ADXWidgetGroup_getOrientationString(ADXWidgetGroup *self);

__attribute__((unused)) static jint ADXWidgetGroup_measureWrapWithInt_withADXConstraintWidget_(ADXWidgetGroup *self, jint orientation, ADXConstraintWidget *widget);

__attribute__((unused)) static jint ADXWidgetGroup_solverMeasureWithADXLinearSystem_withJavaUtilArrayList_withInt_(ADXWidgetGroup *self, ADXLinearSystem *system, JavaUtilArrayList *widgets, jint orientation);

__attribute__((unused)) static jboolean ADXWidgetGroup_containsWithADXConstraintWidget_(ADXWidgetGroup *self, ADXConstraintWidget *widget);

jint ADXWidgetGroup_count = 0;

@implementation ADXWidgetGroup

- (instancetype)initWithInt:(jint)orientation {
  ADXWidgetGroup_initWithInt_(self, orientation);
  return self;
}

- (jint)getOrientation {
  return orientation_;
}

- (jint)getId {
  return id__;
}

- (jboolean)addWithADXConstraintWidget:(ADXConstraintWidget *)widget {
  if ([((JavaUtilArrayList *) nil_chk(widgets_)) containsWithId:widget]) {
    return false;
  }
  [((JavaUtilArrayList *) nil_chk(widgets_)) addWithId:widget];
  return true;
}

- (void)setAuthoritativeWithBoolean:(jboolean)isAuthoritative {
  authoritative_ = isAuthoritative;
}

- (jboolean)isAuthoritative {
  return authoritative_;
}

- (NSString *)getOrientationString {
  return ADXWidgetGroup_getOrientationString(self);
}

- (NSString *)description {
  NSString *ret = JreStrcat("$$I$", ADXWidgetGroup_getOrientationString(self), @" [", id__, @"] <");
  for (ADXConstraintWidget * __strong widget in nil_chk(widgets_)) {
    JreStrAppend(&ret, "C$", ' ', [((ADXConstraintWidget *) nil_chk(widget)) getDebugName]);
  }
  JreStrAppend(&ret, "$", @" >");
  return ret;
}

- (void)moveToWithInt:(jint)orientation
   withADXWidgetGroup:(ADXWidgetGroup *)widgetGroup {
  for (ADXConstraintWidget * __strong widget in nil_chk(widgets_)) {
    [((ADXWidgetGroup *) nil_chk(widgetGroup)) addWithADXConstraintWidget:widget];
    if (orientation == ADXConstraintWidget_HORIZONTAL) {
      ((ADXConstraintWidget *) nil_chk(widget))->horizontalGroup_ = [widgetGroup getId];
    }
    else {
      ((ADXConstraintWidget *) nil_chk(widget))->verticalGroup_ = [widgetGroup getId];
    }
  }
  moveTo_ = ((ADXWidgetGroup *) nil_chk(widgetGroup))->id__;
}

- (void)clear {
  [((JavaUtilArrayList *) nil_chk(widgets_)) clear];
}

- (jint)measureWrapWithInt:(jint)orientation
   withADXConstraintWidget:(ADXConstraintWidget *)widget {
  return ADXWidgetGroup_measureWrapWithInt_withADXConstraintWidget_(self, orientation, widget);
}

- (jint)measureWrapWithADXLinearSystem:(ADXLinearSystem *)system
                               withInt:(jint)orientation {
  jint count = [((JavaUtilArrayList *) nil_chk(widgets_)) size];
  if (count == 0) {
    return 0;
  }
  return ADXWidgetGroup_solverMeasureWithADXLinearSystem_withJavaUtilArrayList_withInt_(self, system, widgets_, orientation);
}

- (jint)solverMeasureWithADXLinearSystem:(ADXLinearSystem *)system
                   withJavaUtilArrayList:(JavaUtilArrayList *)widgets
                                 withInt:(jint)orientation {
  return ADXWidgetGroup_solverMeasureWithADXLinearSystem_withJavaUtilArrayList_withInt_(self, system, widgets, orientation);
}

- (void)setOrientationWithInt:(jint)orientation {
  self->orientation_ = orientation;
}

- (void)apply {
  if (results_ == nil) {
    return;
  }
  if (!authoritative_) {
    return;
  }
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(results_)) size]; i++) {
    ADXWidgetGroup_MeasureResult *result = JreRetainedLocalValue([((JavaUtilArrayList *) nil_chk(results_)) getWithInt:i]);
    [((ADXWidgetGroup_MeasureResult *) nil_chk(result)) apply];
  }
}

- (jboolean)intersectWithWithADXWidgetGroup:(ADXWidgetGroup *)group {
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(widgets_)) size]; i++) {
    ADXConstraintWidget *widget = JreRetainedLocalValue([((JavaUtilArrayList *) nil_chk(widgets_)) getWithInt:i]);
    if (ADXWidgetGroup_containsWithADXConstraintWidget_(nil_chk(group), widget)) {
      return true;
    }
  }
  return false;
}

- (jboolean)containsWithADXConstraintWidget:(ADXConstraintWidget *)widget {
  return ADXWidgetGroup_containsWithADXConstraintWidget_(self, widget);
}

- (jint)size {
  return [((JavaUtilArrayList *) nil_chk(widgets_)) size];
}

- (void)cleanupWithJavaUtilArrayList:(JavaUtilArrayList *)dependencyLists {
  jint count = [((JavaUtilArrayList *) nil_chk(widgets_)) size];
  if (moveTo_ != -1 && count > 0) {
    for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(dependencyLists)) size]; i++) {
      ADXWidgetGroup *group = JreRetainedLocalValue([dependencyLists getWithInt:i]);
      if (moveTo_ == ((ADXWidgetGroup *) nil_chk(group))->id__) {
        [self moveToWithInt:orientation_ withADXWidgetGroup:group];
      }
    }
  }
  if (count == 0) {
    [((JavaUtilArrayList *) nil_chk(dependencyLists)) removeWithId:self];
    return;
  }
}

- (void)dealloc {
  RELEASE_(widgets_);
  RELEASE_(results_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 11, 12, -1, 13, -1, -1 },
    { NULL, "V", 0x1, 14, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 17, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, -1, 20, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(getOrientation);
  methods[2].selector = @selector(getId);
  methods[3].selector = @selector(addWithADXConstraintWidget:);
  methods[4].selector = @selector(setAuthoritativeWithBoolean:);
  methods[5].selector = @selector(isAuthoritative);
  methods[6].selector = @selector(getOrientationString);
  methods[7].selector = @selector(description);
  methods[8].selector = @selector(moveToWithInt:withADXWidgetGroup:);
  methods[9].selector = @selector(clear);
  methods[10].selector = @selector(measureWrapWithInt:withADXConstraintWidget:);
  methods[11].selector = @selector(measureWrapWithADXLinearSystem:withInt:);
  methods[12].selector = @selector(solverMeasureWithADXLinearSystem:withJavaUtilArrayList:withInt:);
  methods[13].selector = @selector(setOrientationWithInt:);
  methods[14].selector = @selector(apply);
  methods[15].selector = @selector(intersectWithWithADXWidgetGroup:);
  methods[16].selector = @selector(containsWithADXConstraintWidget:);
  methods[17].selector = @selector(size);
  methods[18].selector = @selector(cleanupWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEBUG", "Z", .constantValue.asBOOL = ADXWidgetGroup_DEBUG, 0x1a, -1, -1, -1, -1 },
    { "widgets_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x0, -1, -1, 21, -1 },
    { "count", "I", .constantValue.asLong = 0, 0x8, -1, 22, -1, -1 },
    { "id__", "I", .constantValue.asLong = 0, 0x0, 23, -1, -1, -1 },
    { "authoritative_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "orientation_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "results_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x0, -1, -1, 24, -1 },
    { "moveTo_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "add", "LADXConstraintWidget;", "setAuthoritative", "Z", "toString", "moveTo", "ILADXWidgetGroup;", "measureWrap", "ILADXConstraintWidget;", "LADXLinearSystem;I", "solverMeasure", "LADXLinearSystem;LJavaUtilArrayList;I", "(Landroidx/constraintlayout/core/LinearSystem;Ljava/util/ArrayList<Landroidx/constraintlayout/core/widgets/ConstraintWidget;>;I)I", "setOrientation", "intersectWith", "LADXWidgetGroup;", "contains", "cleanup", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Landroidx/constraintlayout/core/widgets/analyzer/WidgetGroup;>;)V", "Ljava/util/ArrayList<Landroidx/constraintlayout/core/widgets/ConstraintWidget;>;", &ADXWidgetGroup_count, "id", "Ljava/util/ArrayList<Landroidx/constraintlayout/core/widgets/analyzer/WidgetGroup$MeasureResult;>;", "LADXWidgetGroup_MeasureResult;" };
  static const J2ObjcClassInfo _ADXWidgetGroup = { "WidgetGroup", "androidx.constraintlayout.core.widgets.analyzer", ptrTable, methods, fields, 7, 0x1, 19, 8, -1, 25, -1, -1, -1 };
  return &_ADXWidgetGroup;
}

@end

void ADXWidgetGroup_initWithInt_(ADXWidgetGroup *self, jint orientation) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->widgets_, new_JavaUtilArrayList_init());
  self->id__ = -1;
  self->authoritative_ = false;
  self->orientation_ = ADXConstraintWidget_HORIZONTAL;
  JreStrongAssign(&self->results_, nil);
  self->moveTo_ = -1;
  self->id__ = ADXWidgetGroup_count++;
  self->orientation_ = orientation;
}

ADXWidgetGroup *new_ADXWidgetGroup_initWithInt_(jint orientation) {
  J2OBJC_NEW_IMPL(ADXWidgetGroup, initWithInt_, orientation)
}

ADXWidgetGroup *create_ADXWidgetGroup_initWithInt_(jint orientation) {
  J2OBJC_CREATE_IMPL(ADXWidgetGroup, initWithInt_, orientation)
}

NSString *ADXWidgetGroup_getOrientationString(ADXWidgetGroup *self) {
  if (self->orientation_ == ADXConstraintWidget_HORIZONTAL) {
    return @"Horizontal";
  }
  else if (self->orientation_ == ADXConstraintWidget_VERTICAL) {
    return @"Vertical";
  }
  else if (self->orientation_ == ADXConstraintWidget_BOTH) {
    return @"Both";
  }
  return @"Unknown";
}

jint ADXWidgetGroup_measureWrapWithInt_withADXConstraintWidget_(ADXWidgetGroup *self, jint orientation, ADXConstraintWidget *widget) {
  ADXConstraintWidget_DimensionBehaviour *behaviour = JreRetainedLocalValue([((ADXConstraintWidget *) nil_chk(widget)) getDimensionBehaviourWithInt:orientation]);
  if (behaviour == JreLoadEnum(ADXConstraintWidget_DimensionBehaviour, WRAP_CONTENT) || behaviour == JreLoadEnum(ADXConstraintWidget_DimensionBehaviour, MATCH_PARENT) || behaviour == JreLoadEnum(ADXConstraintWidget_DimensionBehaviour, FIXED)) {
    jint dimension;
    if (orientation == ADXConstraintWidget_HORIZONTAL) {
      dimension = [widget getWidth];
    }
    else {
      dimension = [widget getHeight];
    }
    return dimension;
  }
  return -1;
}

jint ADXWidgetGroup_solverMeasureWithADXLinearSystem_withJavaUtilArrayList_withInt_(ADXWidgetGroup *self, ADXLinearSystem *system, JavaUtilArrayList *widgets, jint orientation) {
  ADXConstraintWidgetContainer *container = (ADXConstraintWidgetContainer *) cast_chk([((ADXConstraintWidget *) nil_chk([((JavaUtilArrayList *) nil_chk(widgets)) getWithInt:0])) getParent], [ADXConstraintWidgetContainer class]);
  [((ADXLinearSystem *) nil_chk(system)) reset];
  jboolean prevDebug = ADXLinearSystem_FULL_DEBUG;
  [((ADXConstraintWidgetContainer *) nil_chk(container)) addToSolverWithADXLinearSystem:system withBoolean:false];
  for (jint i = 0; i < [widgets size]; i++) {
    ADXConstraintWidget *widget = JreRetainedLocalValue([widgets getWithInt:i]);
    [((ADXConstraintWidget *) nil_chk(widget)) addToSolverWithADXLinearSystem:system withBoolean:false];
  }
  if (orientation == ADXConstraintWidget_HORIZONTAL) {
    if (container->mHorizontalChainsSize_ > 0) {
      ADXChain_applyChainConstraintsWithADXConstraintWidgetContainer_withADXLinearSystem_withJavaUtilArrayList_withInt_(container, system, widgets, ADXConstraintWidget_HORIZONTAL);
    }
  }
  if (orientation == ADXConstraintWidget_VERTICAL) {
    if (container->mVerticalChainsSize_ > 0) {
      ADXChain_applyChainConstraintsWithADXConstraintWidgetContainer_withADXLinearSystem_withJavaUtilArrayList_withInt_(container, system, widgets, ADXConstraintWidget_VERTICAL);
    }
  }
  @try {
    [system minimize];
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
  }
  JreStrongAssignAndConsume(&self->results_, new_JavaUtilArrayList_init());
  for (jint i = 0; i < [widgets size]; i++) {
    ADXConstraintWidget *widget = JreRetainedLocalValue([widgets getWithInt:i]);
    ADXWidgetGroup_MeasureResult *result = create_ADXWidgetGroup_MeasureResult_initWithADXWidgetGroup_withADXConstraintWidget_withADXLinearSystem_withInt_(self, widget, system, orientation);
    [((JavaUtilArrayList *) nil_chk(self->results_)) addWithId:result];
  }
  if (orientation == ADXConstraintWidget_HORIZONTAL) {
    jint left = [system getObjectVariableValueWithId:container->mLeft_];
    jint right = [system getObjectVariableValueWithId:container->mRight_];
    [system reset];
    return right - left;
  }
  else {
    jint top = [system getObjectVariableValueWithId:container->mTop_];
    jint bottom = [system getObjectVariableValueWithId:container->mBottom_];
    [system reset];
    return bottom - top;
  }
}

jboolean ADXWidgetGroup_containsWithADXConstraintWidget_(ADXWidgetGroup *self, ADXConstraintWidget *widget) {
  return [((JavaUtilArrayList *) nil_chk(self->widgets_)) containsWithId:widget];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXWidgetGroup)

@implementation ADXWidgetGroup_MeasureResult

- (instancetype)initWithADXWidgetGroup:(ADXWidgetGroup *)outer$
               withADXConstraintWidget:(ADXConstraintWidget *)widget
                   withADXLinearSystem:(ADXLinearSystem *)system
                               withInt:(jint)orientation {
  ADXWidgetGroup_MeasureResult_initWithADXWidgetGroup_withADXConstraintWidget_withADXLinearSystem_withInt_(self, outer$, widget, system, orientation);
  return self;
}

- (void)apply {
  ADXConstraintWidget *widget = JreRetainedLocalValue([((JavaLangRefWeakReference *) nil_chk(widgetRef_)) get]);
  if (widget != nil) {
    [widget setFinalFrameWithInt:left_ withInt:top_ withInt:right_ withInt:bottom_ withInt:baseline_ withInt:orientation_];
  }
}

- (void)dealloc {
  RELEASE_(widgetRef_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXWidgetGroup:withADXConstraintWidget:withADXLinearSystem:withInt:);
  methods[1].selector = @selector(apply);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "widgetRef_", "LJavaLangRefWeakReference;", .constantValue.asLong = 0, 0x0, -1, -1, 1, -1 },
    { "left_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "top_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "right_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bottom_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "baseline_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "orientation_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXWidgetGroup;LADXConstraintWidget;LADXLinearSystem;I", "Ljava/lang/ref/WeakReference<Landroidx/constraintlayout/core/widgets/ConstraintWidget;>;", "LADXWidgetGroup;" };
  static const J2ObjcClassInfo _ADXWidgetGroup_MeasureResult = { "MeasureResult", "androidx.constraintlayout.core.widgets.analyzer", ptrTable, methods, fields, 7, 0x0, 2, 7, 2, -1, -1, -1, -1 };
  return &_ADXWidgetGroup_MeasureResult;
}

@end

void ADXWidgetGroup_MeasureResult_initWithADXWidgetGroup_withADXConstraintWidget_withADXLinearSystem_withInt_(ADXWidgetGroup_MeasureResult *self, ADXWidgetGroup *outer$, ADXConstraintWidget *widget, ADXLinearSystem *system, jint orientation) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->widgetRef_, new_JavaLangRefWeakReference_initWithId_(widget));
  self->left_ = [((ADXLinearSystem *) nil_chk(system)) getObjectVariableValueWithId:((ADXConstraintWidget *) nil_chk(widget))->mLeft_];
  self->top_ = [system getObjectVariableValueWithId:widget->mTop_];
  self->right_ = [system getObjectVariableValueWithId:widget->mRight_];
  self->bottom_ = [system getObjectVariableValueWithId:widget->mBottom_];
  self->baseline_ = [system getObjectVariableValueWithId:widget->mBaseline_];
  self->orientation_ = orientation;
}

ADXWidgetGroup_MeasureResult *new_ADXWidgetGroup_MeasureResult_initWithADXWidgetGroup_withADXConstraintWidget_withADXLinearSystem_withInt_(ADXWidgetGroup *outer$, ADXConstraintWidget *widget, ADXLinearSystem *system, jint orientation) {
  J2OBJC_NEW_IMPL(ADXWidgetGroup_MeasureResult, initWithADXWidgetGroup_withADXConstraintWidget_withADXLinearSystem_withInt_, outer$, widget, system, orientation)
}

ADXWidgetGroup_MeasureResult *create_ADXWidgetGroup_MeasureResult_initWithADXWidgetGroup_withADXConstraintWidget_withADXLinearSystem_withInt_(ADXWidgetGroup *outer$, ADXConstraintWidget *widget, ADXLinearSystem *system, jint orientation) {
  J2OBJC_CREATE_IMPL(ADXWidgetGroup_MeasureResult, initWithADXWidgetGroup_withADXConstraintWidget_withADXLinearSystem_withInt_, outer$, widget, system, orientation)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXWidgetGroup_MeasureResult)
