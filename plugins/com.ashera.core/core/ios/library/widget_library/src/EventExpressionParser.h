//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\EventExpressionParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EventExpressionParser")
#ifdef RESTRICT_EventExpressionParser
#define INCLUDE_ALL_EventExpressionParser 0
#else
#define INCLUDE_ALL_EventExpressionParser 1
#endif
#undef RESTRICT_EventExpressionParser

#if !defined (ASEventExpressionParser_) && (INCLUDE_ALL_EventExpressionParser || defined(INCLUDE_ASEventExpressionParser))
#define ASEventExpressionParser_

@class IOSObjectArray;
@protocol JavaUtilMap;

@interface ASEventExpressionParser : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

+ (id<JavaUtilMap>)parseEventExpressionWithNSString:(NSString *)expression;

+ (id<JavaUtilMap>)parseEventExpressionWithNSString:(NSString *)expression
                                    withJavaUtilMap:(id<JavaUtilMap>)eventMap;

@end

J2OBJC_STATIC_INIT(ASEventExpressionParser)

inline NSString *ASEventExpressionParser_get_KEY_EVENT_ARGS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASEventExpressionParser_KEY_EVENT_ARGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASEventExpressionParser, KEY_EVENT_ARGS, NSString *)

inline NSString *ASEventExpressionParser_get_KEY_SCRIPT_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASEventExpressionParser_KEY_SCRIPT_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASEventExpressionParser, KEY_SCRIPT_NAME, NSString *)

inline NSString *ASEventExpressionParser_get_KEY_COMMAND_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASEventExpressionParser_KEY_COMMAND_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASEventExpressionParser, KEY_COMMAND_NAME, NSString *)

inline NSString *ASEventExpressionParser_get_KEY_COMMAND_TYPE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASEventExpressionParser_KEY_COMMAND_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASEventExpressionParser, KEY_COMMAND_TYPE, NSString *)

inline NSString *ASEventExpressionParser_get_KEY_EVENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASEventExpressionParser_KEY_EVENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASEventExpressionParser, KEY_EVENT, NSString *)

FOUNDATION_EXPORT void ASEventExpressionParser_init(ASEventExpressionParser *self);

FOUNDATION_EXPORT ASEventExpressionParser *new_ASEventExpressionParser_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASEventExpressionParser *create_ASEventExpressionParser_init(void);

FOUNDATION_EXPORT id<JavaUtilMap> ASEventExpressionParser_parseEventExpressionWithNSString_withJavaUtilMap_(NSString *expression, id<JavaUtilMap> eventMap);

FOUNDATION_EXPORT id<JavaUtilMap> ASEventExpressionParser_parseEventExpressionWithNSString_(NSString *expression);

FOUNDATION_EXPORT void ASEventExpressionParser_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(ASEventExpressionParser)

@compatibility_alias ComAsheraWidgetEventExpressionParser ASEventExpressionParser;

#endif

#pragma pop_macro("INCLUDE_ALL_EventExpressionParser")
