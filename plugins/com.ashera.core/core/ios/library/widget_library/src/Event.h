//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\bus\Event.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Event")
#ifdef RESTRICT_Event
#define INCLUDE_ALL_Event 0
#else
#define INCLUDE_ALL_Event 1
#endif
#undef RESTRICT_Event

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ASEvent_) && (INCLUDE_ALL_Event || defined(INCLUDE_ASEvent))
#define ASEvent_

@class ASEvent_StandardEvents;

@interface ASEvent : NSObject

#pragma mark Public

- (instancetype)initWithASEvent_StandardEvents:(ASEvent_StandardEvents *)type;

- (instancetype)initWithASEvent_StandardEvents:(ASEvent_StandardEvents *)type
                                        withId:(id)additionalData;

- (id)getAdditionalData;

- (ASEvent_StandardEvents *)getType;

- (void)setAdditionalDataWithId:(id)additionalData;

- (void)setTypeWithASEvent_StandardEvents:(ASEvent_StandardEvents *)type;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASEvent)

FOUNDATION_EXPORT void ASEvent_initWithASEvent_StandardEvents_withId_(ASEvent *self, ASEvent_StandardEvents *type, id additionalData);

FOUNDATION_EXPORT ASEvent *new_ASEvent_initWithASEvent_StandardEvents_withId_(ASEvent_StandardEvents *type, id additionalData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASEvent *create_ASEvent_initWithASEvent_StandardEvents_withId_(ASEvent_StandardEvents *type, id additionalData);

FOUNDATION_EXPORT void ASEvent_initWithASEvent_StandardEvents_(ASEvent *self, ASEvent_StandardEvents *type);

FOUNDATION_EXPORT ASEvent *new_ASEvent_initWithASEvent_StandardEvents_(ASEvent_StandardEvents *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASEvent *create_ASEvent_initWithASEvent_StandardEvents_(ASEvent_StandardEvents *type);

J2OBJC_TYPE_LITERAL_HEADER(ASEvent)

@compatibility_alias ComAsheraWidgetBusEvent ASEvent;

#endif

#if !defined (ASEvent_StandardEvents_) && (INCLUDE_ALL_Event || defined(INCLUDE_ASEvent_StandardEvents))
#define ASEvent_StandardEvents_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ASEvent_StandardEvents_Enum) {
  ASEvent_StandardEvents_Enum_orientationChange = 0,
  ASEvent_StandardEvents_Enum_customEvent = 1,
  ASEvent_StandardEvents_Enum_initialise = 2,
  ASEvent_StandardEvents_Enum_orientationChangePostParentMeasure = 3,
  ASEvent_StandardEvents_Enum_postMeasure = 4,
  ASEvent_StandardEvents_Enum_preMeasure = 5,
  ASEvent_StandardEvents_Enum_dealloc = 6,
};

@interface ASEvent_StandardEvents : JavaLangEnum

#pragma mark Public

+ (ASEvent_StandardEvents *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ASEvent_StandardEvents_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ASEvent_StandardEvents)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ASEvent_StandardEvents *ASEvent_StandardEvents_values_[];

inline ASEvent_StandardEvents *ASEvent_StandardEvents_get_orientationChange(void);
J2OBJC_ENUM_CONSTANT(ASEvent_StandardEvents, orientationChange)

inline ASEvent_StandardEvents *ASEvent_StandardEvents_get_customEvent(void);
J2OBJC_ENUM_CONSTANT(ASEvent_StandardEvents, customEvent)

inline ASEvent_StandardEvents *ASEvent_StandardEvents_get_initialise(void);
J2OBJC_ENUM_CONSTANT(ASEvent_StandardEvents, initialise)

inline ASEvent_StandardEvents *ASEvent_StandardEvents_get_orientationChangePostParentMeasure(void);
J2OBJC_ENUM_CONSTANT(ASEvent_StandardEvents, orientationChangePostParentMeasure)

inline ASEvent_StandardEvents *ASEvent_StandardEvents_get_postMeasure(void);
J2OBJC_ENUM_CONSTANT(ASEvent_StandardEvents, postMeasure)

inline ASEvent_StandardEvents *ASEvent_StandardEvents_get_preMeasure(void);
J2OBJC_ENUM_CONSTANT(ASEvent_StandardEvents, preMeasure)

inline ASEvent_StandardEvents *ASEvent_StandardEvents_get_dealloc(void);
J2OBJC_ENUM_CONSTANT(ASEvent_StandardEvents, dealloc)

FOUNDATION_EXPORT IOSObjectArray *ASEvent_StandardEvents_values(void);

FOUNDATION_EXPORT ASEvent_StandardEvents *ASEvent_StandardEvents_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ASEvent_StandardEvents *ASEvent_StandardEvents_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ASEvent_StandardEvents)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Event")
