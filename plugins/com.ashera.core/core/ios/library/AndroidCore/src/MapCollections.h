//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\util\MapCollections.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MapCollections")
#ifdef RESTRICT_MapCollections
#define INCLUDE_ALL_MapCollections 0
#else
#define INCLUDE_ALL_MapCollections 1
#endif
#undef RESTRICT_MapCollections

#if !defined (ADMapCollections_) && (INCLUDE_ALL_MapCollections || defined(INCLUDE_ADMapCollections))
#define ADMapCollections_

@class ADMapCollections_EntrySet;
@class ADMapCollections_KeySet;
@class ADMapCollections_ValuesCollection;
@class IOSObjectArray;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/*!
 @brief Helper for writing standard Java collection interfaces to a data
  structure like <code>ArrayMap</code>.
 */
@interface ADMapCollections : NSObject {
 @public
  ADMapCollections_EntrySet *mEntrySet_;
  ADMapCollections_KeySet *mKeySet_;
  ADMapCollections_ValuesCollection *mValues_;
}

#pragma mark Public

+ (jboolean)containsAllHelperWithJavaUtilMap:(id<JavaUtilMap>)map
                      withJavaUtilCollection:(id<JavaUtilCollection>)collection;

+ (jboolean)equalsSetHelperWithJavaUtilSet:(id<JavaUtilSet>)set
                                    withId:(id)object;

- (id<JavaUtilSet>)getEntrySet;

- (id<JavaUtilSet>)getKeySet;

- (id<JavaUtilCollection>)getValues;

+ (jboolean)removeAllHelperWithJavaUtilMap:(id<JavaUtilMap>)map
                    withJavaUtilCollection:(id<JavaUtilCollection>)collection;

+ (jboolean)retainAllHelperWithJavaUtilMap:(id<JavaUtilMap>)map
                    withJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (IOSObjectArray *)toArrayHelperWithInt:(jint)offset;

- (IOSObjectArray *)toArrayHelperWithNSObjectArray:(IOSObjectArray *)array
                                           withInt:(jint)offset;

#pragma mark Protected

- (void)colClear;

- (id)colGetEntryWithInt:(jint)index
                 withInt:(jint)offset;

- (id<JavaUtilMap>)colGetMap;

- (jint)colGetSize;

- (jint)colIndexOfKeyWithId:(id)key;

- (jint)colIndexOfValueWithId:(id)key;

- (void)colPutWithId:(id)key
              withId:(id)value;

- (void)colRemoveAtWithInt:(jint)index;

- (id)colSetValueWithInt:(jint)index
                  withId:(id)value;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADMapCollections)

J2OBJC_FIELD_SETTER(ADMapCollections, mEntrySet_, ADMapCollections_EntrySet *)
J2OBJC_FIELD_SETTER(ADMapCollections, mKeySet_, ADMapCollections_KeySet *)
J2OBJC_FIELD_SETTER(ADMapCollections, mValues_, ADMapCollections_ValuesCollection *)

FOUNDATION_EXPORT void ADMapCollections_initPackagePrivate(ADMapCollections *self);

FOUNDATION_EXPORT jboolean ADMapCollections_containsAllHelperWithJavaUtilMap_withJavaUtilCollection_(id<JavaUtilMap> map, id<JavaUtilCollection> collection);

FOUNDATION_EXPORT jboolean ADMapCollections_removeAllHelperWithJavaUtilMap_withJavaUtilCollection_(id<JavaUtilMap> map, id<JavaUtilCollection> collection);

FOUNDATION_EXPORT jboolean ADMapCollections_retainAllHelperWithJavaUtilMap_withJavaUtilCollection_(id<JavaUtilMap> map, id<JavaUtilCollection> collection);

FOUNDATION_EXPORT jboolean ADMapCollections_equalsSetHelperWithJavaUtilSet_withId_(id<JavaUtilSet> set, id object);

J2OBJC_TYPE_LITERAL_HEADER(ADMapCollections)

@compatibility_alias RAndroidUtilMapCollections ADMapCollections;

#endif

#if !defined (ADMapCollections_ArrayIterator_) && (INCLUDE_ALL_MapCollections || defined(INCLUDE_ADMapCollections_ArrayIterator))
#define ADMapCollections_ArrayIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class ADMapCollections;
@protocol JavaUtilFunctionConsumer;

@interface ADMapCollections_ArrayIterator : NSObject < JavaUtilIterator > {
 @public
  jint mOffset_;
  jint mSize_;
  jint mIndex_;
  jboolean mCanRemove_;
}

#pragma mark Public

- (jboolean)hasNext;

- (id)next;

- (void)remove;

#pragma mark Package-Private

- (instancetype)initWithADMapCollections:(ADMapCollections *)outer$
                                 withInt:(jint)offset;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADMapCollections_ArrayIterator)

FOUNDATION_EXPORT void ADMapCollections_ArrayIterator_initWithADMapCollections_withInt_(ADMapCollections_ArrayIterator *self, ADMapCollections *outer$, jint offset);

FOUNDATION_EXPORT ADMapCollections_ArrayIterator *new_ADMapCollections_ArrayIterator_initWithADMapCollections_withInt_(ADMapCollections *outer$, jint offset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADMapCollections_ArrayIterator *create_ADMapCollections_ArrayIterator_initWithADMapCollections_withInt_(ADMapCollections *outer$, jint offset);

J2OBJC_TYPE_LITERAL_HEADER(ADMapCollections_ArrayIterator)

#endif

#if !defined (ADMapCollections_MapIterator_) && (INCLUDE_ALL_MapCollections || defined(INCLUDE_ADMapCollections_MapIterator))
#define ADMapCollections_MapIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

#define RESTRICT_JavaUtilMap 1
#define INCLUDE_JavaUtilMap_Entry 1
#include "java/util/Map.h"

@class ADMapCollections;
@protocol JavaUtilFunctionConsumer;

@interface ADMapCollections_MapIterator : NSObject < JavaUtilIterator, JavaUtilMap_Entry > {
 @public
  jint mEnd_;
  jint mIndex_;
  jboolean mEntryValid_;
}

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (id)getKey;

- (id)getValue;

- (NSUInteger)hash;

- (jboolean)hasNext;

- (id<JavaUtilMap_Entry>)next;

- (void)remove;

- (id)setValueWithId:(id)object;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithADMapCollections:(ADMapCollections *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADMapCollections_MapIterator)

FOUNDATION_EXPORT void ADMapCollections_MapIterator_initWithADMapCollections_(ADMapCollections_MapIterator *self, ADMapCollections *outer$);

FOUNDATION_EXPORT ADMapCollections_MapIterator *new_ADMapCollections_MapIterator_initWithADMapCollections_(ADMapCollections *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADMapCollections_MapIterator *create_ADMapCollections_MapIterator_initWithADMapCollections_(ADMapCollections *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADMapCollections_MapIterator)

#endif

#if !defined (ADMapCollections_EntrySet_) && (INCLUDE_ALL_MapCollections || defined(INCLUDE_ADMapCollections_EntrySet))
#define ADMapCollections_EntrySet_

#define RESTRICT_JavaUtilSet 1
#define INCLUDE_JavaUtilSet 1
#include "java/util/Set.h"

@class ADMapCollections;
@class IOSObjectArray;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilFunctionPredicate;
@protocol JavaUtilIterator;
@protocol JavaUtilMap_Entry;
@protocol JavaUtilSpliterator;
@protocol JavaUtilStreamStream;

@interface ADMapCollections_EntrySet : NSObject < JavaUtilSet >

#pragma mark Public

- (jboolean)addWithId:(id<JavaUtilMap_Entry>)object;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (void)clear;

- (jboolean)containsWithId:(id)o;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)object;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jint)size;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array;

#pragma mark Package-Private

- (instancetype)initWithADMapCollections:(ADMapCollections *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADMapCollections_EntrySet)

FOUNDATION_EXPORT void ADMapCollections_EntrySet_initWithADMapCollections_(ADMapCollections_EntrySet *self, ADMapCollections *outer$);

FOUNDATION_EXPORT ADMapCollections_EntrySet *new_ADMapCollections_EntrySet_initWithADMapCollections_(ADMapCollections *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADMapCollections_EntrySet *create_ADMapCollections_EntrySet_initWithADMapCollections_(ADMapCollections *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADMapCollections_EntrySet)

#endif

#if !defined (ADMapCollections_KeySet_) && (INCLUDE_ALL_MapCollections || defined(INCLUDE_ADMapCollections_KeySet))
#define ADMapCollections_KeySet_

#define RESTRICT_JavaUtilSet 1
#define INCLUDE_JavaUtilSet 1
#include "java/util/Set.h"

@class ADMapCollections;
@class IOSObjectArray;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilFunctionPredicate;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;
@protocol JavaUtilStreamStream;

@interface ADMapCollections_KeySet : NSObject < JavaUtilSet >

#pragma mark Public

- (jboolean)addWithId:(id)object;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (void)clear;

- (jboolean)containsWithId:(id)object;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)object;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jint)size;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array;

#pragma mark Package-Private

- (instancetype)initWithADMapCollections:(ADMapCollections *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADMapCollections_KeySet)

FOUNDATION_EXPORT void ADMapCollections_KeySet_initWithADMapCollections_(ADMapCollections_KeySet *self, ADMapCollections *outer$);

FOUNDATION_EXPORT ADMapCollections_KeySet *new_ADMapCollections_KeySet_initWithADMapCollections_(ADMapCollections *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADMapCollections_KeySet *create_ADMapCollections_KeySet_initWithADMapCollections_(ADMapCollections *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADMapCollections_KeySet)

#endif

#if !defined (ADMapCollections_ValuesCollection_) && (INCLUDE_ALL_MapCollections || defined(INCLUDE_ADMapCollections_ValuesCollection))
#define ADMapCollections_ValuesCollection_

#define RESTRICT_JavaUtilCollection 1
#define INCLUDE_JavaUtilCollection 1
#include "java/util/Collection.h"

@class ADMapCollections;
@class IOSObjectArray;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilFunctionPredicate;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;
@protocol JavaUtilStreamStream;

@interface ADMapCollections_ValuesCollection : NSObject < JavaUtilCollection >

#pragma mark Public

- (jboolean)addWithId:(id)object;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (void)clear;

- (jboolean)containsWithId:(id)object;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)object;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jint)size;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array;

#pragma mark Package-Private

- (instancetype)initWithADMapCollections:(ADMapCollections *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADMapCollections_ValuesCollection)

FOUNDATION_EXPORT void ADMapCollections_ValuesCollection_initWithADMapCollections_(ADMapCollections_ValuesCollection *self, ADMapCollections *outer$);

FOUNDATION_EXPORT ADMapCollections_ValuesCollection *new_ADMapCollections_ValuesCollection_initWithADMapCollections_(ADMapCollections *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADMapCollections_ValuesCollection *create_ADMapCollections_ValuesCollection_initWithADMapCollections_(ADMapCollections *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADMapCollections_ValuesCollection)

#endif

#pragma pop_macro("INCLUDE_ALL_MapCollections")
