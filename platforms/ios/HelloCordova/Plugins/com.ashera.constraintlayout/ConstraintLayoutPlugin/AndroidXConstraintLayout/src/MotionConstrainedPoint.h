//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\motion\MotionConstrainedPoint.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MotionConstrainedPoint")
#ifdef RESTRICT_MotionConstrainedPoint
#define INCLUDE_ALL_MotionConstrainedPoint 0
#else
#define INCLUDE_ALL_MotionConstrainedPoint 1
#endif
#undef RESTRICT_MotionConstrainedPoint

#if !defined (ADXMotionConstrainedPoint_) && (INCLUDE_ALL_MotionConstrainedPoint || defined(INCLUDE_ADXMotionConstrainedPoint))
#define ADXMotionConstrainedPoint_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class ADXCLRect;
@class ADXMotionWidget;
@class IOSBooleanArray;
@class IOSDoubleArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@class JavaUtilLinkedHashMap;

/*!
 @brief All the parameter it extracts from a ConstraintSet/View
 */
@interface ADXMotionConstrainedPoint : NSObject < JavaLangComparable > {
 @public
  jint mVisibilityMode_;
  jint visibility_;
  jfloat rotationY_;
  JavaUtilLinkedHashMap *mCustomVariable_;
  jint mMode_;
  IOSDoubleArray *mTempValue_;
  IOSDoubleArray *mTempDelta_;
}

#pragma mark Public

- (instancetype)initPackagePrivate;

- (void)addValuesWithJavaUtilHashMap:(JavaUtilHashMap *)splines
                             withInt:(jint)mFramePosition;

- (void)applyParametersWithADXMotionWidget:(ADXMotionWidget *)view;

- (jint)compareToWithId:(ADXMotionConstrainedPoint *)o;

/*!
 @param rect assumes pre rotated
 @param view
 @param rotation mode Surface.ROTATION_0,Surface.ROTATION_90...
 */
- (void)setStateWithADXCLRect:(ADXCLRect *)rect
          withADXMotionWidget:(ADXMotionWidget *)view
                      withInt:(jint)rotation
                    withFloat:(jfloat)prevous;

- (void)setStateWithADXMotionWidget:(ADXMotionWidget *)view;

#pragma mark Package-Private

- (void)differentWithADXMotionConstrainedPoint:(ADXMotionConstrainedPoint *)points
                              withBooleanArray:(IOSBooleanArray *)mask
                             withNSStringArray:(IOSObjectArray *)custom;

/*!
 @brief Given the start and end points define Keys that need to be built
 @param points
 @param keySet
 */
- (void)differentWithADXMotionConstrainedPoint:(ADXMotionConstrainedPoint *)points
                           withJavaUtilHashSet:(JavaUtilHashSet *)keySet;

- (void)fillStandardWithDoubleArray:(IOSDoubleArray *)data
                       withIntArray:(IOSIntArray *)toUse;

- (jint)getCustomDataWithNSString:(NSString *)name
                  withDoubleArray:(IOSDoubleArray *)value
                          withInt:(jint)offset;

- (jint)getCustomDataCountWithNSString:(NSString *)name;

- (jboolean)hasCustomDataWithNSString:(NSString *)name;

- (void)setBoundsWithFloat:(jfloat)x
                 withFloat:(jfloat)y
                 withFloat:(jfloat)w
                 withFloat:(jfloat)h;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ADXMotionConstrainedPoint)

J2OBJC_FIELD_SETTER(ADXMotionConstrainedPoint, mCustomVariable_, JavaUtilLinkedHashMap *)
J2OBJC_FIELD_SETTER(ADXMotionConstrainedPoint, mTempValue_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(ADXMotionConstrainedPoint, mTempDelta_, IOSDoubleArray *)

inline NSString *ADXMotionConstrainedPoint_get_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXMotionConstrainedPoint_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXMotionConstrainedPoint, TAG, NSString *)

inline jboolean ADXMotionConstrainedPoint_get_DEBUG(void);
#define ADXMotionConstrainedPoint_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionConstrainedPoint, DEBUG, jboolean)

inline jint ADXMotionConstrainedPoint_get_PERPENDICULAR(void);
#define ADXMotionConstrainedPoint_PERPENDICULAR 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionConstrainedPoint, PERPENDICULAR, jint)

inline jint ADXMotionConstrainedPoint_get_CARTESIAN(void);
#define ADXMotionConstrainedPoint_CARTESIAN 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXMotionConstrainedPoint, CARTESIAN, jint)

inline IOSObjectArray *ADXMotionConstrainedPoint_get_names(void);
inline IOSObjectArray *ADXMotionConstrainedPoint_set_names(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ADXMotionConstrainedPoint_names;
J2OBJC_STATIC_FIELD_OBJ(ADXMotionConstrainedPoint, names, IOSObjectArray *)

FOUNDATION_EXPORT void ADXMotionConstrainedPoint_initPackagePrivate(ADXMotionConstrainedPoint *self);

FOUNDATION_EXPORT ADXMotionConstrainedPoint *new_ADXMotionConstrainedPoint_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXMotionConstrainedPoint *create_ADXMotionConstrainedPoint_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXMotionConstrainedPoint)

@compatibility_alias AndroidxConstraintlayoutCoreMotionMotionConstrainedPoint ADXMotionConstrainedPoint;

#endif

#pragma pop_macro("INCLUDE_ALL_MotionConstrainedPoint")
