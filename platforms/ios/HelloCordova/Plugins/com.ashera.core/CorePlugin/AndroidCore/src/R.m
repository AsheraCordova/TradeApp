//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\R.java
//

#include "J2ObjC_source.h"
#include "R.h"


@implementation ADR

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADR_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADR_id;LADR_attr;LADR_string;" };
  static const J2ObjcClassInfo _ADR = { "R", "r.android", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_ADR;
}

@end

void ADR_init(ADR *self) {
  NSObject_init(self);
}

ADR *new_ADR_init() {
  J2OBJC_NEW_IMPL(ADR, init)
}

ADR *create_ADR_init() {
  J2OBJC_CREATE_IMPL(ADR, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADR)

@implementation ADR_id

- (instancetype)initWithADR:(ADR *)outer$ {
  ADR_id_initWithADR_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADR:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADR;" };
  static const J2ObjcClassInfo _ADR_id = { "id", "r.android", ptrTable, methods, NULL, 7, 0x1, 1, 0, 0, -1, -1, -1, -1 };
  return &_ADR_id;
}

@end

void ADR_id_initWithADR_(ADR_id *self, ADR *outer$) {
  NSObject_init(self);
}

ADR_id *new_ADR_id_initWithADR_(ADR *outer$) {
  J2OBJC_NEW_IMPL(ADR_id, initWithADR_, outer$)
}

ADR_id *create_ADR_id_initWithADR_(ADR *outer$) {
  J2OBJC_CREATE_IMPL(ADR_id, initWithADR_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADR_id)

@implementation ADR_attr

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADR_attr_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "state_window_focused", "I", .constantValue.asInt = ADR_attr_state_window_focused, 0x19, -1, -1, -1, -1 },
    { "state_selected", "I", .constantValue.asInt = ADR_attr_state_selected, 0x19, -1, -1, -1, -1 },
    { "state_focused", "I", .constantValue.asInt = ADR_attr_state_focused, 0x19, -1, -1, -1, -1 },
    { "state_enabled", "I", .constantValue.asInt = ADR_attr_state_enabled, 0x19, -1, -1, -1, -1 },
    { "state_pressed", "I", .constantValue.asInt = ADR_attr_state_pressed, 0x19, -1, -1, -1, -1 },
    { "state_activated", "I", .constantValue.asInt = ADR_attr_state_activated, 0x19, -1, -1, -1, -1 },
    { "state_accelerated", "I", .constantValue.asInt = ADR_attr_state_accelerated, 0x19, -1, -1, -1, -1 },
    { "state_hovered", "I", .constantValue.asInt = ADR_attr_state_hovered, 0x19, -1, -1, -1, -1 },
    { "state_drag_can_accept", "I", .constantValue.asInt = ADR_attr_state_drag_can_accept, 0x19, -1, -1, -1, -1 },
    { "state_drag_hovered", "I", .constantValue.asInt = ADR_attr_state_drag_hovered, 0x19, -1, -1, -1, -1 },
    { "state_checked", "I", .constantValue.asInt = ADR_attr_state_checked, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADR;" };
  static const J2ObjcClassInfo _ADR_attr = { "attr", "r.android", ptrTable, methods, fields, 7, 0x9, 1, 11, 0, -1, -1, -1, -1 };
  return &_ADR_attr;
}

@end

void ADR_attr_init(ADR_attr *self) {
  NSObject_init(self);
}

ADR_attr *new_ADR_attr_init() {
  J2OBJC_NEW_IMPL(ADR_attr, init)
}

ADR_attr *create_ADR_attr_init() {
  J2OBJC_CREATE_IMPL(ADR_attr, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADR_attr)

jint ADR_string_cancel = 1;
jint ADR_string_negative_duration = 2;

@implementation ADR_string

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADR_string_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ok", "I", .constantValue.asInt = ADR_string_ok, 0x19, -1, -1, -1, -1 },
    { "cancel", "I", .constantValue.asLong = 0, 0x9, -1, 0, -1, -1 },
    { "negative_duration", "I", .constantValue.asLong = 0, 0x9, -1, 1, -1, -1 },
  };
  static const void *ptrTable[] = { &ADR_string_cancel, &ADR_string_negative_duration, "LADR;" };
  static const J2ObjcClassInfo _ADR_string = { "string", "r.android", ptrTable, methods, fields, 7, 0x9, 1, 3, 2, -1, -1, -1, -1 };
  return &_ADR_string;
}

@end

void ADR_string_init(ADR_string *self) {
  NSObject_init(self);
}

ADR_string *new_ADR_string_init() {
  J2OBJC_NEW_IMPL(ADR_string, init)
}

ADR_string *create_ADR_string_init() {
  J2OBJC_CREATE_IMPL(ADR_string, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADR_string)
