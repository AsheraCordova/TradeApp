//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\util\Pair.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Pair")
#ifdef RESTRICT_Pair
#define INCLUDE_ALL_Pair 0
#else
#define INCLUDE_ALL_Pair 1
#endif
#undef RESTRICT_Pair

#if !defined (ADPair_) && (INCLUDE_ALL_Pair || defined(INCLUDE_ADPair))
#define ADPair_

/*!
 @brief Container to ease passing around a tuple of two objects.This object provides a sensible
  implementation of equals(), returning true if equals() is true on each of the contained
  objects.
 */
@interface ADPair : NSObject {
 @public
  id first_;
  id second_;
}

#pragma mark Public

/*!
 @brief Constructor for a Pair.
 @param first the first object in the Pair
 @param second the second object in the pair
 */
- (instancetype)initWithId:(id)first
                    withId:(id)second;

/*!
 @brief Convenience method for creating an appropriately typed pair.
 @param a the first object in the Pair
 @param b the second object in the pair
 @return a Pair that is templatized with the types of a and b
 */
+ (ADPair *)createWithId:(id)a
                  withId:(id)b;

/*!
 @brief Checks the two objects for equality by delegating to their respective 
 <code>Object.equals(Object)</code> methods.
 @param o the <code>Pair</code>  to which this one is to be checked for equality
 @return true if the underlying objects of the Pair are both considered
          equal
 */
- (jboolean)isEqual:(id)o;

/*!
 @brief Compute a hash code using the hash codes of the underlying objects
 @return a hashcode of the Pair
 */
- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPair)

J2OBJC_FIELD_SETTER(ADPair, first_, id)
J2OBJC_FIELD_SETTER(ADPair, second_, id)

FOUNDATION_EXPORT void ADPair_initWithId_withId_(ADPair *self, id first, id second);

FOUNDATION_EXPORT ADPair *new_ADPair_initWithId_withId_(id first, id second) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADPair *create_ADPair_initWithId_withId_(id first, id second);

FOUNDATION_EXPORT ADPair *ADPair_createWithId_withId_(id a, id b);

J2OBJC_TYPE_LITERAL_HEADER(ADPair)

@compatibility_alias RAndroidUtilPair ADPair;

#endif

#pragma pop_macro("INCLUDE_ALL_Pair")
