//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXConstraintLayout\src\main\java\androidx\constraintlayout\core\state\State.java
//

#include "AlignHorizontallyReference.h"
#include "AlignVerticallyReference.h"
#include "BarrierReference.h"
#include "ConstraintReference.h"
#include "ConstraintWidget.h"
#include "ConstraintWidgetContainer.h"
#include "Dimension.h"
#include "Facade.h"
#include "GuidelineReferenceHelper.h"
#include "HelperReference.h"
#include "HelperWidget.h"
#include "HorizontalChainReference.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Reference.h"
#include "State.h"
#include "VerticalChainReference.h"
#include "java/io/PrintStream.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/Set.h"


@interface ADXState () {
 @public
  jint numHelpers_;
}

- (NSString *)createHelperKey;

@end

__attribute__((unused)) static NSString *ADXState_createHelperKey(ADXState *self);

__attribute__((unused)) static void ADXState_Constraint_initWithNSString_withInt_(ADXState_Constraint *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ADXState_Direction_initWithNSString_withInt_(ADXState_Direction *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ADXState_Helper_initWithNSString_withInt_(ADXState_Helper *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ADXState_Chain_initWithNSString_withInt_(ADXState_Chain *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(ADXState)

JavaLangInteger *ADXState_PARENT;

@implementation ADXState

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXState_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)reset {
  [((JavaUtilHashMap *) nil_chk(mHelperReferences_)) clear];
  [((JavaUtilHashMap *) nil_chk(mTags_)) clear];
}

- (jint)convertDimensionWithId:(id)value {
  if ([value isKindOfClass:[JavaLangFloat class]]) {
    return [((JavaLangFloat *) nil_chk(((JavaLangFloat *) value))) intValue];
  }
  if ([value isKindOfClass:[JavaLangInteger class]]) {
    return [((JavaLangInteger *) nil_chk((JavaLangInteger *) value)) intValue];
  }
  return 0;
}

- (ADXConstraintReference *)createConstraintReferenceWithId:(id)key {
  return create_ADXConstraintReference_initWithADXState_(self);
}

- (jboolean)sameFixedWidthWithInt:(jint)width {
  return [((ADXDimension *) nil_chk([((ADXConstraintReference *) nil_chk(mParent_)) getWidth])) equalsFixedValueWithInt:width];
}

- (jboolean)sameFixedHeightWithInt:(jint)height {
  return [((ADXDimension *) nil_chk([((ADXConstraintReference *) nil_chk(mParent_)) getHeight])) equalsFixedValueWithInt:height];
}

- (ADXState *)widthWithADXDimension:(ADXDimension *)dimension {
  return [self setWidthWithADXDimension:dimension];
}

- (ADXState *)heightWithADXDimension:(ADXDimension *)dimension {
  return [self setHeightWithADXDimension:dimension];
}

- (ADXState *)setWidthWithADXDimension:(ADXDimension *)dimension {
  [((ADXConstraintReference *) nil_chk(mParent_)) setWidthWithADXDimension:dimension];
  return self;
}

- (ADXState *)setHeightWithADXDimension:(ADXDimension *)dimension {
  [((ADXConstraintReference *) nil_chk(mParent_)) setHeightWithADXDimension:dimension];
  return self;
}

- (id<ADXReference>)referenceWithId:(id)key {
  return [((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:key];
}

- (ADXConstraintReference *)constraintsWithId:(id)key {
  id<ADXReference> reference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:key]);
  if (reference == nil) {
    reference = [self createConstraintReferenceWithId:key];
    [((JavaUtilHashMap *) nil_chk(mReferences_)) putWithId:key withId:reference];
    [((id<ADXReference>) nil_chk(reference)) setKeyWithId:key];
  }
  if ([reference isKindOfClass:[ADXConstraintReference class]]) {
    return (ADXConstraintReference *) reference;
  }
  return nil;
}

- (NSString *)createHelperKey {
  return ADXState_createHelperKey(self);
}

- (ADXHelperReference *)helperWithId:(id)key
                 withADXState_Helper:(ADXState_Helper *)type {
  if (key == nil) {
    key = ADXState_createHelperKey(self);
  }
  ADXHelperReference *reference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mHelperReferences_)) getWithId:key]);
  if (reference == nil) {
    switch ([type ordinal]) {
      case ADXState_Helper_Enum_HORIZONTAL_CHAIN:
      {
        reference = create_ADXHorizontalChainReference_initWithADXState_(self);
      }
      break;
      case ADXState_Helper_Enum_VERTICAL_CHAIN:
      {
        reference = create_ADXVerticalChainReference_initWithADXState_(self);
      }
      break;
      case ADXState_Helper_Enum_ALIGN_HORIZONTALLY:
      {
        reference = create_ADXAlignHorizontallyReference_initWithADXState_(self);
      }
      break;
      case ADXState_Helper_Enum_ALIGN_VERTICALLY:
      {
        reference = create_ADXAlignVerticallyReference_initWithADXState_(self);
      }
      break;
      case ADXState_Helper_Enum_BARRIER:
      {
        reference = create_ADXBarrierReference_initWithADXState_(self);
      }
      break;
      default:
      {
        reference = create_ADXHelperReference_initWithADXState_withADXState_Helper_(self, type);
      }
    }
    [((JavaUtilHashMap *) nil_chk(mHelperReferences_)) putWithId:key withId:reference];
  }
  return reference;
}

- (ADXGuidelineReferenceHelper *)horizontalGuidelineWithId:(id)key {
  return [self guidelineWithId:key withInt:ADXConstraintWidget_HORIZONTAL];
}

- (ADXGuidelineReferenceHelper *)verticalGuidelineWithId:(id)key {
  return [self guidelineWithId:key withInt:ADXConstraintWidget_VERTICAL];
}

- (ADXGuidelineReferenceHelper *)guidelineWithId:(id)key
                                         withInt:(jint)orientation {
  ADXConstraintReference *reference = JreRetainedLocalValue([self constraintsWithId:key]);
  if ([((ADXConstraintReference *) nil_chk(reference)) getFacade] == nil || !([[reference getFacade] isKindOfClass:[ADXGuidelineReferenceHelper class]])) {
    ADXGuidelineReferenceHelper *guidelineReference = create_ADXGuidelineReferenceHelper_initWithADXState_(self);
    [guidelineReference setOrientationWithInt:orientation];
    [guidelineReference setKeyWithId:key];
    [reference setFacadeWithADXFacade:guidelineReference];
  }
  return (ADXGuidelineReferenceHelper *) cast_chk([reference getFacade], [ADXGuidelineReferenceHelper class]);
}

- (ADXBarrierReference *)barrierWithId:(id)key
                withADXState_Direction:(ADXState_Direction *)direction {
  ADXConstraintReference *reference = JreRetainedLocalValue([self constraintsWithId:key]);
  if ([((ADXConstraintReference *) nil_chk(reference)) getFacade] == nil || !([[reference getFacade] isKindOfClass:[ADXBarrierReference class]])) {
    ADXBarrierReference *barrierReference = create_ADXBarrierReference_initWithADXState_(self);
    [barrierReference setBarrierDirectionWithADXState_Direction:direction];
    [reference setFacadeWithADXFacade:barrierReference];
  }
  return (ADXBarrierReference *) cast_chk([reference getFacade], [ADXBarrierReference class]);
}

- (ADXVerticalChainReference *)verticalChain {
  return (ADXVerticalChainReference *) cast_chk([self helperWithId:nil withADXState_Helper:JreLoadEnum(ADXState_Helper, VERTICAL_CHAIN)], [ADXVerticalChainReference class]);
}

- (ADXVerticalChainReference *)verticalChainWithNSObjectArray:(IOSObjectArray *)references {
  ADXVerticalChainReference *reference = (ADXVerticalChainReference *) cast_chk([self helperWithId:nil withADXState_Helper:JreLoadEnum(ADXState_Helper, VERTICAL_CHAIN)], [ADXVerticalChainReference class]);
  [((ADXVerticalChainReference *) nil_chk(reference)) addWithNSObjectArray:references];
  return reference;
}

- (ADXHorizontalChainReference *)horizontalChain {
  return (ADXHorizontalChainReference *) cast_chk([self helperWithId:nil withADXState_Helper:JreLoadEnum(ADXState_Helper, HORIZONTAL_CHAIN)], [ADXHorizontalChainReference class]);
}

- (ADXHorizontalChainReference *)horizontalChainWithNSObjectArray:(IOSObjectArray *)references {
  ADXHorizontalChainReference *reference = (ADXHorizontalChainReference *) cast_chk([self helperWithId:nil withADXState_Helper:JreLoadEnum(ADXState_Helper, HORIZONTAL_CHAIN)], [ADXHorizontalChainReference class]);
  [((ADXHorizontalChainReference *) nil_chk(reference)) addWithNSObjectArray:references];
  return reference;
}

- (ADXAlignHorizontallyReference *)centerHorizontallyWithNSObjectArray:(IOSObjectArray *)references {
  ADXAlignHorizontallyReference *reference = (ADXAlignHorizontallyReference *) cast_chk([self helperWithId:nil withADXState_Helper:JreLoadEnum(ADXState_Helper, ALIGN_HORIZONTALLY)], [ADXAlignHorizontallyReference class]);
  [((ADXAlignHorizontallyReference *) nil_chk(reference)) addWithNSObjectArray:references];
  return reference;
}

- (ADXAlignVerticallyReference *)centerVerticallyWithNSObjectArray:(IOSObjectArray *)references {
  ADXAlignVerticallyReference *reference = (ADXAlignVerticallyReference *) cast_chk([self helperWithId:nil withADXState_Helper:JreLoadEnum(ADXState_Helper, ALIGN_VERTICALLY)], [ADXAlignVerticallyReference class]);
  [((ADXAlignVerticallyReference *) nil_chk(reference)) addWithNSObjectArray:references];
  return reference;
}

- (void)directMapping {
  for (id __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(mReferences_)) keySet])) {
    id<ADXReference> ref = JreRetainedLocalValue([self constraintsWithId:key]);
    if (!([ref isKindOfClass:[ADXConstraintReference class]])) {
      continue;
    }
    ADXConstraintReference *reference = (ADXConstraintReference *) cast_chk(ref, [ADXConstraintReference class]);
    [((ADXConstraintReference *) nil_chk(reference)) setViewWithId:key];
  }
}

- (void)mapWithId:(id)key
           withId:(id)view {
  id<ADXReference> ref = JreRetainedLocalValue([self constraintsWithId:key]);
  if ([ref isKindOfClass:[ADXConstraintReference class]]) {
    ADXConstraintReference *reference = (ADXConstraintReference *) ref;
    [((ADXConstraintReference *) nil_chk(reference)) setViewWithId:view];
  }
}

- (void)setTagWithNSString:(NSString *)key
              withNSString:(NSString *)tag {
  id<ADXReference> ref = JreRetainedLocalValue([self constraintsWithId:key]);
  if ([ref isKindOfClass:[ADXConstraintReference class]]) {
    ADXConstraintReference *reference = (ADXConstraintReference *) ref;
    [((ADXConstraintReference *) nil_chk(reference)) setTagWithNSString:tag];
    JavaUtilArrayList *list = nil;
    if (![((JavaUtilHashMap *) nil_chk(mTags_)) containsKeyWithId:tag]) {
      list = create_JavaUtilArrayList_init();
      [((JavaUtilHashMap *) nil_chk(mTags_)) putWithId:tag withId:list];
    }
    else {
      list = [((JavaUtilHashMap *) nil_chk(mTags_)) getWithId:tag];
    }
    [((JavaUtilArrayList *) nil_chk(list)) addWithId:key];
  }
}

- (JavaUtilArrayList *)getIdsForTagWithNSString:(NSString *)tag {
  if ([((JavaUtilHashMap *) nil_chk(mTags_)) containsKeyWithId:tag]) {
    return [((JavaUtilHashMap *) nil_chk(mTags_)) getWithId:tag];
  }
  return nil;
}

- (void)applyWithADXConstraintWidgetContainer:(ADXConstraintWidgetContainer *)container {
  [((ADXConstraintWidgetContainer *) nil_chk(container)) removeAllChildren];
  [((ADXDimension *) nil_chk([((ADXConstraintReference *) nil_chk(mParent_)) getWidth])) applyWithADXState:self withADXConstraintWidget:container withInt:ADXConstraintWidget_HORIZONTAL];
  [((ADXDimension *) nil_chk([mParent_ getHeight])) applyWithADXState:self withADXConstraintWidget:container withInt:ADXConstraintWidget_VERTICAL];
  for (id __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(mHelperReferences_)) keySet])) {
    ADXHelperReference *reference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mHelperReferences_)) getWithId:key]);
    ADXHelperWidget *helperWidget = JreRetainedLocalValue([((ADXHelperReference *) nil_chk(reference)) getHelperWidget]);
    if (helperWidget != nil) {
      id<ADXReference> constraintReference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:key]);
      if (constraintReference == nil) {
        constraintReference = [self constraintsWithId:key];
      }
      [((id<ADXReference>) nil_chk(constraintReference)) setConstraintWidgetWithADXConstraintWidget:helperWidget];
    }
  }
  for (id __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(mReferences_)) keySet])) {
    id<ADXReference> reference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:key]);
    if (reference != mParent_ && [[((id<ADXReference>) nil_chk(reference)) getFacade] isKindOfClass:[ADXHelperReference class]]) {
      ADXHelperWidget *helperWidget = JreRetainedLocalValue([((ADXHelperReference *) nil_chk(((ADXHelperReference *) cast_chk([((id<ADXReference>) nil_chk(reference)) getFacade], [ADXHelperReference class])))) getHelperWidget]);
      if (helperWidget != nil) {
        id<ADXReference> constraintReference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:key]);
        if (constraintReference == nil) {
          constraintReference = [self constraintsWithId:key];
        }
        [((id<ADXReference>) nil_chk(constraintReference)) setConstraintWidgetWithADXConstraintWidget:helperWidget];
      }
    }
  }
  for (id __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(mReferences_)) keySet])) {
    id<ADXReference> reference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:key]);
    if (reference != mParent_) {
      ADXConstraintWidget *widget = JreRetainedLocalValue([((id<ADXReference>) nil_chk(reference)) getConstraintWidget]);
      [((ADXConstraintWidget *) nil_chk(widget)) setDebugNameWithNSString:[nil_chk([reference getKey]) description]];
      [widget setParentWithADXConstraintWidget:nil];
      if ([[reference getFacade] isKindOfClass:[ADXGuidelineReferenceHelper class]]) {
        [reference apply];
      }
      [container addWithADXConstraintWidget:widget];
    }
    else {
      [((id<ADXReference>) nil_chk(reference)) setConstraintWidgetWithADXConstraintWidget:container];
    }
  }
  for (id __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(mHelperReferences_)) keySet])) {
    ADXHelperReference *reference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mHelperReferences_)) getWithId:key]);
    ADXHelperWidget *helperWidget = JreRetainedLocalValue([((ADXHelperReference *) nil_chk(reference)) getHelperWidget]);
    if (helperWidget != nil) {
      for (id __strong keyRef in nil_chk(reference->mReferences_)) {
        id<ADXReference> constraintReference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:keyRef]);
        [((ADXHelperWidget *) nil_chk([reference getHelperWidget])) addWithADXConstraintWidget:[((id<ADXReference>) nil_chk(constraintReference)) getConstraintWidget]];
      }
      [reference apply];
    }
    else {
      [reference apply];
    }
  }
  for (id __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(mReferences_)) keySet])) {
    id<ADXReference> reference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:key]);
    if (reference != mParent_ && [[((id<ADXReference>) nil_chk(reference)) getFacade] isKindOfClass:[ADXHelperReference class]]) {
      ADXHelperReference *helperReference = (ADXHelperReference *) cast_chk([((id<ADXReference>) nil_chk(reference)) getFacade], [ADXHelperReference class]);
      ADXHelperWidget *helperWidget = JreRetainedLocalValue([((ADXHelperReference *) nil_chk(helperReference)) getHelperWidget]);
      if (helperWidget != nil) {
        for (id __strong keyRef in nil_chk(helperReference->mReferences_)) {
          id<ADXReference> constraintReference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:keyRef]);
          if (constraintReference != nil) {
            [helperWidget addWithADXConstraintWidget:[constraintReference getConstraintWidget]];
          }
          else if ([ADXReference_class_() isInstance:keyRef]) {
            [helperWidget addWithADXConstraintWidget:[((id<ADXReference>) nil_chk(((id<ADXReference>) cast_check(keyRef, ADXReference_class_())))) getConstraintWidget]];
          }
          else {
            [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"couldn't find reference for ", keyRef)];
          }
        }
        [reference apply];
      }
    }
  }
  for (id __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(mReferences_)) keySet])) {
    id<ADXReference> reference = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(mReferences_)) getWithId:key]);
    [((id<ADXReference>) nil_chk(reference)) apply];
    ADXConstraintWidget *widget = JreRetainedLocalValue([reference getConstraintWidget]);
    if (widget != nil && [key isKindOfClass:[NSString class]]) {
      JreStrongAssign(&widget->stringId_, (NSString *) cast_chk(key, [NSString class]));
    }
  }
}

- (void)dealloc {
  RELEASE_(mReferences_);
  RELEASE_(mHelperReferences_);
  RELEASE_(mTags_);
  RELEASE_(mParent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LADXConstraintReference;", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LADXState;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LADXState;", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "LADXState;", 0x1, 9, 7, -1, -1, -1, -1 },
    { NULL, "LADXState;", 0x1, 10, 7, -1, -1, -1, -1 },
    { NULL, "LADXReference;", 0x0, 11, 1, -1, -1, -1, -1 },
    { NULL, "LADXConstraintReference;", 0x1, 12, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXHelperReference;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LADXGuidelineReferenceHelper;", 0x1, 15, 1, -1, -1, -1, -1 },
    { NULL, "LADXGuidelineReferenceHelper;", 0x1, 16, 1, -1, -1, -1, -1 },
    { NULL, "LADXGuidelineReferenceHelper;", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "LADXBarrierReference;", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "LADXVerticalChainReference;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXVerticalChainReference;", 0x81, 21, 22, -1, -1, -1, -1 },
    { NULL, "LADXHorizontalChainReference;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXHorizontalChainReference;", 0x81, 23, 22, -1, -1, -1, -1 },
    { NULL, "LADXAlignHorizontallyReference;", 0x81, 24, 22, -1, -1, -1, -1 },
    { NULL, "LADXAlignVerticallyReference;", 0x81, 25, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 29, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, 30, 31, -1, 32, -1, -1 },
    { NULL, "V", 0x1, 33, 34, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(convertDimensionWithId:);
  methods[3].selector = @selector(createConstraintReferenceWithId:);
  methods[4].selector = @selector(sameFixedWidthWithInt:);
  methods[5].selector = @selector(sameFixedHeightWithInt:);
  methods[6].selector = @selector(widthWithADXDimension:);
  methods[7].selector = @selector(heightWithADXDimension:);
  methods[8].selector = @selector(setWidthWithADXDimension:);
  methods[9].selector = @selector(setHeightWithADXDimension:);
  methods[10].selector = @selector(referenceWithId:);
  methods[11].selector = @selector(constraintsWithId:);
  methods[12].selector = @selector(createHelperKey);
  methods[13].selector = @selector(helperWithId:withADXState_Helper:);
  methods[14].selector = @selector(horizontalGuidelineWithId:);
  methods[15].selector = @selector(verticalGuidelineWithId:);
  methods[16].selector = @selector(guidelineWithId:withInt:);
  methods[17].selector = @selector(barrierWithId:withADXState_Direction:);
  methods[18].selector = @selector(verticalChain);
  methods[19].selector = @selector(verticalChainWithNSObjectArray:);
  methods[20].selector = @selector(horizontalChain);
  methods[21].selector = @selector(horizontalChainWithNSObjectArray:);
  methods[22].selector = @selector(centerHorizontallyWithNSObjectArray:);
  methods[23].selector = @selector(centerVerticallyWithNSObjectArray:);
  methods[24].selector = @selector(directMapping);
  methods[25].selector = @selector(mapWithId:withId:);
  methods[26].selector = @selector(setTagWithNSString:withNSString:);
  methods[27].selector = @selector(getIdsForTagWithNSString:);
  methods[28].selector = @selector(applyWithADXConstraintWidgetContainer:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mReferences_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x4, -1, -1, 35, -1 },
    { "mHelperReferences_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x4, -1, -1, 36, -1 },
    { "mTags_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x0, -1, -1, 37, -1 },
    { "UNKNOWN", "I", .constantValue.asInt = ADXState_UNKNOWN, 0x18, -1, -1, -1, -1 },
    { "CONSTRAINT_SPREAD", "I", .constantValue.asInt = ADXState_CONSTRAINT_SPREAD, 0x18, -1, -1, -1, -1 },
    { "CONSTRAINT_WRAP", "I", .constantValue.asInt = ADXState_CONSTRAINT_WRAP, 0x18, -1, -1, -1, -1 },
    { "CONSTRAINT_RATIO", "I", .constantValue.asInt = ADXState_CONSTRAINT_RATIO, 0x18, -1, -1, -1, -1 },
    { "PARENT", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 38, -1, -1 },
    { "mParent_", "LADXConstraintReference;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "numHelpers_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "convertDimension", "LNSObject;", "createConstraintReference", "sameFixedWidth", "I", "sameFixedHeight", "width", "LADXDimension;", "height", "setWidth", "setHeight", "reference", "constraints", "helper", "LNSObject;LADXState_Helper;", "horizontalGuideline", "verticalGuideline", "guideline", "LNSObject;I", "barrier", "LNSObject;LADXState_Direction;", "verticalChain", "[LNSObject;", "horizontalChain", "centerHorizontally", "centerVertically", "map", "LNSObject;LNSObject;", "setTag", "LNSString;LNSString;", "getIdsForTag", "LNSString;", "(Ljava/lang/String;)Ljava/util/ArrayList<Ljava/lang/String;>;", "apply", "LADXConstraintWidgetContainer;", "Ljava/util/HashMap<Ljava/lang/Object;Landroidx/constraintlayout/core/state/Reference;>;", "Ljava/util/HashMap<Ljava/lang/Object;Landroidx/constraintlayout/core/state/HelperReference;>;", "Ljava/util/HashMap<Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;>;", &ADXState_PARENT, "LADXState_Constraint;LADXState_Direction;LADXState_Helper;LADXState_Chain;" };
  static const J2ObjcClassInfo _ADXState = { "State", "androidx.constraintlayout.core.state", ptrTable, methods, fields, 7, 0x1, 29, 10, -1, 39, -1, -1, -1 };
  return &_ADXState;
}

+ (void)initialize {
  if (self == [ADXState class]) {
    JreStrongAssign(&ADXState_PARENT, JavaLangInteger_valueOfWithInt_(0));
    J2OBJC_SET_INITIALIZED(ADXState)
  }
}

@end

void ADXState_init(ADXState *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mReferences_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->mHelperReferences_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->mTags_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->mParent_, new_ADXConstraintReference_initWithADXState_(self));
  self->numHelpers_ = 0;
  [((JavaUtilHashMap *) nil_chk(self->mReferences_)) putWithId:ADXState_PARENT withId:self->mParent_];
}

ADXState *new_ADXState_init() {
  J2OBJC_NEW_IMPL(ADXState, init)
}

ADXState *create_ADXState_init() {
  J2OBJC_CREATE_IMPL(ADXState, init)
}

NSString *ADXState_createHelperKey(ADXState *self) {
  return JreStrcat("$I$", @"__HELPER_KEY_", self->numHelpers_++, @"__");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXState)

J2OBJC_INITIALIZED_DEFN(ADXState_Constraint)

ADXState_Constraint *ADXState_Constraint_values_[16];

@implementation ADXState_Constraint

+ (IOSObjectArray *)values {
  return ADXState_Constraint_values();
}

+ (ADXState_Constraint *)valueOfWithNSString:(NSString *)name {
  return ADXState_Constraint_valueOfWithNSString_(name);
}

- (ADXState_Constraint_Enum)toNSEnum {
  return (ADXState_Constraint_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LADXState_Constraint;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXState_Constraint;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LEFT_TO_LEFT", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "LEFT_TO_RIGHT", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "RIGHT_TO_LEFT", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "RIGHT_TO_RIGHT", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "START_TO_START", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "START_TO_END", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "END_TO_START", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "END_TO_END", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "TOP_TO_TOP", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "TOP_TO_BOTTOM", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "BOTTOM_TO_TOP", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "BOTTOM_TO_BOTTOM", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "BASELINE_TO_BASELINE", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
    { "CENTER_HORIZONTALLY", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 15, -1, -1 },
    { "CENTER_VERTICALLY", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 16, -1, -1 },
    { "CIRCULAR_CONSTRAINT", "LADXState_Constraint;", .constantValue.asLong = 0, 0x4019, -1, 17, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ADXState_Constraint, LEFT_TO_LEFT), &JreEnum(ADXState_Constraint, LEFT_TO_RIGHT), &JreEnum(ADXState_Constraint, RIGHT_TO_LEFT), &JreEnum(ADXState_Constraint, RIGHT_TO_RIGHT), &JreEnum(ADXState_Constraint, START_TO_START), &JreEnum(ADXState_Constraint, START_TO_END), &JreEnum(ADXState_Constraint, END_TO_START), &JreEnum(ADXState_Constraint, END_TO_END), &JreEnum(ADXState_Constraint, TOP_TO_TOP), &JreEnum(ADXState_Constraint, TOP_TO_BOTTOM), &JreEnum(ADXState_Constraint, BOTTOM_TO_TOP), &JreEnum(ADXState_Constraint, BOTTOM_TO_BOTTOM), &JreEnum(ADXState_Constraint, BASELINE_TO_BASELINE), &JreEnum(ADXState_Constraint, CENTER_HORIZONTALLY), &JreEnum(ADXState_Constraint, CENTER_VERTICALLY), &JreEnum(ADXState_Constraint, CIRCULAR_CONSTRAINT), "LADXState;", "Ljava/lang/Enum<Landroidx/constraintlayout/core/state/State$Constraint;>;" };
  static const J2ObjcClassInfo _ADXState_Constraint = { "Constraint", "androidx.constraintlayout.core.state", ptrTable, methods, fields, 7, 0x4019, 2, 16, 18, -1, -1, 19, -1 };
  return &_ADXState_Constraint;
}

+ (void)initialize {
  if (self == [ADXState_Constraint class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 16 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 16; i++) {
      ((void)(ADXState_Constraint_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ADXState_Constraint_initWithNSString_withInt_(e, JreEnumConstantName(ADXState_Constraint_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ADXState_Constraint)
  }
}

@end

void ADXState_Constraint_initWithNSString_withInt_(ADXState_Constraint *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ADXState_Constraint_values() {
  ADXState_Constraint_initialize();
  return [IOSObjectArray arrayWithObjects:ADXState_Constraint_values_ count:16 type:ADXState_Constraint_class_()];
}

ADXState_Constraint *ADXState_Constraint_valueOfWithNSString_(NSString *name) {
  ADXState_Constraint_initialize();
  for (int i = 0; i < 16; i++) {
    ADXState_Constraint *e = ADXState_Constraint_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ADXState_Constraint *ADXState_Constraint_fromOrdinal(NSUInteger ordinal) {
  ADXState_Constraint_initialize();
  if (ordinal >= 16) {
    return nil;
  }
  return ADXState_Constraint_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXState_Constraint)

J2OBJC_INITIALIZED_DEFN(ADXState_Direction)

ADXState_Direction *ADXState_Direction_values_[6];

@implementation ADXState_Direction

+ (IOSObjectArray *)values {
  return ADXState_Direction_values();
}

+ (ADXState_Direction *)valueOfWithNSString:(NSString *)name {
  return ADXState_Direction_valueOfWithNSString_(name);
}

- (ADXState_Direction_Enum)toNSEnum {
  return (ADXState_Direction_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LADXState_Direction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXState_Direction;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LEFT", "LADXState_Direction;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "RIGHT", "LADXState_Direction;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "START", "LADXState_Direction;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "END", "LADXState_Direction;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "TOP", "LADXState_Direction;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "BOTTOM", "LADXState_Direction;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ADXState_Direction, LEFT), &JreEnum(ADXState_Direction, RIGHT), &JreEnum(ADXState_Direction, START), &JreEnum(ADXState_Direction, END), &JreEnum(ADXState_Direction, TOP), &JreEnum(ADXState_Direction, BOTTOM), "LADXState;", "Ljava/lang/Enum<Landroidx/constraintlayout/core/state/State$Direction;>;" };
  static const J2ObjcClassInfo _ADXState_Direction = { "Direction", "androidx.constraintlayout.core.state", ptrTable, methods, fields, 7, 0x4019, 2, 6, 8, -1, -1, 9, -1 };
  return &_ADXState_Direction;
}

+ (void)initialize {
  if (self == [ADXState_Direction class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 6 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 6; i++) {
      ((void)(ADXState_Direction_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ADXState_Direction_initWithNSString_withInt_(e, JreEnumConstantName(ADXState_Direction_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ADXState_Direction)
  }
}

@end

void ADXState_Direction_initWithNSString_withInt_(ADXState_Direction *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ADXState_Direction_values() {
  ADXState_Direction_initialize();
  return [IOSObjectArray arrayWithObjects:ADXState_Direction_values_ count:6 type:ADXState_Direction_class_()];
}

ADXState_Direction *ADXState_Direction_valueOfWithNSString_(NSString *name) {
  ADXState_Direction_initialize();
  for (int i = 0; i < 6; i++) {
    ADXState_Direction *e = ADXState_Direction_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ADXState_Direction *ADXState_Direction_fromOrdinal(NSUInteger ordinal) {
  ADXState_Direction_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return ADXState_Direction_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXState_Direction)

J2OBJC_INITIALIZED_DEFN(ADXState_Helper)

ADXState_Helper *ADXState_Helper_values_[7];

@implementation ADXState_Helper

+ (IOSObjectArray *)values {
  return ADXState_Helper_values();
}

+ (ADXState_Helper *)valueOfWithNSString:(NSString *)name {
  return ADXState_Helper_valueOfWithNSString_(name);
}

- (ADXState_Helper_Enum)toNSEnum {
  return (ADXState_Helper_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LADXState_Helper;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXState_Helper;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HORIZONTAL_CHAIN", "LADXState_Helper;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "VERTICAL_CHAIN", "LADXState_Helper;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "ALIGN_HORIZONTALLY", "LADXState_Helper;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "ALIGN_VERTICALLY", "LADXState_Helper;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "BARRIER", "LADXState_Helper;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "LAYER", "LADXState_Helper;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "FLOW", "LADXState_Helper;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ADXState_Helper, HORIZONTAL_CHAIN), &JreEnum(ADXState_Helper, VERTICAL_CHAIN), &JreEnum(ADXState_Helper, ALIGN_HORIZONTALLY), &JreEnum(ADXState_Helper, ALIGN_VERTICALLY), &JreEnum(ADXState_Helper, BARRIER), &JreEnum(ADXState_Helper, LAYER), &JreEnum(ADXState_Helper, FLOW), "LADXState;", "Ljava/lang/Enum<Landroidx/constraintlayout/core/state/State$Helper;>;" };
  static const J2ObjcClassInfo _ADXState_Helper = { "Helper", "androidx.constraintlayout.core.state", ptrTable, methods, fields, 7, 0x4019, 2, 7, 9, -1, -1, 10, -1 };
  return &_ADXState_Helper;
}

+ (void)initialize {
  if (self == [ADXState_Helper class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 7 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 7; i++) {
      ((void)(ADXState_Helper_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ADXState_Helper_initWithNSString_withInt_(e, JreEnumConstantName(ADXState_Helper_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ADXState_Helper)
  }
}

@end

void ADXState_Helper_initWithNSString_withInt_(ADXState_Helper *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ADXState_Helper_values() {
  ADXState_Helper_initialize();
  return [IOSObjectArray arrayWithObjects:ADXState_Helper_values_ count:7 type:ADXState_Helper_class_()];
}

ADXState_Helper *ADXState_Helper_valueOfWithNSString_(NSString *name) {
  ADXState_Helper_initialize();
  for (int i = 0; i < 7; i++) {
    ADXState_Helper *e = ADXState_Helper_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ADXState_Helper *ADXState_Helper_fromOrdinal(NSUInteger ordinal) {
  ADXState_Helper_initialize();
  if (ordinal >= 7) {
    return nil;
  }
  return ADXState_Helper_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXState_Helper)

J2OBJC_INITIALIZED_DEFN(ADXState_Chain)

ADXState_Chain *ADXState_Chain_values_[3];

@implementation ADXState_Chain

+ (IOSObjectArray *)values {
  return ADXState_Chain_values();
}

+ (ADXState_Chain *)valueOfWithNSString:(NSString *)name {
  return ADXState_Chain_valueOfWithNSString_(name);
}

- (ADXState_Chain_Enum)toNSEnum {
  return (ADXState_Chain_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LADXState_Chain;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXState_Chain;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SPREAD", "LADXState_Chain;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "SPREAD_INSIDE", "LADXState_Chain;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "PACKED", "LADXState_Chain;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ADXState_Chain, SPREAD), &JreEnum(ADXState_Chain, SPREAD_INSIDE), &JreEnum(ADXState_Chain, PACKED), "LADXState;", "Ljava/lang/Enum<Landroidx/constraintlayout/core/state/State$Chain;>;" };
  static const J2ObjcClassInfo _ADXState_Chain = { "Chain", "androidx.constraintlayout.core.state", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_ADXState_Chain;
}

+ (void)initialize {
  if (self == [ADXState_Chain class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 3; i++) {
      ((void)(ADXState_Chain_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ADXState_Chain_initWithNSString_withInt_(e, JreEnumConstantName(ADXState_Chain_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ADXState_Chain)
  }
}

@end

void ADXState_Chain_initWithNSString_withInt_(ADXState_Chain *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ADXState_Chain_values() {
  ADXState_Chain_initialize();
  return [IOSObjectArray arrayWithObjects:ADXState_Chain_values_ count:3 type:ADXState_Chain_class_()];
}

ADXState_Chain *ADXState_Chain_valueOfWithNSString_(NSString *name) {
  ADXState_Chain_initialize();
  for (int i = 0; i < 3; i++) {
    ADXState_Chain *e = ADXState_Chain_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ADXState_Chain *ADXState_Chain_fromOrdinal(NSUInteger ordinal) {
  ADXState_Chain_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return ADXState_Chain_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXState_Chain)
