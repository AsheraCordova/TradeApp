//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\androidx\recyclerview\widget\ViewInfoStore.java
//

#include "J2ObjC_source.h"
#include "LongSparseArray.h"
#include "Pools.h"
#include "RecyclerView.h"
#include "SimpleArrayMap.h"
#include "ViewInfoStore.h"
#include "java/lang/IllegalArgumentException.h"


@interface ADXViewInfoStore ()

- (ADXRecyclerView_ItemAnimator_ItemHolderInfo *)popFromLayoutStepWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)vh
                                                                                         withInt:(jint)flag;

@end

inline jboolean ADXViewInfoStore_get_DEBUG(void);
#define ADXViewInfoStore_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(ADXViewInfoStore, DEBUG, jboolean)

__attribute__((unused)) static ADXRecyclerView_ItemAnimator_ItemHolderInfo *ADXViewInfoStore_popFromLayoutStepWithADXRecyclerView_ViewHolder_withInt_(ADXViewInfoStore *self, ADXRecyclerView_ViewHolder *vh, jint flag);

@interface ADXViewInfoStore_ProcessCallback : NSObject

@end

@interface ADXViewInfoStore_InfoRecord ()

- (instancetype)init;

@end

__attribute__((unused)) static void ADXViewInfoStore_InfoRecord_init(ADXViewInfoStore_InfoRecord *self);

__attribute__((unused)) static ADXViewInfoStore_InfoRecord *new_ADXViewInfoStore_InfoRecord_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXViewInfoStore_InfoRecord *create_ADXViewInfoStore_InfoRecord_init(void);

@implementation ADXViewInfoStore

- (instancetype)initPackagePrivate {
  ADXViewInfoStore_initPackagePrivate(self);
  return self;
}

- (void)clear {
  [((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) clear];
  [((ADLongSparseArray *) nil_chk(mOldChangedHolders_)) clear];
}

- (void)addToPreLayoutWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder
     withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)info {
  ADXViewInfoStore_InfoRecord *record = JreRetainedLocalValue([((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) getWithId:holder]);
  if (record == nil) {
    record = ADXViewInfoStore_InfoRecord_obtain();
    [mLayoutHolderMap_ putWithId:holder withId:record];
  }
  JreStrongAssign(&((ADXViewInfoStore_InfoRecord *) nil_chk(record))->preInfo_, info);
  record->flags_ |= ADXViewInfoStore_InfoRecord_FLAG_PRE;
}

- (jboolean)isDisappearingWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder {
  ADXViewInfoStore_InfoRecord *record = [((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) getWithId:holder];
  return record != nil && ((record->flags_ & ADXViewInfoStore_InfoRecord_FLAG_DISAPPEARED) != 0);
}

- (ADXRecyclerView_ItemAnimator_ItemHolderInfo *)popFromPreLayoutWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)vh {
  return ADXViewInfoStore_popFromLayoutStepWithADXRecyclerView_ViewHolder_withInt_(self, vh, ADXViewInfoStore_InfoRecord_FLAG_PRE);
}

- (ADXRecyclerView_ItemAnimator_ItemHolderInfo *)popFromPostLayoutWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)vh {
  return ADXViewInfoStore_popFromLayoutStepWithADXRecyclerView_ViewHolder_withInt_(self, vh, ADXViewInfoStore_InfoRecord_FLAG_POST);
}

- (ADXRecyclerView_ItemAnimator_ItemHolderInfo *)popFromLayoutStepWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)vh
                                                                                         withInt:(jint)flag {
  return ADXViewInfoStore_popFromLayoutStepWithADXRecyclerView_ViewHolder_withInt_(self, vh, flag);
}

- (void)addToOldChangeHoldersWithLong:(jlong)key
       withADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder {
  [((ADLongSparseArray *) nil_chk(mOldChangedHolders_)) putWithLong:key withId:holder];
}

- (void)addToAppearedInPreLayoutHoldersWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder
                      withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)info {
  ADXViewInfoStore_InfoRecord *record = JreRetainedLocalValue([((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) getWithId:holder]);
  if (record == nil) {
    record = ADXViewInfoStore_InfoRecord_obtain();
    [mLayoutHolderMap_ putWithId:holder withId:record];
  }
  ((ADXViewInfoStore_InfoRecord *) nil_chk(record))->flags_ |= ADXViewInfoStore_InfoRecord_FLAG_APPEAR;
  JreStrongAssign(&record->preInfo_, info);
}

- (jboolean)isInPreLayoutWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder {
  ADXViewInfoStore_InfoRecord *record = [((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) getWithId:viewHolder];
  return record != nil && (record->flags_ & ADXViewInfoStore_InfoRecord_FLAG_PRE) != 0;
}

- (ADXRecyclerView_ViewHolder *)getFromOldChangeHoldersWithLong:(jlong)key {
  return [((ADLongSparseArray *) nil_chk(mOldChangedHolders_)) getWithLong:key];
}

- (void)addToPostLayoutWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder
      withADXRecyclerView_ItemAnimator_ItemHolderInfo:(ADXRecyclerView_ItemAnimator_ItemHolderInfo *)info {
  ADXViewInfoStore_InfoRecord *record = JreRetainedLocalValue([((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) getWithId:holder]);
  if (record == nil) {
    record = ADXViewInfoStore_InfoRecord_obtain();
    [mLayoutHolderMap_ putWithId:holder withId:record];
  }
  JreStrongAssign(&((ADXViewInfoStore_InfoRecord *) nil_chk(record))->postInfo_, info);
  record->flags_ |= ADXViewInfoStore_InfoRecord_FLAG_POST;
}

- (void)addToDisappearedInLayoutWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder {
  ADXViewInfoStore_InfoRecord *record = JreRetainedLocalValue([((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) getWithId:holder]);
  if (record == nil) {
    record = ADXViewInfoStore_InfoRecord_obtain();
    [mLayoutHolderMap_ putWithId:holder withId:record];
  }
  ((ADXViewInfoStore_InfoRecord *) nil_chk(record))->flags_ |= ADXViewInfoStore_InfoRecord_FLAG_DISAPPEARED;
}

- (void)removeFromDisappearedInLayoutWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder {
  ADXViewInfoStore_InfoRecord *record = JreRetainedLocalValue([((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) getWithId:holder]);
  if (record == nil) {
    return;
  }
  record->flags_ &= ~ADXViewInfoStore_InfoRecord_FLAG_DISAPPEARED;
}

- (void)processWithADXViewInfoStore_ProcessCallback:(id<ADXViewInfoStore_ProcessCallback>)callback {
  for (jint index = [((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) size] - 1; index >= 0; index--) {
    ADXRecyclerView_ViewHolder *viewHolder = [mLayoutHolderMap_ keyAtWithInt:index];
    ADXViewInfoStore_InfoRecord *record = [mLayoutHolderMap_ removeAtWithInt:index];
    if ((((ADXViewInfoStore_InfoRecord *) nil_chk(record))->flags_ & ADXViewInfoStore_InfoRecord_FLAG_APPEAR_AND_DISAPPEAR) == ADXViewInfoStore_InfoRecord_FLAG_APPEAR_AND_DISAPPEAR) {
      [((id<ADXViewInfoStore_ProcessCallback>) nil_chk(callback)) unusedWithADXRecyclerView_ViewHolder:viewHolder];
    }
    else if ((record->flags_ & ADXViewInfoStore_InfoRecord_FLAG_DISAPPEARED) != 0) {
      if (record->preInfo_ == nil) {
        [((id<ADXViewInfoStore_ProcessCallback>) nil_chk(callback)) unusedWithADXRecyclerView_ViewHolder:viewHolder];
      }
      else {
        [((id<ADXViewInfoStore_ProcessCallback>) nil_chk(callback)) processDisappearedWithADXRecyclerView_ViewHolder:viewHolder withADXRecyclerView_ItemAnimator_ItemHolderInfo:record->preInfo_ withADXRecyclerView_ItemAnimator_ItemHolderInfo:record->postInfo_];
      }
    }
    else if ((record->flags_ & ADXViewInfoStore_InfoRecord_FLAG_APPEAR_PRE_AND_POST) == ADXViewInfoStore_InfoRecord_FLAG_APPEAR_PRE_AND_POST) {
      [((id<ADXViewInfoStore_ProcessCallback>) nil_chk(callback)) processAppearedWithADXRecyclerView_ViewHolder:viewHolder withADXRecyclerView_ItemAnimator_ItemHolderInfo:record->preInfo_ withADXRecyclerView_ItemAnimator_ItemHolderInfo:record->postInfo_];
    }
    else if ((record->flags_ & ADXViewInfoStore_InfoRecord_FLAG_PRE_AND_POST) == ADXViewInfoStore_InfoRecord_FLAG_PRE_AND_POST) {
      [((id<ADXViewInfoStore_ProcessCallback>) nil_chk(callback)) processPersistentWithADXRecyclerView_ViewHolder:viewHolder withADXRecyclerView_ItemAnimator_ItemHolderInfo:record->preInfo_ withADXRecyclerView_ItemAnimator_ItemHolderInfo:record->postInfo_];
    }
    else if ((record->flags_ & ADXViewInfoStore_InfoRecord_FLAG_PRE) != 0) {
      [((id<ADXViewInfoStore_ProcessCallback>) nil_chk(callback)) processDisappearedWithADXRecyclerView_ViewHolder:viewHolder withADXRecyclerView_ItemAnimator_ItemHolderInfo:record->preInfo_ withADXRecyclerView_ItemAnimator_ItemHolderInfo:nil];
    }
    else if ((record->flags_ & ADXViewInfoStore_InfoRecord_FLAG_POST) != 0) {
      [((id<ADXViewInfoStore_ProcessCallback>) nil_chk(callback)) processAppearedWithADXRecyclerView_ViewHolder:viewHolder withADXRecyclerView_ItemAnimator_ItemHolderInfo:record->preInfo_ withADXRecyclerView_ItemAnimator_ItemHolderInfo:record->postInfo_];
    }
    else if ((record->flags_ & ADXViewInfoStore_InfoRecord_FLAG_APPEAR) != 0) {
    }
    ADXViewInfoStore_InfoRecord_recycleWithADXViewInfoStore_InfoRecord_(record);
  }
}

- (void)removeViewHolderWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)holder {
  for (jint i = [((ADLongSparseArray *) nil_chk(mOldChangedHolders_)) size] - 1; i >= 0; i--) {
    if (holder == [mOldChangedHolders_ valueAtWithInt:i]) {
      [mOldChangedHolders_ removeAtWithInt:i];
      break;
    }
  }
  ADXViewInfoStore_InfoRecord *info = [((ADXSimpleArrayMap *) nil_chk(mLayoutHolderMap_)) removeWithId:holder];
  if (info != nil) {
    ADXViewInfoStore_InfoRecord_recycleWithADXViewInfoStore_InfoRecord_(info);
  }
}

- (void)onDetach {
  ADXViewInfoStore_InfoRecord_drainCache();
}

- (void)onViewDetachedWithADXRecyclerView_ViewHolder:(ADXRecyclerView_ViewHolder *)viewHolder {
  [self removeFromDisappearedInLayoutWithADXRecyclerView_ViewHolder:viewHolder];
}

- (void)dealloc {
  RELEASE_(mLayoutHolderMap_);
  RELEASE_(mOldChangedHolders_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "LADXRecyclerView_ItemAnimator_ItemHolderInfo;", 0x0, 4, 3, -1, -1, -1, -1 },
    { NULL, "LADXRecyclerView_ItemAnimator_ItemHolderInfo;", 0x0, 5, 3, -1, -1, -1, -1 },
    { NULL, "LADXRecyclerView_ItemAnimator_ItemHolderInfo;", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 10, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 11, 3, -1, -1, -1, -1 },
    { NULL, "LADXRecyclerView_ViewHolder;", 0x0, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 14, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 16, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 19, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(clear);
  methods[2].selector = @selector(addToPreLayoutWithADXRecyclerView_ViewHolder:withADXRecyclerView_ItemAnimator_ItemHolderInfo:);
  methods[3].selector = @selector(isDisappearingWithADXRecyclerView_ViewHolder:);
  methods[4].selector = @selector(popFromPreLayoutWithADXRecyclerView_ViewHolder:);
  methods[5].selector = @selector(popFromPostLayoutWithADXRecyclerView_ViewHolder:);
  methods[6].selector = @selector(popFromLayoutStepWithADXRecyclerView_ViewHolder:withInt:);
  methods[7].selector = @selector(addToOldChangeHoldersWithLong:withADXRecyclerView_ViewHolder:);
  methods[8].selector = @selector(addToAppearedInPreLayoutHoldersWithADXRecyclerView_ViewHolder:withADXRecyclerView_ItemAnimator_ItemHolderInfo:);
  methods[9].selector = @selector(isInPreLayoutWithADXRecyclerView_ViewHolder:);
  methods[10].selector = @selector(getFromOldChangeHoldersWithLong:);
  methods[11].selector = @selector(addToPostLayoutWithADXRecyclerView_ViewHolder:withADXRecyclerView_ItemAnimator_ItemHolderInfo:);
  methods[12].selector = @selector(addToDisappearedInLayoutWithADXRecyclerView_ViewHolder:);
  methods[13].selector = @selector(removeFromDisappearedInLayoutWithADXRecyclerView_ViewHolder:);
  methods[14].selector = @selector(processWithADXViewInfoStore_ProcessCallback:);
  methods[15].selector = @selector(removeViewHolderWithADXRecyclerView_ViewHolder:);
  methods[16].selector = @selector(onDetach);
  methods[17].selector = @selector(onViewDetachedWithADXRecyclerView_ViewHolder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEBUG", "Z", .constantValue.asBOOL = ADXViewInfoStore_DEBUG, 0x1a, -1, -1, -1, -1 },
    { "mLayoutHolderMap_", "LADXSimpleArrayMap;", .constantValue.asLong = 0, 0x10, -1, -1, 21, -1 },
    { "mOldChangedHolders_", "LADLongSparseArray;", .constantValue.asLong = 0, 0x10, -1, -1, 22, -1 },
  };
  static const void *ptrTable[] = { "addToPreLayout", "LADXRecyclerView_ViewHolder;LADXRecyclerView_ItemAnimator_ItemHolderInfo;", "isDisappearing", "LADXRecyclerView_ViewHolder;", "popFromPreLayout", "popFromPostLayout", "popFromLayoutStep", "LADXRecyclerView_ViewHolder;I", "addToOldChangeHolders", "JLADXRecyclerView_ViewHolder;", "addToAppearedInPreLayoutHolders", "isInPreLayout", "getFromOldChangeHolders", "J", "addToPostLayout", "addToDisappearedInLayout", "removeFromDisappearedInLayout", "process", "LADXViewInfoStore_ProcessCallback;", "removeViewHolder", "onViewDetached", "Landroidx/collection/SimpleArrayMap<Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/ViewInfoStore$InfoRecord;>;", "Lr/android/util/LongSparseArray<Landroidx/recyclerview/widget/RecyclerView$ViewHolder;>;", "LADXViewInfoStore_ProcessCallback;LADXViewInfoStore_InfoRecord;" };
  static const J2ObjcClassInfo _ADXViewInfoStore = { "ViewInfoStore", "androidx.recyclerview.widget", ptrTable, methods, fields, 7, 0x0, 18, 3, -1, 23, -1, -1, -1 };
  return &_ADXViewInfoStore;
}

@end

void ADXViewInfoStore_initPackagePrivate(ADXViewInfoStore *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mLayoutHolderMap_, new_ADXSimpleArrayMap_init());
  JreStrongAssignAndConsume(&self->mOldChangedHolders_, new_ADLongSparseArray_init());
}

ADXViewInfoStore *new_ADXViewInfoStore_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ADXViewInfoStore, initPackagePrivate)
}

ADXViewInfoStore *create_ADXViewInfoStore_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ADXViewInfoStore, initPackagePrivate)
}

ADXRecyclerView_ItemAnimator_ItemHolderInfo *ADXViewInfoStore_popFromLayoutStepWithADXRecyclerView_ViewHolder_withInt_(ADXViewInfoStore *self, ADXRecyclerView_ViewHolder *vh, jint flag) {
  jint index = [((ADXSimpleArrayMap *) nil_chk(self->mLayoutHolderMap_)) indexOfKeyWithId:vh];
  if (index < 0) {
    return nil;
  }
  ADXViewInfoStore_InfoRecord *record = [self->mLayoutHolderMap_ valueAtWithInt:index];
  if (record != nil && (record->flags_ & flag) != 0) {
    record->flags_ &= ~flag;
    ADXRecyclerView_ItemAnimator_ItemHolderInfo *info;
    if (flag == ADXViewInfoStore_InfoRecord_FLAG_PRE) {
      info = record->preInfo_;
    }
    else if (flag == ADXViewInfoStore_InfoRecord_FLAG_POST) {
      info = record->postInfo_;
    }
    else {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Must provide flag PRE or POST");
    }
    if ((record->flags_ & (ADXViewInfoStore_InfoRecord_FLAG_PRE | ADXViewInfoStore_InfoRecord_FLAG_POST)) == 0) {
      [self->mLayoutHolderMap_ removeAtWithInt:index];
      ADXViewInfoStore_InfoRecord_recycleWithADXViewInfoStore_InfoRecord_(record);
    }
    return info;
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewInfoStore)

@implementation ADXViewInfoStore_ProcessCallback

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(processDisappearedWithADXRecyclerView_ViewHolder:withADXRecyclerView_ItemAnimator_ItemHolderInfo:withADXRecyclerView_ItemAnimator_ItemHolderInfo:);
  methods[1].selector = @selector(processAppearedWithADXRecyclerView_ViewHolder:withADXRecyclerView_ItemAnimator_ItemHolderInfo:withADXRecyclerView_ItemAnimator_ItemHolderInfo:);
  methods[2].selector = @selector(processPersistentWithADXRecyclerView_ViewHolder:withADXRecyclerView_ItemAnimator_ItemHolderInfo:withADXRecyclerView_ItemAnimator_ItemHolderInfo:);
  methods[3].selector = @selector(unusedWithADXRecyclerView_ViewHolder:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "processDisappeared", "LADXRecyclerView_ViewHolder;LADXRecyclerView_ItemAnimator_ItemHolderInfo;LADXRecyclerView_ItemAnimator_ItemHolderInfo;", "processAppeared", "processPersistent", "unused", "LADXRecyclerView_ViewHolder;", "LADXViewInfoStore;" };
  static const J2ObjcClassInfo _ADXViewInfoStore_ProcessCallback = { "ProcessCallback", "androidx.recyclerview.widget", ptrTable, methods, NULL, 7, 0x608, 4, 0, 6, -1, -1, -1, -1 };
  return &_ADXViewInfoStore_ProcessCallback;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXViewInfoStore_ProcessCallback)

J2OBJC_INITIALIZED_DEFN(ADXViewInfoStore_InfoRecord)

id<ADPools_Pool> ADXViewInfoStore_InfoRecord_sPool;

@implementation ADXViewInfoStore_InfoRecord

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXViewInfoStore_InfoRecord_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ADXViewInfoStore_InfoRecord *)obtain {
  return ADXViewInfoStore_InfoRecord_obtain();
}

+ (void)recycleWithADXViewInfoStore_InfoRecord:(ADXViewInfoStore_InfoRecord *)record {
  ADXViewInfoStore_InfoRecord_recycleWithADXViewInfoStore_InfoRecord_(record);
}

+ (void)drainCache {
  ADXViewInfoStore_InfoRecord_drainCache();
}

- (void)dealloc {
  RELEASE_(preInfo_);
  RELEASE_(postInfo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXViewInfoStore_InfoRecord;", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(obtain);
  methods[2].selector = @selector(recycleWithADXViewInfoStore_InfoRecord:);
  methods[3].selector = @selector(drainCache);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FLAG_DISAPPEARED", "I", .constantValue.asInt = ADXViewInfoStore_InfoRecord_FLAG_DISAPPEARED, 0x18, -1, -1, -1, -1 },
    { "FLAG_APPEAR", "I", .constantValue.asInt = ADXViewInfoStore_InfoRecord_FLAG_APPEAR, 0x18, -1, -1, -1, -1 },
    { "FLAG_PRE", "I", .constantValue.asInt = ADXViewInfoStore_InfoRecord_FLAG_PRE, 0x18, -1, -1, -1, -1 },
    { "FLAG_POST", "I", .constantValue.asInt = ADXViewInfoStore_InfoRecord_FLAG_POST, 0x18, -1, -1, -1, -1 },
    { "FLAG_APPEAR_AND_DISAPPEAR", "I", .constantValue.asInt = ADXViewInfoStore_InfoRecord_FLAG_APPEAR_AND_DISAPPEAR, 0x18, -1, -1, -1, -1 },
    { "FLAG_PRE_AND_POST", "I", .constantValue.asInt = ADXViewInfoStore_InfoRecord_FLAG_PRE_AND_POST, 0x18, -1, -1, -1, -1 },
    { "FLAG_APPEAR_PRE_AND_POST", "I", .constantValue.asInt = ADXViewInfoStore_InfoRecord_FLAG_APPEAR_PRE_AND_POST, 0x18, -1, -1, -1, -1 },
    { "flags_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "preInfo_", "LADXRecyclerView_ItemAnimator_ItemHolderInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "postInfo_", "LADXRecyclerView_ItemAnimator_ItemHolderInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sPool", "LADPools_Pool;", .constantValue.asLong = 0, 0x8, -1, 2, 3, -1 },
  };
  static const void *ptrTable[] = { "recycle", "LADXViewInfoStore_InfoRecord;", &ADXViewInfoStore_InfoRecord_sPool, "Lr/android/util/Pools$Pool<Landroidx/recyclerview/widget/ViewInfoStore$InfoRecord;>;", "LADXViewInfoStore;" };
  static const J2ObjcClassInfo _ADXViewInfoStore_InfoRecord = { "InfoRecord", "androidx.recyclerview.widget", ptrTable, methods, fields, 7, 0x8, 4, 11, 4, -1, -1, -1, -1 };
  return &_ADXViewInfoStore_InfoRecord;
}

+ (void)initialize {
  if (self == [ADXViewInfoStore_InfoRecord class]) {
    JreStrongAssignAndConsume(&ADXViewInfoStore_InfoRecord_sPool, new_ADPools_SimplePool_initWithInt_(20));
    J2OBJC_SET_INITIALIZED(ADXViewInfoStore_InfoRecord)
  }
}

@end

void ADXViewInfoStore_InfoRecord_init(ADXViewInfoStore_InfoRecord *self) {
  NSObject_init(self);
}

ADXViewInfoStore_InfoRecord *new_ADXViewInfoStore_InfoRecord_init() {
  J2OBJC_NEW_IMPL(ADXViewInfoStore_InfoRecord, init)
}

ADXViewInfoStore_InfoRecord *create_ADXViewInfoStore_InfoRecord_init() {
  J2OBJC_CREATE_IMPL(ADXViewInfoStore_InfoRecord, init)
}

ADXViewInfoStore_InfoRecord *ADXViewInfoStore_InfoRecord_obtain() {
  ADXViewInfoStore_InfoRecord_initialize();
  ADXViewInfoStore_InfoRecord *record = JreRetainedLocalValue([((id<ADPools_Pool>) nil_chk(ADXViewInfoStore_InfoRecord_sPool)) acquire]);
  return record == nil ? create_ADXViewInfoStore_InfoRecord_init() : record;
}

void ADXViewInfoStore_InfoRecord_recycleWithADXViewInfoStore_InfoRecord_(ADXViewInfoStore_InfoRecord *record) {
  ADXViewInfoStore_InfoRecord_initialize();
  ((ADXViewInfoStore_InfoRecord *) nil_chk(record))->flags_ = 0;
  JreStrongAssign(&record->preInfo_, nil);
  JreStrongAssign(&record->postInfo_, nil);
  [((id<ADPools_Pool>) nil_chk(ADXViewInfoStore_InfoRecord_sPool)) release__WithId:record];
}

void ADXViewInfoStore_InfoRecord_drainCache() {
  ADXViewInfoStore_InfoRecord_initialize();
  while ([((id<ADPools_Pool>) nil_chk(ADXViewInfoStore_InfoRecord_sPool)) acquire] != nil) ;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXViewInfoStore_InfoRecord)
